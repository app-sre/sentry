{"version":3,"sources":["webpack:///./app/views/organizationDiscover/data.jsx","webpack:///./app/views/organizationDiscover/utils.jsx","webpack:///(webpack)/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_duplex.js","webpack:///./app/views/organizationDiscover/aggregations/utils.jsx","webpack:////usr/src/sentry/node_modules/core-util-is/lib/util.js","webpack:///(webpack)/node_modules/process-nextick-args/index.js","webpack:///(webpack)/node_modules/safe-buffer/index.js","webpack:///./app/views/organizationDiscover/result/utils.jsx","webpack:///(webpack)/node_modules/stream-browserify/node_modules/readable-stream/readable-browser.js","webpack:///(webpack)/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_writable.js","webpack:////usr/src/sentry/node_modules/echarts/lib/chart/bar.js","webpack:////usr/src/sentry/node_modules/echarts/lib/chart/bar/BaseBarSeries.js","webpack:////usr/src/sentry/node_modules/echarts/lib/chart/bar/helper.js","webpack:///(webpack)/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_readable.js","webpack:////usr/src/sentry/node_modules/isarray/index.js","webpack:///(webpack)/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/stream-browser.js","webpack:///(webpack)/node_modules/buffer/index.js","webpack:///(webpack)/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/destroy.js","webpack:///(webpack)/node_modules/string_decoder/lib/string_decoder.js","webpack:///(webpack)/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_transform.js","webpack:///./app/views/organizationDiscover/missingProjectWarningModal.jsx","webpack:///./app/views/organizationDiscover/queryBuilder.jsx","webpack:///./app/components/charts/barChart.jsx","webpack:///./app/components/charts/series/barSeries.jsx","webpack:////usr/src/sentry/node_modules/echarts/lib/chart/bar/BarSeries.js","webpack:////usr/src/sentry/node_modules/echarts/lib/chart/bar/BarView.js","webpack:////usr/src/sentry/node_modules/echarts/lib/chart/bar/barItemStyle.js","webpack:////usr/src/sentry/node_modules/lodash/orderBy.js","webpack:////usr/src/sentry/node_modules/papaparse/papaparse.js","webpack:///(webpack)/node_modules/stream-browserify/index.js","webpack:///(webpack)/node_modules/base64-js/index.js","webpack:////usr/src/sentry/node_modules/ieee754/index.js","webpack:///(webpack)/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/BufferList.js","webpack:///(webpack)/node_modules/timers-browserify/main.js","webpack:////usr/src/sentry/node_modules/setimmediate/setImmediate.js","webpack:////usr/src/sentry/node_modules/util-deprecate/browser.js","webpack:///(webpack)/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_passthrough.js","webpack:///(webpack)/node_modules/stream-browserify/node_modules/readable-stream/writable-browser.js","webpack:///(webpack)/node_modules/stream-browserify/node_modules/readable-stream/duplex-browser.js","webpack:///(webpack)/node_modules/stream-browserify/node_modules/readable-stream/transform.js","webpack:///(webpack)/node_modules/stream-browserify/node_modules/readable-stream/passthrough.js"],"names":["__webpack_require__","d","__webpack_exports__","PROMOTED_TAGS","SPECIAL_TAGS","HIDDEN_TAGS","COLUMNS","NON_SNUBA_FIELDS","NON_CONDITIONS_FIELDS","OPERATOR","CONDITION_OPERATORS","NEGATION_OPERATORS","NULL_OPERATORS","WILDCARD_OPERATORS","ARRAY_FIELD_PREFIXES","NUMBER_OF_SERIES_BY_DAY","TYPES","os_rooted","name","type","concat","GREATER_THAN","LESS_THAN","GREATER_THAN_OR_EQUAL","LESS_THAN_OR_EQUAL","EQUAL","NOT_EQUAL","IS_NULL","IS_NOT_NULL","LIKE","NOT_LIKE","Object","values","VALID_QUERY_KEYS","getQueryFromQueryString","queryString","queryKeys","Set","result","parsedQuery","replace","split","forEach","item","includes","_item$split","_item$split2","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_2___default","key","value","has","JSON","parse","decodeURIComponent","getQueryStringFromQuery","query","queryParams","arguments","length","undefined","queryProperties","entries","map","_ref","_ref2","encodeURIComponent","stringify","_ref3","_ref4","push","sort","join","getOrderbyFields","queryBuilder","columns","getColumns","getInternal","validAggregations","aggregations","filter","agg","isValidAggregation","hasAggregations","hasFields","fields","columnOptions","reduce","acc","_ref5","isInvalidField","_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default","label","aggregationOptions","aggregation","getView","params","requestedView","savedQueryId","queryHasChanged","prev","next","lodash_isEqual__WEBPACK_IMPORTED_MODULE_4___default","lodash_pick__WEBPACK_IMPORTED_MODULE_3___default","qs","parseSavedQuery","savedQuery","id","dateCreated","dateUpdated","createdBy","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0___default","fetchSavedQuery","organization","queryId","api","Client","endpoint","slug","requestPromise","method","fetchSavedQueries","createSavedQuery","data","updateSavedQuery","deleteSavedQuery","generateQueryName","moment","utc","format","pna","objectKeys","keys","obj","module","exports","Duplex","util","inherits","Readable","Writable","prototype","v","options","this","call","readable","writable","allowHalfOpen","once","onend","_writableState","ended","nextTick","onEndNT","self","end","defineProperty","enumerable","get","highWaterMark","_readableState","destroyed","set","_destroy","err","cb","cols","_aggregation","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default","func","col","external","_external","getAlias","columnName","tagMatch","match","getExternal","internal","uniqRegex","avgRegex","column","Buffer","objectToString","o","toString","isArray","arg","Array","isBoolean","isNull","isNullOrUndefined","isNumber","isString","isSymbol","isUndefined","isRegExp","re","isObject","isDate","isError","e","Error","isFunction","isPrimitive","isBuffer","process","version","indexOf","fn","arg1","arg2","arg3","TypeError","args","i","len","apply","buffer","copyProps","src","dst","SafeBuffer","encodingOrOffset","from","alloc","allocUnsafe","allocUnsafeSlow","size","fill","encoding","buf","SlowBuffer","CHART_KEY","getChartData","seriesName","res","field","getChartDataForWidget","totalsBySeries","Map","includePercentages","total","fieldValues","percentage","Math","round","getChartDataByDay","rawData","aggregate","row","hasOwnProperty","_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default","console","error","fieldLabelMap","getLabel","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default","getDataWithKeys","top10Series","limit","allData","lodash_orderBy__WEBPACK_IMPORTED_MODULE_5___default","orderedData","_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_4___default","slice","getTopSeries","allSeries","dates","entry","formatDate","time","reverse","seriesHash","seriesSet","output","series","date","getEmptySeries","getEmptySeriesHash","dateIdx","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3___default","getVisualization","current","baseQuery","byDayQuery","getRowsPageRange","dataLength","startRange","parseInt","datetime","getDisplayValue","val","idx","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","DarkGray","toLocaleString","LightGray","curr","arrayIdx","getDisplayText","styled","target","p","theme","gray1","gray5","downloadAsCsv","meta","headings","csvContent","Papa","unparse","disableMacros","encodedDataUrl","encodeURI","window","location","assign","Stream","Transform","PassThrough","setImmediate","global","CorkedRequest","state","_this","finish","corkReq","callback","pendingcb","corkedRequestsFree","onCorkedFinish","asyncWrite","browser","WritableState","internalUtil","deprecate","OurUint8Array","Uint8Array","realHasInstance","destroyImpl","nop","stream","isDuplex","objectMode","writableObjectMode","hwm","writableHwm","writableHighWaterMark","defaultHwm","floor","finalCalled","needDrain","ending","finished","noDecode","decodeStrings","defaultEncoding","writing","corked","sync","bufferProcessing","onwrite","er","writecb","writelen","onwriteStateUpdate","finishMaybe","errorEmitted","emit","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","prefinished","bufferedRequestCount","write","_write","writev","_writev","destroy","final","_final","doWrite","chunk","onwriteDrain","l","holder","count","allBuffers","isBuf","callFinal","need","prefinish","getBuffer","out","_","Symbol","hasInstance","Function","object","pipe","ret","_uint8ArrayToBuffer","writeAfterEnd","valid","validChunk","newChunk","decodeChunk","last","writeOrBuffer","cork","uncork","setDefaultEncoding","toLowerCase","endWritable","_undestroy","undestroy","echarts","zrUtil","_barGrid","layout","largeLayout","registerLayout","curry","registerVisual","seriesType","reset","seriesModel","getData","setVisual","SeriesModel","createListFromArray","_default","extend","getInitialData","option","ecModel","getSource","getMarkerPosition","coordSys","coordinateSystem","pt","dataToPoint","clampData","offset","getLayout","getBaseAxis","isHorizontal","NaN","defaultOption","zlevel","z","legendHoverLink","barMinHeight","barMinAngle","large","largeThreshold","progressive","progressiveChunkMode","itemStyle","emphasis","graphic","getDefaultLabel","fixPosition","style","labelPositionOutside","textPosition","setLabel","normalStyle","hoverStyle","itemModel","color","dataIndex","labelModel","getModel","hoverLabelModel","setLabelStyle","labelFetcher","labelDataIndex","defaultText","isRectText","autoColor","ReadableState","EventEmitter","EElistenerCount","emitter","listeners","debugUtil","debug","debuglog","StringDecoder","BufferList","kProxyEvents","readableObjectMode","readableHwm","readableHighWaterMark","pipes","pipesCount","flowing","endEmitted","reading","needReadable","emittedReadable","readableListening","resumeScheduled","awaitDrain","readingMore","decoder","read","_read","readableAddChunk","addToFront","skipChunkCheck","emitReadable","onEofChunk","chunkInvalid","getPrototypeOf","addChunk","maybeReadMore","needMoreData","unshift","isPaused","setEncoding","enc","MAX_HWM","howMuchToRead","n","head","computeNewHighWaterMark","emitReadable_","flow","maybeReadMore_","nReadingNextTick","resume_","fromList","shift","clear","list","hasStrings","c","str","nb","tail","copyFromBufferString","copy","copyFromBuffer","fromListPartial","endReadable","endReadableNT","xs","x","nOrig","doRead","dest","pipeOpts","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","removeListener","onclose","onfinish","ondrain","onerror","ondata","cleanedUp","on","pipeOnDrain","increasedAwaitDrain","pause","event","prependListener","_events","resume","dests","index","splice","ev","addListener","wrap","paused","bind","_fromList","arr","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","ArrayBuffer","array","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","string","isEncoding","actual","fromString","checked","fromObject","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","swap","b","m","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","String","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","byteArray","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","start","fromByteArray","utf8Slice","min","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","species","configurable","_isBuffer","compare","y","pos","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","max","thisStart","thisEnd","thisCopy","targetCopy","isFinite","toJSON","_arr","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","stringtrim","base64clean","emitErrorNT","readableDestroyed","writableDestroyed","nenc","retried","_normalizeEncoding","normalizeEncoding","text","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","byte","r","repeat","utf8CheckExtraBytes","utf8CheckIncomplete","afterTransform","ts","_transformState","transforming","writechunk","rs","needTransform","writeencoding","transform","_transform","flush","_flush","done","_this2","err2","MissingProjectWarningModal","project","props","projects","find","react_default","t","Modal_default","show","Modal","renderProject","components_button","priority","onClick","closeModal","React","Component","propTypes","SentryTypes","Organization","isRequired","PropTypes","arrayOf","number","API_LIMIT","DEFAULTS","conditions","range","DEFAULT_STATS_PERIOD","orderby","applyDefaults","slicedToArray_default","createQueryBuilder","initial","defaultProjects","isMember","objectSpread_default","isTag","tags","updateField","orderbyField","hasOrderFieldInFields","f","hasOrderFieldInSelectedFields","hasOrderFieldInAggregations","some","fetch","fetchWithoutLimit","Promise","reject","isAfter","catch","cancelRequests","getQueryByType","originalQuery","groupby","rollup","uniq_default","toConsumableArray_default","load","turbo","then","tag","tags_key","q","invalidProjects","openModal","deps","missingProjectWarningModal_MissingProjectWarningModal","extends_default","cursor","includeAllArgs","responseData","utils","pageLinks","getResponseHeader","BarChart","_this$props","stacked","xAxis","objectWithoutProperties_default","baseChart","boundaryGap","s","BarSeries","stack","BaseChart","dependencies","brushSelector","getProgressive","getProgressiveThreshold","progressiveThreshold","__DEV__","Model","barItemStyle","Path","BAR_BORDER_WIDTH_QUERY","extendChartView","render","_updateDrawMode","coordinateSystemType","_isLargeDraw","_renderLarge","_renderNormal","group","incrementalPrepareRender","_clear","incrementalRender","_incrementalRenderLarge","isLargeDraw","pipelineContext","isHorizontalOrRadial","oldData","_data","coord","baseAxis","dim","animationModel","isAnimationEnabled","diff","add","hasValue","getItemModel","el","elementCreator","setItemGraphicEl","updateStyle","update","newIndex","oldIndex","getItemGraphicEl","updateProps","shape","remove","removeRect","removeSector","execute","createLarge","dispose","noop","eachItemGraphicEl","removeAll","cartesian2d","isUpdate","rect","Rect","animateProperty","animateTarget","polar","isRadial","clockwise","startAngle","endAngle","sector","Sector","defaults","width","parent","r0","getItemLayout","fixedLineWidth","rawLayout","lineWidth","abs","height","getLineWidth","signX","signY","cx","cy","isPolar","getItemVisual","opacity","itemStyleModel","getBarItemStyle","setShape","useStyle","cursorStyle","getShallow","attr","setHoverStyle","LargePath","points","buildPath","ctx","startPoint","__startPoint","valueIdx","__valueIdx","moveTo","lineTo","incremental","borderColor","getVisual","getItemStyle","stroke","setLargeStyle","makeStyleMapper","excludes","getBorderLineDash","lineDash","baseOrderBy","collection","iteratees","orders","guard","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","AUTO_SCRIPT_PATH","scripts","IS_WORKER","document","postMessage","IS_PAPA_WORKER","test","search","LOADED_SYNC","workers","workerIdCounter","_input","_config","dynamicTyping","dynamicTypingFunction","worker","WORKERS_SUPPORTED","w","SCRIPT_PATH","workerUrl","Worker","onmessage","mainThreadReceivedMessage","newWorker","userStep","step","userChunk","userComplete","complete","userError","input","config","workerId","streamer","NODE_STREAM_INPUT","DuplexStreamStreamer","getStream","download","NetworkStreamer","StringStreamer","ReadableStreamStreamer","File","FileStreamer","_quotes","_writeHeader","_delimiter","_newline","_quoteChar","delimiter","BAD_DELIMITERS","quotes","newline","quoteChar","header","quoteCharRegex","RegExp","serialize","csv","hasHeader","dataKeyedByField","safe","maxCol","colIdx","constructor","Date","needsQuotes","substrings","hasAny","charAt","RECORD_SEP","UNIT_SEP","BYTE_ORDER_MARK","LocalChunkSize","RemoteChunkSize","DefaultDelimiter","Parser","ParserHandle","jQuery","$","queue","each","supported","prop","toUpperCase","FileReader","files","file","inputElem","instanceConfig","parseNextFile","elem","reason","before","returned","action","fileComplete","userCompleteFunc","results","ChunkStreamer","_handle","_finished","_completed","_baseIndex","_partialLine","_rowCount","_start","_nextChunk","isFirstChunk","_completeResults","errors","configCopy","chunkSize","parseChunk","isFakeChunk","beforeFirstChunk","modifiedChunk","aborted","lastIndex","substring","finishedIncludingPreview","preview","WORKER_ID","_sendError","xhr","_readChunk","_chunkLoaded","url","XMLHttpRequest","withCredentials","onload","bindFunction","_chunkError","open","downloadRequestHeaders","headers","headerName","setRequestHeader","send","message","status","readyState","contentRange","getFileSize","responseText","errorMessage","errorText","statusText","reader","usingAsyncReader","webkitSlice","mozSlice","FileReaderSync","txt","readAsText","parseOnData","streamHasEnded","_streamData","_streamEnd","_streamError","_checkIsFinished","_streamCleanUp","parseOnWrite","writeStreamHasFinished","parseCallbackQueue","_onCsvData","_onCsvComplete","_addToParseQueue","_onRead","_onWrite","_onWriteComplete","_parser","_delimiterError","FLOAT","ISO_DATE","_stepCounter","_rowCounter","_paused","_aborted","_fields","_results","needsHeaderRow","processResults","abort","testEmptyLine","skipEmptyLines","addError","trimHeaders","fillHeaderFields","parseDynamic","applyHeaderAndDynamicTypingAndTransformation","shouldApplyDynamicTyping","parseFloat","msg","baseIndex","ignoreLastRow","escapeRegExp","nAppearsFirst","numWithN","guessLineEndings","delimGuess","comments","bestDelim","bestDelta","fieldCountPrevRow","delimChoices","delim","delta","avgFieldCount","emptyLinesCount","fieldCount","successful","bestDelimiter","guessDelimiter","parserConfig","getCharIndex","fastMode","escapeChar","inputLen","delimLen","newlineLen","commentsLen","stepIsFunction","lastCursor","returnable","rows","pushRow","doStep","quoteSearch","nextDelim","nextNewline","saveRow","checkUpTo","spacesBetweenQuoteAndDelimiter","extraSpaces","spacesBetweenQuoteAndNewLine","spaceLength","textBetweenClosingQuoteAndIndex","newCursor","stopped","linebreak","truncated","handle","completeWorker","notImplemented","terminate","cpy","getElementsByTagName","body","addEventListener","create","EE","source","_isStdio","didOnEnd","cleanup","listenerCount","b64","placeHoldersCount","tmp","placeHolders","Arr","L","revLookup","uint8","extraBytes","parts","len2","encodeChunk","lookup","num","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","log","LN2","instance","Constructor","_classCallCheck","custom","Timeout","clearFn","_id","_clearFn","setTimeout","clearTimeout","setInterval","clearInterval","timeout","close","unref","ref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","clearImmediate","registerImmediate","html","channel","messagePrefix","onGlobalMessage","nextHandle","tasksByHandle","currentlyRunningATask","doc","attachTo","runIfPresent","importScripts","postMessageIsAsynchronous","oldOnMessage","canUsePostMessage","MessageChannel","port1","port2","documentElement","script","onreadystatechange","removeChild","appendChild","random","attachEvent","task","run","localStorage","warned","trace","warn"],"mappings":"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","file":"OrganizationDiscover~OverviewDashboard.js","sourcesContent":["const TYPES = {\n  STRING: 'string',\n  NUMBER: 'number',\n  BOOLEAN: 'boolean',\n  DATETIME: 'datetime',\n};\n\nexport const PROMOTED_TAGS = [\n  'level',\n  'logger',\n  'server.name',\n  'transaction',\n  'environment',\n  'site',\n  'url',\n  'app.device',\n  'device',\n  'device.family',\n  'runtime',\n  'runtime.name',\n  'browser',\n  'browser.name',\n  'os',\n  'os.name',\n  'os.rooted',\n];\n\n// All tags are assumed to be strings, except the following\nexport const SPECIAL_TAGS = {\n  os_rooted: TYPES.BOOLEAN,\n};\n\n// Hide the following tags if they are returned from Snuba since these are\n// already mapped to user and release attributes\nexport const HIDDEN_TAGS = ['sentry:user', 'sentry:release'];\n\nexport const COLUMNS = [\n  {name: 'id', type: TYPES.STRING},\n  {name: 'issue.id', type: TYPES.NUMBER},\n  {name: 'project.id', type: TYPES.STRING},\n  {name: 'project.name', type: TYPES.STRING},\n  {name: 'platform', type: TYPES.STRING},\n  {name: 'message', type: TYPES.STRING},\n  {name: 'title', type: TYPES.STRING},\n  {name: 'location', type: TYPES.STRING},\n  {name: 'timestamp', type: TYPES.DATETIME},\n  {name: 'release', type: TYPES.STRING},\n\n  {name: 'user.id', type: TYPES.STRING},\n  {name: 'user.username', type: TYPES.STRING},\n  {name: 'user.email', type: TYPES.STRING},\n  {name: 'user.ip', type: TYPES.STRING},\n\n  {name: 'sdk.name', type: TYPES.STRING},\n  {name: 'sdk.version', type: TYPES.STRING},\n  // {name: 'tags_key', type: TYPES.STRING},\n  // {name: 'tags_value', type: TYPES.STRING},\n  {name: 'contexts.key', type: TYPES.STRING},\n  {name: 'contexts.value', type: TYPES.STRING},\n  {name: 'http.method', type: TYPES.STRING},\n  {name: 'http.url', type: TYPES.STRING},\n  {name: 'os.build', type: TYPES.STRING},\n  {name: 'os.kernel_version', type: TYPES.STRING},\n  {name: 'device.name', type: TYPES.STRING},\n  {name: 'device.brand', type: TYPES.STRING},\n  {name: 'device.locale', type: TYPES.STRING},\n  {name: 'device.uuid', type: TYPES.STRING},\n  {name: 'device.model_id', type: TYPES.STRING},\n  {name: 'device.arch', type: TYPES.STRING},\n  {name: 'device.battery_level', type: TYPES.NUMBER},\n  {name: 'device.orientation', type: TYPES.STRING},\n  {name: 'device.simulator', type: TYPES.BOOLEAN},\n  {name: 'device.online', type: TYPES.BOOLEAN},\n  {name: 'device.charging', type: TYPES.BOOLEAN},\n  {name: 'geo.country_code', type: TYPES.STRING},\n  {name: 'geo.region', type: TYPES.STRING},\n  {name: 'geo.city', type: TYPES.STRING},\n  {name: 'error.type', type: TYPES.STRING},\n  {name: 'error.value', type: TYPES.STRING},\n  {name: 'error.mechanism', type: TYPES.STRING},\n  {name: 'error.handled', type: TYPES.STRING},\n  {name: 'stack.abs_path', type: TYPES.STRING},\n  {name: 'stack.filename', type: TYPES.STRING},\n  {name: 'stack.package', type: TYPES.STRING},\n  {name: 'stack.module', type: TYPES.STRING},\n  {name: 'stack.function', type: TYPES.STRING},\n  {name: 'stack.in_app', type: TYPES.BOOLEAN},\n  {name: 'stack.colno', type: TYPES.NUMBER},\n  {name: 'stack.lineno', type: TYPES.NUMBER},\n  {name: 'stack.stack_level', type: TYPES.STRING},\n];\n\nexport const NON_SNUBA_FIELDS = ['project.name'];\n\nexport const NON_CONDITIONS_FIELDS = [...NON_SNUBA_FIELDS, 'project.id'];\n\nexport const OPERATOR = {\n  GREATER_THAN: '>',\n  LESS_THAN: '<',\n  GREATER_THAN_OR_EQUAL: '>=',\n  LESS_THAN_OR_EQUAL: '<=',\n  EQUAL: '=',\n  NOT_EQUAL: '!=',\n  IS_NULL: 'IS NULL',\n  IS_NOT_NULL: 'IS NOT NULL',\n  LIKE: 'LIKE',\n  NOT_LIKE: 'NOT LIKE',\n};\n\nexport const CONDITION_OPERATORS = Object.values(OPERATOR);\n\nexport const NEGATION_OPERATORS = [\n  OPERATOR.IS_NOT_NULL,\n  OPERATOR.NOT_EQUAL,\n  OPERATOR.NOT_LIKE,\n];\nexport const NULL_OPERATORS = [OPERATOR.IS_NOT_NULL, OPERATOR.IS_NULL];\nexport const WILDCARD_OPERATORS = [OPERATOR.LIKE, OPERATOR.NOT_LIKE];\n\nexport const ARRAY_FIELD_PREFIXES = ['error', 'stack'];\n\nexport const NUMBER_OF_SERIES_BY_DAY = 10;\n","import moment from 'moment';\nimport {Client} from 'app/api';\nimport {isEqual, pick} from 'lodash';\nimport qs from 'query-string';\nimport {isValidAggregation} from './aggregations/utils';\nimport {NON_SNUBA_FIELDS} from './data';\n\nconst VALID_QUERY_KEYS = [\n  'projects',\n  'fields',\n  'conditions',\n  'aggregations',\n  'range',\n  'start',\n  'end',\n  'orderby',\n  'limit',\n];\n\nexport function getQueryFromQueryString(queryString) {\n  const queryKeys = new Set([...VALID_QUERY_KEYS, 'utc']);\n  const result = {};\n  let parsedQuery = queryString;\n  parsedQuery = parsedQuery.replace(/^\\?|\\/$/g, '').split('&');\n  parsedQuery.forEach(item => {\n    if (item.includes('=')) {\n      const [key, value] = item.split('=');\n      if (queryKeys.has(key)) {\n        result[key] = JSON.parse(decodeURIComponent(value));\n      }\n    }\n  });\n\n  return result;\n}\n\nexport function getQueryStringFromQuery(query, queryParams = {}) {\n  const queryProperties = Object.entries(query).map(([key, value]) => {\n    return key + '=' + encodeURIComponent(JSON.stringify(value));\n  });\n\n  Object.entries(queryParams).forEach(([key, value]) => {\n    queryProperties.push(`${key}=${value}`);\n  });\n\n  return `?${queryProperties.sort().join('&')}`;\n}\n\nexport function getOrderbyFields(queryBuilder) {\n  const columns = queryBuilder.getColumns();\n  const query = queryBuilder.getInternal();\n\n  // If there are valid aggregations, only allow summarized fields and aggregations in orderby\n  const validAggregations = query.aggregations.filter(agg =>\n    isValidAggregation(agg, columns)\n  );\n\n  const hasAggregations = validAggregations.length > 0;\n\n  const hasFields = query.fields.length > 0;\n\n  const columnOptions = columns.reduce((acc, {name}) => {\n    if (hasAggregations) {\n      const isInvalidField = hasFields && !query.fields.includes(name);\n      if (!hasFields || isInvalidField) {\n        return acc;\n      }\n    }\n\n    // Never allow ordering by project.name or issue.id since this can't be done in Snuba\n    if (NON_SNUBA_FIELDS.includes(name)) {\n      return acc;\n    }\n\n    return [...acc, {value: name, label: name}];\n  }, []);\n\n  const aggregationOptions = [\n    // Ensure aggregations are unique (since users might input duplicates)\n    ...new Set(validAggregations.map(aggregation => aggregation[2])),\n  ].reduce((acc, agg) => {\n    return [...acc, {value: agg, label: agg}];\n  }, []);\n\n  return [...columnOptions, ...aggregationOptions];\n}\n\n/**\n * Takes the params object and the requested view querystring and returns the\n * correct view to be displayed\n *\n * @param {Object} params\n * @param {String} reqeustedView\n * @returns {String} View\n */\nexport function getView(params, requestedView) {\n  if (typeof params.savedQueryId !== 'undefined') {\n    requestedView = 'saved';\n  }\n\n  switch (requestedView) {\n    case 'saved':\n      return 'saved';\n    default:\n      return 'query';\n  }\n}\n\n/**\n * Returns true if the underlying discover query has changed based on the\n * querystring, otherwise false.\n *\n * @param {String} prev previous location.search string\n * @param {String} next next location.search string\n * @returns {Boolean}\n */\nexport function queryHasChanged(prev, next) {\n  return !isEqual(\n    pick(qs.parse(prev), VALID_QUERY_KEYS),\n    pick(qs.parse(next), VALID_QUERY_KEYS)\n  );\n}\n\n/**\n * Takes a saved query and strips associated query metadata in order to match\n * our internal representation of queries.\n *\n * @param {Object} savedQuery\n * @returns {Object}\n */\nexport function parseSavedQuery(savedQuery) {\n  // eslint-disable-next-line no-unused-vars\n  const {id, name, dateCreated, dateUpdated, createdBy, ...query} = savedQuery;\n  return query;\n}\n\nexport function fetchSavedQuery(organization, queryId) {\n  const api = new Client();\n  const endpoint = `/organizations/${organization.slug}/discover/saved/${queryId}/`;\n\n  return api.requestPromise(endpoint, {\n    method: 'GET',\n  });\n}\n\nexport function fetchSavedQueries(organization) {\n  const api = new Client();\n  const endpoint = `/organizations/${organization.slug}/discover/saved/`;\n\n  return api.requestPromise(endpoint, {\n    method: 'GET',\n  });\n}\n\nexport function createSavedQuery(organization, data) {\n  const api = new Client();\n\n  const endpoint = `/organizations/${organization.slug}/discover/saved/`;\n  return api.requestPromise(endpoint, {\n    method: 'POST',\n    data,\n  });\n}\n\nexport function updateSavedQuery(organization, id, data) {\n  const api = new Client();\n  const endpoint = `/organizations/${organization.slug}/discover/saved/${id}/`;\n\n  return api.requestPromise(endpoint, {\n    method: 'PUT',\n    data,\n  });\n}\n\nexport function deleteSavedQuery(organization, id) {\n  const api = new Client();\n  const endpoint = `/organizations/${organization.slug}/discover/saved/${id}/`;\n\n  return api.requestPromise(endpoint, {\n    method: 'DELETE',\n  });\n}\n\n/**\n * Generate a saved query name based on the current timestamp\n *\n * @returns {String}\n */\nexport function generateQueryName() {\n  return `Result - ${moment.utc().format('MMM DD HH:mm:ss')}`;\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","/**\n * Returns true if an aggregation is valid and false if not\n *\n * @param {Array} aggregation Aggregation in external Snuba format\n * @param {Object} cols List of column objects\n * @param {String} cols.name Column name\n * @param {String} cols.type Type of column\n * @returns {Boolean} True if valid aggregation, false if not\n */\nexport function isValidAggregation(aggregation, cols) {\n  const columns = new Set(cols.map(({name}) => name));\n  const [func, col] = aggregation;\n\n  if (!func) {\n    return false;\n  }\n\n  if (func === 'count()') {\n    return col === null;\n  }\n\n  if (func === 'uniq') {\n    return columns.has(col);\n  }\n\n  if (func === 'avg') {\n    const validCols = new Set(\n      cols.filter(({type}) => type === 'number').map(({name}) => name)\n    );\n    return validCols.has(col);\n  }\n\n  return false;\n}\n\n/**\n* Converts aggregation from external Snuba format to internal format for dropdown\n*\n* @param {Array} external Aggregation in external Snuba format\n* @return {String} Aggregation in internal format\n**/\nexport function getInternal(external) {\n  const [func, col] = external;\n\n  if (func === null) {\n    return '';\n  }\n\n  if (func === 'count()') {\n    return 'count';\n  }\n\n  if (func === 'uniq') {\n    return `uniq(${col})`;\n  }\n\n  if (func === 'avg') {\n    return `avg(${col})`;\n  }\n\n  return func;\n}\n\n/**\n* Returns an alias for a given column name, which is either just the column name\n* or a string with an underscore instead of square brackets for tags. We'll also\n* replace the characters `.`, `:` and `-` from aliases.\n*\n* @param {String} columnName Name of column\n* @return {String} Alias\n*/\nfunction getAlias(columnName) {\n  const tagMatch = columnName.match(/^tags\\[(.+)]$/);\n  return tagMatch\n    ? `tags_${tagMatch[1].replace(/[.:-]/, '_')}`\n    : columnName.replace('.', '_');\n}\n\n/**\n* Converts aggregation internal string format to external Snuba representation\n*\n* @param {String} internal Aggregation in internal format\n* @return {Array} Aggregation in external Snuba format\n*/\nexport function getExternal(internal) {\n  const uniqRegex = /^uniq\\((.+)\\)$/;\n  const avgRegex = /^avg\\((.+)\\)$/;\n\n  if (internal === 'count') {\n    return ['count()', null, 'count'];\n  }\n\n  if (internal.match(uniqRegex)) {\n    const column = internal.match(uniqRegex)[1];\n\n    return ['uniq', column, `uniq_${getAlias(column)}`];\n  }\n\n  if (internal.match(avgRegex)) {\n    const column = internal.match(avgRegex)[1];\n    return ['avg', column, `avg_${getAlias(column)}`];\n  }\n\n  return internal;\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","/*eslint no-use-before-define: [\"error\", { \"functions\": false }]*/\nimport {orderBy} from 'lodash';\nimport Papa from 'papaparse';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport {NUMBER_OF_SERIES_BY_DAY} from '../data';\n\nconst CHART_KEY = '__CHART_KEY__';\n\n/**\n * Returns data formatted for basic line and bar charts, with each aggregation\n * representing a series.\n *\n * @param {Array} data Data returned from Snuba\n * @param {Object} query Query state corresponding to data\n * @returns {Array}\n */\nexport function getChartData(data, query) {\n  const {fields} = query;\n\n  return query.aggregations.map(aggregation => {\n    return {\n      seriesName: aggregation[2],\n      data: data.map(res => {\n        return {\n          value: res[aggregation[2]],\n          name: fields.map(field => `${field} ${res[field]}`).join(' '),\n        };\n      }),\n    };\n  });\n}\n\n/**\n * Returns data formatted for widgets, with each aggregation representing a series.\n * Includes each aggregation's series relative percentage to total within that aggregation.\n *\n * @param {Array} data Data returned from Snuba\n * @param {Object} query Query state corresponding to data\n * @param {Object} options Options object\n * @param {Boolean} options.includePercentages Include percentages data\n * @returns {Array}\n */\nexport function getChartDataForWidget(data, query, options = {}) {\n  const {fields} = query;\n\n  const totalsBySeries = new Map();\n\n  if (options.includePercentages) {\n    query.aggregations.forEach(aggregation => {\n      totalsBySeries.set(\n        aggregation[2],\n        data.reduce((acc, res) => {\n          acc += res[aggregation[2]];\n          return acc;\n        }, 0)\n      );\n    });\n  }\n\n  return query.aggregations.map(aggregation => {\n    const total = options.includePercentages && totalsBySeries.get(aggregation[2]);\n    return {\n      seriesName: aggregation[2],\n      data: data.map(res => {\n        const obj = {\n          value: res[aggregation[2]],\n          name: fields.map(field => `${res[field]}`).join(', '),\n          fieldValues: fields.map(field => res[field]),\n        };\n\n        if (options.includePercentages && total) {\n          obj.percentage = Math.round(res[aggregation[2]] / total * 10000) / 100;\n        }\n\n        return obj;\n      }),\n    };\n  });\n}\n\n/**\n * Returns time series data formatted for line and bar charts, with each day\n * along the x-axis\n *\n * @param {Array} data Data returned from Snuba\n * @param {Object} query Query state corresponding to data\n * @param {Object} [options] Options object\n * @param {Boolean} [options.allSeries] (default: false) Return all series instead of top 10\n * @param {Object} [options.fieldLabelMap] (default: false) Maps value from Snuba to a defined label\n * @returns {Array}\n */\nexport function getChartDataByDay(rawData, query, options = {}) {\n  // We only chart the first aggregation for now\n  const aggregate = query.aggregations[0][2];\n\n  const data = getDataWithKeys(rawData, query, options);\n\n  // We only want to show the top 10 series\n  const top10Series = getTopSeries(\n    data,\n    aggregate,\n    options.allSeries ? -1 : options.allSeries\n  );\n\n  // Reverse to get ascending dates - we request descending to ensure latest\n  // day data is compplete in the case of limits being hit\n  const dates = [...new Set(rawData.map(entry => formatDate(entry.time)))].reverse();\n\n  // Temporarily store series as object with series names as keys\n  const seriesHash = getEmptySeriesHash(top10Series, dates, options);\n\n  // Insert data into series if it's in a top 10 series\n  data.forEach(row => {\n    const key = row[CHART_KEY];\n\n    const dateIdx = dates.indexOf(formatDate(row.time));\n\n    if (top10Series.has(key)) {\n      seriesHash[key][dateIdx].value = row[aggregate] === null ? 0 : row[aggregate];\n    }\n  });\n\n  // Format for echarts\n  return Object.entries(seriesHash).map(([seriesName, series]) => {\n    return {\n      seriesName,\n      data: series,\n    };\n  });\n}\n\n/**\n * Given result data and the location query, return the correct visualization\n * @param {Object} data data object for result\n * @param {String} current visualization from querystring\n * @returns {String}\n */\nexport function getVisualization(data, current = 'table') {\n  const {baseQuery, byDayQuery} = data;\n\n  if (!byDayQuery.data && ['line-by-day', 'bar-by-day'].includes(current)) {\n    return 'table';\n  }\n\n  if (!baseQuery.query.aggregations.length && ['line', 'bar'].includes(current)) {\n    return 'table';\n  }\n\n  return ['table', 'line', 'bar', 'line-by-day', 'bar-by-day'].includes(current)\n    ? current\n    : 'table';\n}\n\n/**\n * Returns the page ranges of paginated tables, i.e. Results 1-100\n * @param {Object} baseQuery data\n * @returns {String}\n */\nexport function getRowsPageRange(baseQuery) {\n  const dataLength = baseQuery.data.data.length;\n\n  if (!dataLength) {\n    return '0 rows';\n  } else if (baseQuery.query.aggregations.length) {\n    return `${dataLength} ${dataLength === 1 ? 'row' : 'rows'}`;\n  } else {\n    const startRange = parseInt(baseQuery.current.split(':')[1], 10);\n    return `rows ${startRange + 1} - ${startRange + dataLength}`;\n  }\n}\n\n// Return placeholder empty series object with all series and dates listed and\n// all values set to null\nfunction getEmptySeriesHash(seriesSet, dates, options = {}) {\n  const output = {};\n\n  [...seriesSet].forEach(series => {\n    output[series] = getEmptySeries(dates, options);\n  });\n\n  return output;\n}\n\nfunction getEmptySeries(dates, options) {\n  return dates.map(date => {\n    return {\n      value: 0,\n      name: date,\n    };\n  });\n}\n\n// Get the top series ranked by latest time / largest aggregate\nfunction getTopSeries(data, aggregate, limit = NUMBER_OF_SERIES_BY_DAY) {\n  const allData = orderBy(data, ['time', aggregate], ['desc', 'desc']);\n\n  const orderedData = [\n    ...new Set(\n      allData\n        // `row` can be an empty time bucket, in which case it will have no `CHART_KEY` property\n        .filter(row => typeof row[CHART_KEY] !== 'undefined')\n        .map(row => row[CHART_KEY])\n    ),\n  ];\n\n  return new Set(limit <= 0 ? orderedData : orderedData.slice(0, limit));\n}\n\nfunction getDataWithKeys(data, query, options = {}) {\n  const {aggregations, fields} = query;\n  // We only chart the first aggregation for now\n  const aggregate = aggregations[0][2];\n\n  return data.map(row => {\n    // `row` can be an empty time bucket, in which case it has no value\n    // for `aggregate`\n    if (!row.hasOwnProperty(aggregate)) {\n      return row;\n    }\n\n    const key = fields.length\n      ? fields.map(field => getLabel(row[field], options)).join(',')\n      : aggregate;\n\n    return {\n      ...row,\n      [CHART_KEY]: key,\n    };\n  });\n}\n\nfunction formatDate(datetime) {\n  return datetime * 1000;\n}\n\n// Converts a value to a string for the chart label. This could\n// potentially cause incorrect grouping, e.g. if the value null and string\n// 'null' are both present in the same series they will be merged into 1 value\nfunction getLabel(value, options) {\n  if (typeof value === 'object') {\n    try {\n      value = JSON.stringify(value);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n\n  if (options.fieldLabelMap && options.fieldLabelMap.hasOwnProperty(value)) {\n    return options.fieldLabelMap[value];\n  }\n\n  return value;\n}\n\n/**\n * Takes any value and returns a display version of that value for rendering in\n * the \"discover\" result table. Only expected to handle the 4 types that we\n * would expect to be present in Snuba data - string, number, null and array\n *\n * @param {*} val Value to display in table cell\n * @param {Number} idx Index if part of array\n * @returns {Object} Formatted cell contents\n */\nexport function getDisplayValue(val, idx) {\n  if (typeof val === 'string') {\n    return <DarkGray key={idx}>{`\"${val}\"`}</DarkGray>;\n  }\n\n  if (typeof val === 'number') {\n    return <span>{val.toLocaleString()}</span>;\n  }\n\n  if (val === null) {\n    return <LightGray key={idx}>null</LightGray>;\n  }\n\n  if (Array.isArray(val)) {\n    return (\n      <span>\n        [\n        {val.map(getDisplayValue).reduce((acc, curr, arrayIdx) => {\n          if (arrayIdx !== 0) {\n            return [...acc, ',', curr];\n          }\n          return [...acc, curr];\n        }, [])}\n        ]\n      </span>\n    );\n  }\n\n  return <span>{val}</span>;\n}\n\n/**\n * Takes any value and returns the text-only version of that value that will be\n * rendered in the table. Only expected to handle the 4 types that we would\n * expect to be present in Snuba data - string, number, null and array. This\n * function is required for dynamically calculating column width based on cell\n * contents.\n *\n * @param {*} val Value to display in table cell\n * @returns {String} Cell contents as string\n */\nexport function getDisplayText(val) {\n  if (typeof val === 'string') {\n    return `\"${val}\"`;\n  }\n\n  if (typeof val === 'number') {\n    return val.toLocaleString();\n  }\n\n  if (val === null) {\n    return 'null';\n  }\n\n  if (Array.isArray(val)) {\n    return `[${val.map(getDisplayText)}]`;\n  }\n\n  return `${val}`;\n}\n\nconst LightGray = styled.span`\n  color: ${p => p.theme.gray1};\n`;\n\nconst DarkGray = styled.span`\n  color: ${p => p.theme.gray5};\n`;\n\n/**\n * Downloads a Snuba result object as CSV format\n *\n * @param {Object} result Result received from Snuba\n * @param {Object} result.data Result data object from Snuba\n * @param {String} result.meta Result metadata from Snuba\n * @returns {Void}\n */\nexport function downloadAsCsv(result) {\n  const {meta, data} = result;\n  const headings = meta.map(({name}) => name);\n\n  const csvContent = Papa.unparse({\n    fields: headings,\n    data: data.map(row => {\n      return headings.map(col => disableMacros(row[col]));\n    }),\n  });\n\n  const encodedDataUrl = encodeURI(`data:text/csv;charset=utf8,${csvContent}`);\n\n  window.location.assign(encodedDataUrl);\n}\n\nfunction disableMacros(value) {\n  const unsafeCharacterRegex = /^[\\=\\+\\-\\@]/;\n\n  if (typeof value === 'string' && `${value}`.match(unsafeCharacterRegex)) {\n    return `'${value}`;\n  }\n\n  return value;\n}\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar layout = _barGrid.layout;\nvar largeLayout = _barGrid.largeLayout;\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/BarSeries\");\n\nrequire(\"./bar/BarView\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(layout, 'bar')); // Should after normal bar layout, otherwise it is blocked by normal bar layout.\n\necharts.registerLayout(largeLayout);\necharts.registerVisual({\n  seriesType: 'bar',\n  reset: function (seriesModel) {\n    // Visual coding for legend\n    seriesModel.getData().setVisual('legendSymbol', 'roundRect');\n  }\n});","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(coordSys.clampData(value));\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    large: false,\n    largeThreshold: 400,\n    progressive: 5e3,\n    progressiveChunkMode: 'mod',\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //      show: false\n    // },\n    itemStyle: {},\n    emphasis: {}\n  }\n});\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar _labelHelper = require(\"../helper/labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label');\n  var hoverLabelModel = itemModel.getModel('emphasis.label');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","module.exports = require('events').EventEmitter;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return -1;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// UTF-8 replacement characters ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd'.repeat(p);\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd'.repeat(p + 1);\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd'.repeat(p + 2);\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character for each buffered byte of a (partial)\n// character needs to be added to the output.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd'.repeat(this.lastTotal - this.lastNeed);\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Modal, {Header, Body, Footer} from 'react-bootstrap/lib/Modal';\nimport Button from 'app/components/button';\nimport SentryTypes from 'app/sentryTypes';\nimport {t} from 'app/locale';\n\nexport default class MissingProjectWarningModal extends React.Component {\n  static propTypes = {\n    organization: SentryTypes.Organization.isRequired,\n    projects: PropTypes.arrayOf(PropTypes.number).isRequired,\n    closeModal: PropTypes.func,\n  };\n\n  renderProject(id) {\n    const project = this.props.organization.projects.find(p => p.id === id.toString());\n    return <li key={id}>{project ? project.slug : t(`Unknown project ${id}`)}</li>;\n  }\n  render() {\n    return (\n      <Modal show={true}>\n        <Header>{t('Project access')}</Header>\n        <Body>\n          <p>\n            {t(\n              `You are not currently a member of all of the projects specified by\n            this query. As a result, data for the following projects will be\n            omitted from the displayed results:`\n            )}\n          </p>\n          <ul>{this.props.projects.map(id => this.renderProject(id))}</ul>\n        </Body>\n        <Footer>\n          <Button priority=\"primary\" onClick={this.props.closeModal}>\n            {t('View results')}\n          </Button>\n        </Footer>\n      </Modal>\n    );\n  }\n}\n","/*eslint no-use-before-define: [\"error\", { \"functions\": false }]*/\nimport React from 'react';\nimport {uniq} from 'lodash';\nimport moment from 'moment-timezone';\n\nimport {Client} from 'app/api';\nimport {DEFAULT_STATS_PERIOD} from 'app/constants';\nimport {t} from 'app/locale';\n\nimport {openModal} from 'app/actionCreators/modal';\n\nimport MissingProjectWarningModal from './missingProjectWarningModal';\nimport {COLUMNS, PROMOTED_TAGS, SPECIAL_TAGS, HIDDEN_TAGS} from './data';\nimport {isValidAggregation} from './aggregations/utils';\n\nconst API_LIMIT = 10000;\n\nconst DEFAULTS = {\n  projects: [],\n  fields: ['id', 'issue.id', 'project.name', 'platform', 'timestamp'],\n  conditions: [],\n  aggregations: [],\n  range: DEFAULT_STATS_PERIOD,\n  orderby: '-timestamp',\n  limit: 1000,\n};\n\nfunction applyDefaults(query) {\n  Object.entries(DEFAULTS).forEach(([key, value]) => {\n    if (!(key in query)) {\n      query[key] = value;\n    }\n  });\n  return query;\n}\n\n/**\n * This function is responsible for storing and managing updates to query state,\n * It applies sensible defaults if query parameters are not provided on\n * initialization.\n */\nexport default function createQueryBuilder(initial = {}, organization) {\n  const api = new Client();\n  let query = applyDefaults(initial);\n  const defaultProjects = organization.projects\n    .filter(projects => projects.isMember)\n    .map(project => parseInt(project.id, 10));\n  const columns = COLUMNS.map(col => ({...col, isTag: false}));\n  let tags = [];\n\n  return {\n    getInternal,\n    getExternal,\n    updateField,\n    fetch,\n    fetchWithoutLimit,\n    cancelRequests,\n    getQueryByType,\n    getColumns,\n    load,\n    reset,\n  };\n\n  /**\n   * Loads tags keys for user's projects and updates `tags` with the result.\n   * If the request fails updates `tags` to be the hardcoded list of predefined\n   * promoted tags.\n   *\n   * @returns {Promise<Void>}\n   */\n  function load() {\n    return fetch({\n      projects: defaultProjects,\n      fields: ['tags_key'],\n      aggregations: [['count()', null, 'count']],\n      orderby: '-count',\n      range: '90d',\n      turbo: true,\n    })\n      .then(res => {\n        tags = res.data.filter(tag => !HIDDEN_TAGS.includes(tag.tags_key)).map(tag => {\n          const type = SPECIAL_TAGS[tags.tags_key] || 'string';\n          return {name: tag.tags_key, type, isTag: true};\n        });\n      })\n      .catch(err => {\n        tags = PROMOTED_TAGS.map(tag => {\n          const type = SPECIAL_TAGS[tag] || 'string';\n          return {name: tag, type, isTag: true};\n        });\n      });\n  }\n\n  /**\n   * Returns the query object (internal state of the query)\n   *\n   * @returns {Object}\n   */\n  function getInternal() {\n    return query;\n  }\n\n  /**\n   * Returns the external representation of the query as required by Snuba.\n   * Applies default projects and fields if these properties were not specified\n   * by the user.\n   *\n   * @returns {Object}\n   */\n  function getExternal() {\n    // Default to all projects if none is selected\n    const projects = query.projects.length ? query.projects : defaultProjects;\n\n    // Default to all fields if there are none selected, and no aggregation is\n    // specified\n    const useDefaultFields = !query.fields.length && !query.aggregations.length;\n\n    const fields = useDefaultFields ? getColumns().map(({name}) => name) : query.fields;\n\n    // Remove orderby property if it is not set\n    if (!query.orderby) {\n      delete query.orderby;\n    }\n\n    return {\n      ...query,\n      projects,\n      fields,\n    };\n  }\n\n  /**\n   * Updates field in query to value provided. Also updates orderby and limit\n   * parameters if this causes their values to become invalid.\n   *\n   * @param {String} field Name of field to be updated\n   * @param {*} value Value to update field to\n   * @returns {Void}\n   */\n  function updateField(field, value) {\n    query[field] = value;\n\n    // Ignore non valid aggregations (e.g. user halfway inputting data)\n    const validAggregations = query.aggregations.filter(agg =>\n      isValidAggregation(agg, getColumns())\n    );\n\n    const orderbyField = (query.orderby || '').replace(/^-/, '');\n    const hasOrderFieldInFields =\n      getColumns().find(f => f.name === orderbyField) !== undefined;\n    const hasOrderFieldInSelectedFields = query.fields.includes(orderbyField);\n    const hasOrderFieldInAggregations = query.aggregations.some(\n      agg => orderbyField === agg[2]\n    );\n\n    const hasInvalidOrderbyField = validAggregations.length\n      ? !hasOrderFieldInSelectedFields && !hasOrderFieldInAggregations\n      : !hasOrderFieldInFields;\n\n    // If orderby value becomes invalid, update it to the first valid aggregation\n    if (hasInvalidOrderbyField) {\n      if (validAggregations.length > 0) {\n        query.orderby = `-${validAggregations[0][2]}`;\n      } else {\n        query.orderby = '-timestamp';\n      }\n    }\n\n    // Snuba doesn't allow limit without orderby\n    if (!query.orderby) {\n      query.limit = null;\n    }\n  }\n\n  /**\n   * Fetches either the query provided as an argument or the current query state\n   * if this is not provided and returns the result wrapped in a promise\n   *\n   * @param {Object} [data] Optional field to provide data to fetch\n   * @returns {Promise<Object|Error>}\n   */\n  function fetch(data = getExternal(), cursor = '0:0:1') {\n    const limit = data.limit || 1000;\n    const endpoint = `/organizations/${organization.slug}/discover/query/?per_page=${limit}&cursor=${cursor}`;\n\n    // Reject immediately if no projects are available\n    if (!data.projects.length) {\n      return Promise.reject(new Error(t('No projects selected')));\n    }\n\n    if (typeof data.limit === 'number') {\n      if (data.limit < 1 || data.limit > 1000) {\n        return Promise.reject(new Error(t('Invalid limit parameter')));\n      }\n    }\n\n    if (moment.utc(data.start).isAfter(moment.utc(data.end))) {\n      return Promise.reject(new Error('Start date cannot be after end date'));\n    }\n\n    return api\n      .requestPromise(endpoint, {includeAllArgs: true, method: 'POST', data})\n      .then(([responseData, _, utils]) => {\n        responseData.pageLinks = utils.getResponseHeader('Link');\n        return responseData;\n      })\n      .catch(err => {\n        throw new Error(t('An error occurred'));\n      });\n  }\n\n  /**\n   * Fetches either the query provided as an argument or the current query state\n   * if this is not provided and returns the result wrapped in a promise\n   *\n   * This is similar to `fetch` but does not support pagination and mirrors the API limit\n   *\n   * @param {Object} [data] Optional field to provide data to fetch\n   * @returns {Promise<Object|Error>}\n   */\n  function fetchWithoutLimit(data = getExternal()) {\n    const endpoint = `/organizations/${organization.slug}/discover/query/`;\n\n    // Reject immediately if no projects are available\n    if (!data.projects.length) {\n      return Promise.reject(new Error(t('No projects selected')));\n    }\n\n    if (typeof data.limit === 'number') {\n      if (data.limit < 1 || data.limit > API_LIMIT) {\n        return Promise.reject(new Error(t('Invalid limit parameter')));\n      }\n    }\n\n    if (moment.utc(data.start).isAfter(moment.utc(data.end))) {\n      return Promise.reject(new Error('Start date cannot be after end date'));\n    }\n\n    return api.requestPromise(endpoint, {method: 'POST', data}).catch(() => {\n      throw new Error(t('Error with query'));\n    });\n  }\n\n  /**\n   * Cancels any in-flight API requests made via `fetch` or `fetchWithoutLimit`\n   *\n   * @returns {Void}\n   */\n  function cancelRequests() {\n    api.clear();\n  }\n\n  /**\n   * Get the actual query to be run for each visualization type\n   *\n   * @param {Object} originalQuery Original query input by user (external query representation)\n   * @param {String} Type to fetch - currently either byDay or base\n   * @returns {Object} Modified query to be run for that type\n   */\n  function getQueryByType(originalQuery, type) {\n    if (type === 'byDayQuery') {\n      return {\n        ...originalQuery,\n        groupby: ['time'],\n        rollup: 60 * 60 * 24,\n        orderby: '-time',\n        limit: 1000,\n      };\n    }\n\n    // If id or issue.id is present in query fields, always fetch the project.id\n    // so we can generate links\n    if (type === 'baseQuery') {\n      return originalQuery.fields.some(field => field === 'id' || field === 'issue.id')\n        ? {\n            ...originalQuery,\n            fields: uniq([...originalQuery.fields, 'project.id']),\n          }\n        : originalQuery;\n    }\n\n    throw new Error('Invalid query type');\n  }\n\n  /**\n   * Returns all column objects, including tags\n   *\n   * @returns {Array<{name: String, type: String}>}\n   */\n  function getColumns() {\n    return [...columns, ...tags];\n  }\n\n  /**\n   * Resets the query to defaults or the query provided\n   * Displays a warning if user does not have access to any project in the query\n   *\n   * @returns {Void}\n   */\n  function reset(q = {}) {\n    const invalidProjects = (q.projects || []).filter(\n      project => !defaultProjects.includes(project)\n    );\n\n    if (invalidProjects.length) {\n      openModal(deps => (\n        <MissingProjectWarningModal\n          organization={organization}\n          projects={invalidProjects}\n          {...deps}\n        />\n      ));\n    }\n\n    query = applyDefaults(q);\n  }\n}\n","import React from 'react';\n\nimport BarSeries from './series/barSeries';\nimport BaseChart from './baseChart';\n\nexport default class BarChart extends React.Component {\n  static propTypes = {\n    ...BaseChart.propTypes,\n  };\n\n  render() {\n    const {series, stacked, xAxis, ...props} = this.props;\n\n    return (\n      <BaseChart\n        {...props}\n        xAxis={xAxis !== null ? {...(xAxis || {}), boundaryGap: true} : null}\n        series={series.map((s, i) => {\n          return BarSeries({\n            name: s.seriesName,\n            stack: stacked ? 'stack1' : null,\n            data: s.data.map(({value, name}) => [name, value]),\n          });\n        })}\n      />\n    );\n  }\n}\n","import 'echarts/lib/chart/bar';\n\nexport default function barSeries(props = {}) {\n  return {\n    ...props,\n    type: 'bar',\n  };\n}\n","var BaseBarSeries = require(\"./BaseBarSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect',\n\n  /**\n   * @override\n   */\n  getProgressive: function () {\n    // Do not support progressive in normal mode.\n    return this.get('large') ? this.get('progressive') : false;\n  },\n\n  /**\n   * @override\n   */\n  getProgressiveThreshold: function () {\n    // Do not support progressive in normal mode.\n    var progressiveThreshold = this.get('progressiveThreshold');\n    var largeThreshold = this.get('largeThreshold');\n\n    if (largeThreshold > progressiveThreshold) {\n      progressiveThreshold = largeThreshold;\n    }\n\n    return progressiveThreshold;\n  }\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    // Do not support progressive in normal mode.\n    this._incrementalRenderLarge(params, seriesModel);\n  },\n  _updateDrawMode: function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  _renderLarge: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n  },\n  _incrementalRenderLarge: function (params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel) {\n    this._clear(ecModel);\n  },\n  _clear: function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel && ecModel.get('animation') && data && !this._isLargeDraw) {\n      data.eachItemGraphicEl(function (el) {\n        if (el.type === 'sector') {\n          removeSector(el.dataIndex, ecModel, el);\n        } else {\n          removeRect(el.dataIndex, ecModel, el);\n        }\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var sector = new graphic.Sector({\n      shape: zrUtil.defaults({\n        clockwise: clockwise\n      }, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nvar LargePath = Path.extend({\n  type: 'largeBar',\n  shape: {\n    points: []\n  },\n  buildPath: function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var valueIdx = this.__valueIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[this.__valueIdx] = points[i + valueIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var valueIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - valueIdx] = data.getLayout('valueAxisStart');\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental,\n    __startPoint: startPoint,\n    __valueIdx: valueIdx\n  });\n  group.add(el);\n  setLargeStyle(el, seriesModel, data);\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var borderColor = data.getVisual('borderColor') || data.getVisual('color');\n  var itemStyle = seriesModel.getModel('itemStyle').getItemStyle(['color', 'borderColor']);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nmodule.exports = _default;","var makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;","var baseOrderBy = require('./_baseOrderBy'),\n    isArray = require('./isArray');\n\n/**\n * This method is like `_.sortBy` except that it allows specifying the sort\n * orders of the iteratees to sort by. If `orders` is unspecified, all values\n * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n * descending or \"asc\" for ascending sort order of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @param {string[]} [orders] The sort orders of `iteratees`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 34 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 36 }\n * ];\n *\n * // Sort by `user` in ascending order and by `age` in descending order.\n * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n */\nfunction orderBy(collection, iteratees, orders, guard) {\n  if (collection == null) {\n    return [];\n  }\n  if (!isArray(iteratees)) {\n    iteratees = iteratees == null ? [] : [iteratees];\n  }\n  orders = guard ? undefined : orders;\n  if (!isArray(orders)) {\n    orders = orders == null ? [] : [orders];\n  }\n  return baseOrderBy(collection, iteratees, orders);\n}\n\nmodule.exports = orderBy;\n","/*@license\n\tPapa Parse\n\tv4.6.0\n\thttps://github.com/mholt/PapaParse\n\tLicense: MIT\n*/\n(function(root, factory)\n{\n\t/* globals define */\n\tif (typeof define === 'function' && define.amd)\n\t{\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine([], factory);\n\t}\n\telse if (typeof module === 'object' && typeof exports !== 'undefined')\n\t{\n\t\t// Node. Does not work with strict CommonJS, but\n\t\t// only CommonJS-like environments that support module.exports,\n\t\t// like Node.\n\t\tmodule.exports = factory();\n\t}\n\telse\n\t{\n\t\t// Browser globals (root is window)\n\t\troot.Papa = factory();\n\t}\n}(this, function()\n{\n\t'use strict';\n\n\tvar global = (function() {\n\t\t// alternative method, similar to `Function('return this')()`\n\t\t// but without using `eval` (which is disabled when\n\t\t// using Content Security Policy).\n\n\t\tif (typeof self !== 'undefined') { return self; }\n\t\tif (typeof window !== 'undefined') { return window; }\n\t\tif (typeof global !== 'undefined') { return global; }\n\n\t\t// When running tests none of the above have been defined\n\t\treturn {};\n\t})();\n\n\n\tvar IS_WORKER = !global.document && !!global.postMessage,\n\t\tIS_PAPA_WORKER = IS_WORKER && /(\\?|&)papaworker(=|&|$)/.test(global.location.search),\n\t\tLOADED_SYNC = false, AUTO_SCRIPT_PATH;\n\tvar workers = {}, workerIdCounter = 0;\n\n\tvar Papa = {};\n\n\tPapa.parse = CsvToJson;\n\tPapa.unparse = JsonToCsv;\n\n\tPapa.RECORD_SEP = String.fromCharCode(30);\n\tPapa.UNIT_SEP = String.fromCharCode(31);\n\tPapa.BYTE_ORDER_MARK = '\\ufeff';\n\tPapa.BAD_DELIMITERS = ['\\r', '\\n', '\"', Papa.BYTE_ORDER_MARK];\n\tPapa.WORKERS_SUPPORTED = !IS_WORKER && !!global.Worker;\n\tPapa.SCRIPT_PATH = null;\t// Must be set by your code if you use workers and this lib is loaded asynchronously\n\tPapa.NODE_STREAM_INPUT = 1;\n\n\t// Configurable chunk sizes for local and remote files, respectively\n\tPapa.LocalChunkSize = 1024 * 1024 * 10;\t// 10 MB\n\tPapa.RemoteChunkSize = 1024 * 1024 * 5;\t// 5 MB\n\tPapa.DefaultDelimiter = ',';\t\t\t// Used if not specified and detection fails\n\n\t// Exposed for testing and development only\n\tPapa.Parser = Parser;\n\tPapa.ParserHandle = ParserHandle;\n\tPapa.NetworkStreamer = NetworkStreamer;\n\tPapa.FileStreamer = FileStreamer;\n\tPapa.StringStreamer = StringStreamer;\n\tPapa.ReadableStreamStreamer = ReadableStreamStreamer;\n\tPapa.DuplexStreamStreamer = DuplexStreamStreamer;\n\n\tif (global.jQuery)\n\t{\n\t\tvar $ = global.jQuery;\n\t\t$.fn.parse = function(options)\n\t\t{\n\t\t\tvar config = options.config || {};\n\t\t\tvar queue = [];\n\n\t\t\tthis.each(function(idx)\n\t\t\t{\n\t\t\t\tvar supported = $(this).prop('tagName').toUpperCase() === 'INPUT'\n\t\t\t\t\t\t\t\t&& $(this).attr('type').toLowerCase() === 'file'\n\t\t\t\t\t\t\t\t&& global.FileReader;\n\n\t\t\t\tif (!supported || !this.files || this.files.length === 0)\n\t\t\t\t\treturn true;\t// continue to next input element\n\n\t\t\t\tfor (var i = 0; i < this.files.length; i++)\n\t\t\t\t{\n\t\t\t\t\tqueue.push({\n\t\t\t\t\t\tfile: this.files[i],\n\t\t\t\t\t\tinputElem: this,\n\t\t\t\t\t\tinstanceConfig: $.extend({}, config)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tparseNextFile();\t// begin parsing\n\t\t\treturn this;\t\t// maintains chainability\n\n\n\t\t\tfunction parseNextFile()\n\t\t\t{\n\t\t\t\tif (queue.length === 0)\n\t\t\t\t{\n\t\t\t\t\tif (isFunction(options.complete))\n\t\t\t\t\t\toptions.complete();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar f = queue[0];\n\n\t\t\t\tif (isFunction(options.before))\n\t\t\t\t{\n\t\t\t\t\tvar returned = options.before(f.file, f.inputElem);\n\n\t\t\t\t\tif (typeof returned === 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (returned.action === 'abort')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\terror('AbortError', f.file, f.inputElem, returned.reason);\n\t\t\t\t\t\t\treturn;\t// Aborts all queued files immediately\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (returned.action === 'skip')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfileComplete();\t// parse the next file in the queue, if any\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (typeof returned.config === 'object')\n\t\t\t\t\t\t\tf.instanceConfig = $.extend(f.instanceConfig, returned.config);\n\t\t\t\t\t}\n\t\t\t\t\telse if (returned === 'skip')\n\t\t\t\t\t{\n\t\t\t\t\t\tfileComplete();\t// parse the next file in the queue, if any\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Wrap up the user's complete callback, if any, so that ours also gets executed\n\t\t\t\tvar userCompleteFunc = f.instanceConfig.complete;\n\t\t\t\tf.instanceConfig.complete = function(results)\n\t\t\t\t{\n\t\t\t\t\tif (isFunction(userCompleteFunc))\n\t\t\t\t\t\tuserCompleteFunc(results, f.file, f.inputElem);\n\t\t\t\t\tfileComplete();\n\t\t\t\t};\n\n\t\t\t\tPapa.parse(f.file, f.instanceConfig);\n\t\t\t}\n\n\t\t\tfunction error(name, file, elem, reason)\n\t\t\t{\n\t\t\t\tif (isFunction(options.error))\n\t\t\t\t\toptions.error({name: name}, file, elem, reason);\n\t\t\t}\n\n\t\t\tfunction fileComplete()\n\t\t\t{\n\t\t\t\tqueue.splice(0, 1);\n\t\t\t\tparseNextFile();\n\t\t\t}\n\t\t};\n\t}\n\n\n\tif (IS_PAPA_WORKER)\n\t{\n\t\tglobal.onmessage = workerThreadReceivedMessage;\n\t}\n\telse if (Papa.WORKERS_SUPPORTED)\n\t{\n\t\tAUTO_SCRIPT_PATH = getScriptPath();\n\n\t\t// Check if the script was loaded synchronously\n\t\tif (!document.body)\n\t\t{\n\t\t\t// Body doesn't exist yet, must be synchronous\n\t\t\tLOADED_SYNC = true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdocument.addEventListener('DOMContentLoaded', function() {\n\t\t\t\tLOADED_SYNC = true;\n\t\t\t}, true);\n\t\t}\n\t}\n\n\n\n\n\tfunction CsvToJson(_input, _config)\n\t{\n\t\t_config = _config || {};\n\t\tvar dynamicTyping = _config.dynamicTyping || false;\n\t\tif (isFunction(dynamicTyping)) {\n\t\t\t_config.dynamicTypingFunction = dynamicTyping;\n\t\t\t// Will be filled on first row call\n\t\t\tdynamicTyping = {};\n\t\t}\n\t\t_config.dynamicTyping = dynamicTyping;\n\n\t\t_config.transform = isFunction(_config.transform) ? _config.transform : false;\n\n\t\tif (_config.worker && Papa.WORKERS_SUPPORTED)\n\t\t{\n\t\t\tvar w = newWorker();\n\n\t\t\tw.userStep = _config.step;\n\t\t\tw.userChunk = _config.chunk;\n\t\t\tw.userComplete = _config.complete;\n\t\t\tw.userError = _config.error;\n\n\t\t\t_config.step = isFunction(_config.step);\n\t\t\t_config.chunk = isFunction(_config.chunk);\n\t\t\t_config.complete = isFunction(_config.complete);\n\t\t\t_config.error = isFunction(_config.error);\n\t\t\tdelete _config.worker;\t// prevent infinite loop\n\n\t\t\tw.postMessage({\n\t\t\t\tinput: _input,\n\t\t\t\tconfig: _config,\n\t\t\t\tworkerId: w.id\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar streamer = null;\n\t\tif (_input === Papa.NODE_STREAM_INPUT)\n\t\t{\n\t\t\t// create a node Duplex stream for use\n\t\t\t// with .pipe\n\t\t\tstreamer = new DuplexStreamStreamer(_config);\n\t\t\treturn streamer.getStream();\n\t\t}\n\t\telse if (typeof _input === 'string')\n\t\t{\n\t\t\tif (_config.download)\n\t\t\t\tstreamer = new NetworkStreamer(_config);\n\t\t\telse\n\t\t\t\tstreamer = new StringStreamer(_config);\n\t\t}\n\t\telse if (_input.readable === true && isFunction(_input.read) && isFunction(_input.on))\n\t\t{\n\t\t\tstreamer = new ReadableStreamStreamer(_config);\n\t\t}\n\t\telse if ((global.File && _input instanceof File) || _input instanceof Object)\t// ...Safari. (see issue #106)\n\t\t\tstreamer = new FileStreamer(_config);\n\n\t\treturn streamer.stream(_input);\n\t}\n\n\n\n\n\n\n\tfunction JsonToCsv(_input, _config)\n\t{\n\t\t// Default configuration\n\n\t\t/** whether to surround every datum with quotes */\n\t\tvar _quotes = false;\n\n\t\t/** whether to write headers */\n\t\tvar _writeHeader = true;\n\n\t\t/** delimiting character(s) */\n\t\tvar _delimiter = ',';\n\n\t\t/** newline character(s) */\n\t\tvar _newline = '\\r\\n';\n\n\t\t/** quote character */\n\t\tvar _quoteChar = '\"';\n\n\t\tunpackConfig();\n\n\t\tvar quoteCharRegex = new RegExp(_quoteChar, 'g');\n\n\t\tif (typeof _input === 'string')\n\t\t\t_input = JSON.parse(_input);\n\n\t\tif (_input instanceof Array)\n\t\t{\n\t\t\tif (!_input.length || _input[0] instanceof Array)\n\t\t\t\treturn serialize(null, _input);\n\t\t\telse if (typeof _input[0] === 'object')\n\t\t\t\treturn serialize(objectKeys(_input[0]), _input);\n\t\t}\n\t\telse if (typeof _input === 'object')\n\t\t{\n\t\t\tif (typeof _input.data === 'string')\n\t\t\t\t_input.data = JSON.parse(_input.data);\n\n\t\t\tif (_input.data instanceof Array)\n\t\t\t{\n\t\t\t\tif (!_input.fields)\n\t\t\t\t\t_input.fields =  _input.meta && _input.meta.fields;\n\n\t\t\t\tif (!_input.fields)\n\t\t\t\t\t_input.fields =  _input.data[0] instanceof Array\n\t\t\t\t\t\t? _input.fields\n\t\t\t\t\t\t: objectKeys(_input.data[0]);\n\n\t\t\t\tif (!(_input.data[0] instanceof Array) && typeof _input.data[0] !== 'object')\n\t\t\t\t\t_input.data = [_input.data];\t// handles input like [1,2,3] or ['asdf']\n\t\t\t}\n\n\t\t\treturn serialize(_input.fields || [], _input.data || []);\n\t\t}\n\n\t\t// Default (any valid paths should return before this)\n\t\tthrow 'exception: Unable to serialize unrecognized input';\n\n\n\t\tfunction unpackConfig()\n\t\t{\n\t\t\tif (typeof _config !== 'object')\n\t\t\t\treturn;\n\n\t\t\tif (typeof _config.delimiter === 'string'\n                && !Papa.BAD_DELIMITERS.filter(function(value) { return _config.delimiter.indexOf(value) !== -1; }).length)\n\t\t\t{\n\t\t\t\t_delimiter = _config.delimiter;\n\t\t\t}\n\n\t\t\tif (typeof _config.quotes === 'boolean'\n\t\t\t\t|| _config.quotes instanceof Array)\n\t\t\t\t_quotes = _config.quotes;\n\n\t\t\tif (typeof _config.newline === 'string')\n\t\t\t\t_newline = _config.newline;\n\n\t\t\tif (typeof _config.quoteChar === 'string')\n\t\t\t\t_quoteChar = _config.quoteChar;\n\n\t\t\tif (typeof _config.header === 'boolean')\n\t\t\t\t_writeHeader = _config.header;\n\t\t}\n\n\n\t\t/** Turns an object's keys into an array */\n\t\tfunction objectKeys(obj)\n\t\t{\n\t\t\tif (typeof obj !== 'object')\n\t\t\t\treturn [];\n\t\t\tvar keys = [];\n\t\t\tfor (var key in obj)\n\t\t\t\tkeys.push(key);\n\t\t\treturn keys;\n\t\t}\n\n\t\t/** The double for loop that iterates the data and writes out a CSV string including header row */\n\t\tfunction serialize(fields, data)\n\t\t{\n\t\t\tvar csv = '';\n\n\t\t\tif (typeof fields === 'string')\n\t\t\t\tfields = JSON.parse(fields);\n\t\t\tif (typeof data === 'string')\n\t\t\t\tdata = JSON.parse(data);\n\n\t\t\tvar hasHeader = fields instanceof Array && fields.length > 0;\n\t\t\tvar dataKeyedByField = !(data[0] instanceof Array);\n\n\t\t\t// If there a header row, write it first\n\t\t\tif (hasHeader && _writeHeader)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < fields.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (i > 0)\n\t\t\t\t\t\tcsv += _delimiter;\n\t\t\t\t\tcsv += safe(fields[i], i);\n\t\t\t\t}\n\t\t\t\tif (data.length > 0)\n\t\t\t\t\tcsv += _newline;\n\t\t\t}\n\n\t\t\t// Then write out the data\n\t\t\tfor (var row = 0; row < data.length; row++)\n\t\t\t{\n\t\t\t\tvar maxCol = hasHeader ? fields.length : data[row].length;\n\n\t\t\t\tfor (var col = 0; col < maxCol; col++)\n\t\t\t\t{\n\t\t\t\t\tif (col > 0)\n\t\t\t\t\t\tcsv += _delimiter;\n\t\t\t\t\tvar colIdx = hasHeader && dataKeyedByField ? fields[col] : col;\n\t\t\t\t\tcsv += safe(data[row][colIdx], col);\n\t\t\t\t}\n\n\t\t\t\tif (row < data.length - 1)\n\t\t\t\t\tcsv += _newline;\n\t\t\t}\n\n\t\t\treturn csv;\n\t\t}\n\n\t\t/** Encloses a value around quotes if needed (makes a value safe for CSV insertion) */\n\t\tfunction safe(str, col)\n\t\t{\n\t\t\tif (typeof str === 'undefined' || str === null)\n\t\t\t\treturn '';\n\n\t\t\tif (str.constructor === Date)\n\t\t\t\treturn JSON.stringify(str).slice(1, 25);\n\n\t\t\tstr = str.toString().replace(quoteCharRegex, _quoteChar + _quoteChar);\n\n\t\t\tvar needsQuotes = (typeof _quotes === 'boolean' && _quotes)\n\t\t\t\t\t\t\t|| (_quotes instanceof Array && _quotes[col])\n\t\t\t\t\t\t\t|| hasAny(str, Papa.BAD_DELIMITERS)\n\t\t\t\t\t\t\t|| str.indexOf(_delimiter) > -1\n\t\t\t\t\t\t\t|| str.charAt(0) === ' '\n\t\t\t\t\t\t\t|| str.charAt(str.length - 1) === ' ';\n\n\t\t\treturn needsQuotes ? _quoteChar + str + _quoteChar : str;\n\t\t}\n\n\t\tfunction hasAny(str, substrings)\n\t\t{\n\t\t\tfor (var i = 0; i < substrings.length; i++)\n\t\t\t\tif (str.indexOf(substrings[i]) > -1)\n\t\t\t\t\treturn true;\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/** ChunkStreamer is the base prototype for various streamer implementations. */\n\tfunction ChunkStreamer(config)\n\t{\n\t\tthis._handle = null;\n\t\tthis._finished = false;\n\t\tthis._completed = false;\n\t\tthis._input = null;\n\t\tthis._baseIndex = 0;\n\t\tthis._partialLine = '';\n\t\tthis._rowCount = 0;\n\t\tthis._start = 0;\n\t\tthis._nextChunk = null;\n\t\tthis.isFirstChunk = true;\n\t\tthis._completeResults = {\n\t\t\tdata: [],\n\t\t\terrors: [],\n\t\t\tmeta: {}\n\t\t};\n\t\treplaceConfig.call(this, config);\n\n\t\tthis.parseChunk = function(chunk, isFakeChunk)\n\t\t{\n\t\t\t// First chunk pre-processing\n\t\t\tif (this.isFirstChunk && isFunction(this._config.beforeFirstChunk))\n\t\t\t{\n\t\t\t\tvar modifiedChunk = this._config.beforeFirstChunk(chunk);\n\t\t\t\tif (modifiedChunk !== undefined)\n\t\t\t\t\tchunk = modifiedChunk;\n\t\t\t}\n\t\t\tthis.isFirstChunk = false;\n\n\t\t\t// Rejoin the line we likely just split in two by chunking the file\n\t\t\tvar aggregate = this._partialLine + chunk;\n\t\t\tthis._partialLine = '';\n\n\t\t\tvar results = this._handle.parse(aggregate, this._baseIndex, !this._finished);\n\n\t\t\tif (this._handle.paused() || this._handle.aborted())\n\t\t\t\treturn;\n\n\t\t\tvar lastIndex = results.meta.cursor;\n\n\t\t\tif (!this._finished)\n\t\t\t{\n\t\t\t\tthis._partialLine = aggregate.substring(lastIndex - this._baseIndex);\n\t\t\t\tthis._baseIndex = lastIndex;\n\t\t\t}\n\n\t\t\tif (results && results.data)\n\t\t\t\tthis._rowCount += results.data.length;\n\n\t\t\tvar finishedIncludingPreview = this._finished || (this._config.preview && this._rowCount >= this._config.preview);\n\n\t\t\tif (IS_PAPA_WORKER)\n\t\t\t{\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tresults: results,\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\tfinished: finishedIncludingPreview\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (isFunction(this._config.chunk) && !isFakeChunk)\n\t\t\t{\n\t\t\t\tthis._config.chunk(results, this._handle);\n\t\t\t\tif (this._handle.paused() || this._handle.aborted())\n\t\t\t\t\treturn;\n\t\t\t\tresults = undefined;\n\t\t\t\tthis._completeResults = undefined;\n\t\t\t}\n\n\t\t\tif (!this._config.step && !this._config.chunk) {\n\t\t\t\tthis._completeResults.data = this._completeResults.data.concat(results.data);\n\t\t\t\tthis._completeResults.errors = this._completeResults.errors.concat(results.errors);\n\t\t\t\tthis._completeResults.meta = results.meta;\n\t\t\t}\n\n\t\t\tif (!this._completed && finishedIncludingPreview && isFunction(this._config.complete) && (!results || !results.meta.aborted)) {\n\t\t\t\tthis._config.complete(this._completeResults, this._input);\n\t\t\t\tthis._completed = true;\n\t\t\t}\n\n\t\t\tif (!finishedIncludingPreview && (!results || !results.meta.paused))\n\t\t\t\tthis._nextChunk();\n\n\t\t\treturn results;\n\t\t};\n\n\t\tthis._sendError = function(error)\n\t\t{\n\t\t\tif (isFunction(this._config.error))\n\t\t\t\tthis._config.error(error);\n\t\t\telse if (IS_PAPA_WORKER && this._config.error)\n\t\t\t{\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\terror: error,\n\t\t\t\t\tfinished: false\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tfunction replaceConfig(config)\n\t\t{\n\t\t\t// Deep-copy the config so we can edit it\n\t\t\tvar configCopy = copy(config);\n\t\t\tconfigCopy.chunkSize = parseInt(configCopy.chunkSize);\t// parseInt VERY important so we don't concatenate strings!\n\t\t\tif (!config.step && !config.chunk)\n\t\t\t\tconfigCopy.chunkSize = null;  // disable Range header if not streaming; bad values break IIS - see issue #196\n\t\t\tthis._handle = new ParserHandle(configCopy);\n\t\t\tthis._handle.streamer = this;\n\t\t\tthis._config = configCopy;\t// persist the copy to the caller\n\t\t}\n\t}\n\n\n\tfunction NetworkStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tif (!config.chunkSize)\n\t\t\tconfig.chunkSize = Papa.RemoteChunkSize;\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar xhr;\n\n\t\tif (IS_WORKER)\n\t\t{\n\t\t\tthis._nextChunk = function()\n\t\t\t{\n\t\t\t\tthis._readChunk();\n\t\t\t\tthis._chunkLoaded();\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis._nextChunk = function()\n\t\t\t{\n\t\t\t\tthis._readChunk();\n\t\t\t};\n\t\t}\n\n\t\tthis.stream = function(url)\n\t\t{\n\t\t\tthis._input = url;\n\t\t\tthis._nextChunk();\t// Starts streaming\n\t\t};\n\n\t\tthis._readChunk = function()\n\t\t{\n\t\t\tif (this._finished)\n\t\t\t{\n\t\t\t\tthis._chunkLoaded();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\txhr = new XMLHttpRequest();\n\n\t\t\tif (this._config.withCredentials)\n\t\t\t{\n\t\t\t\txhr.withCredentials = this._config.withCredentials;\n\t\t\t}\n\n\t\t\tif (!IS_WORKER)\n\t\t\t{\n\t\t\t\txhr.onload = bindFunction(this._chunkLoaded, this);\n\t\t\t\txhr.onerror = bindFunction(this._chunkError, this);\n\t\t\t}\n\n\t\t\txhr.open('GET', this._input, !IS_WORKER);\n\t\t\t// Headers can only be set when once the request state is OPENED\n\t\t\tif (this._config.downloadRequestHeaders)\n\t\t\t{\n\t\t\t\tvar headers = this._config.downloadRequestHeaders;\n\n\t\t\t\tfor (var headerName in headers)\n\t\t\t\t{\n\t\t\t\t\txhr.setRequestHeader(headerName, headers[headerName]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._config.chunkSize)\n\t\t\t{\n\t\t\t\tvar end = this._start + this._config.chunkSize - 1;\t// minus one because byte range is inclusive\n\t\t\t\txhr.setRequestHeader('Range', 'bytes=' + this._start + '-' + end);\n\t\t\t\txhr.setRequestHeader('If-None-Match', 'webkit-no-cache'); // https://bugs.webkit.org/show_bug.cgi?id=82672\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\txhr.send();\n\t\t\t}\n\t\t\tcatch (err) {\n\t\t\t\tthis._chunkError(err.message);\n\t\t\t}\n\n\t\t\tif (IS_WORKER && xhr.status === 0)\n\t\t\t\tthis._chunkError();\n\t\t\telse\n\t\t\t\tthis._start += this._config.chunkSize;\n\t\t};\n\n\t\tthis._chunkLoaded = function()\n\t\t{\n\t\t\tif (xhr.readyState !== 4)\n\t\t\t\treturn;\n\n\t\t\tif (xhr.status < 200 || xhr.status >= 400)\n\t\t\t{\n\t\t\t\tthis._chunkError();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._finished = !this._config.chunkSize || this._start > getFileSize(xhr);\n\t\t\tthis.parseChunk(xhr.responseText);\n\t\t};\n\n\t\tthis._chunkError = function(errorMessage)\n\t\t{\n\t\t\tvar errorText = xhr.statusText || errorMessage;\n\t\t\tthis._sendError(new Error(errorText));\n\t\t};\n\n\t\tfunction getFileSize(xhr)\n\t\t{\n\t\t\tvar contentRange = xhr.getResponseHeader('Content-Range');\n\t\t\tif (contentRange === null) { // no content range, then finish!\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn parseInt(contentRange.substr(contentRange.lastIndexOf('/') + 1));\n\t\t}\n\t}\n\tNetworkStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tNetworkStreamer.prototype.constructor = NetworkStreamer;\n\n\n\tfunction FileStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tif (!config.chunkSize)\n\t\t\tconfig.chunkSize = Papa.LocalChunkSize;\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar reader, slice;\n\n\t\t// FileReader is better than FileReaderSync (even in worker) - see http://stackoverflow.com/q/24708649/1048862\n\t\t// But Firefox is a pill, too - see issue #76: https://github.com/mholt/PapaParse/issues/76\n\t\tvar usingAsyncReader = typeof FileReader !== 'undefined';\t// Safari doesn't consider it a function - see issue #105\n\n\t\tthis.stream = function(file)\n\t\t{\n\t\t\tthis._input = file;\n\t\t\tslice = file.slice || file.webkitSlice || file.mozSlice;\n\n\t\t\tif (usingAsyncReader)\n\t\t\t{\n\t\t\t\treader = new FileReader();\t\t// Preferred method of reading files, even in workers\n\t\t\t\treader.onload = bindFunction(this._chunkLoaded, this);\n\t\t\t\treader.onerror = bindFunction(this._chunkError, this);\n\t\t\t}\n\t\t\telse\n\t\t\t\treader = new FileReaderSync();\t// Hack for running in a web worker in Firefox\n\n\t\t\tthis._nextChunk();\t// Starts streaming\n\t\t};\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (!this._finished && (!this._config.preview || this._rowCount < this._config.preview))\n\t\t\t\tthis._readChunk();\n\t\t};\n\n\t\tthis._readChunk = function()\n\t\t{\n\t\t\tvar input = this._input;\n\t\t\tif (this._config.chunkSize)\n\t\t\t{\n\t\t\t\tvar end = Math.min(this._start + this._config.chunkSize, this._input.size);\n\t\t\t\tinput = slice.call(input, this._start, end);\n\t\t\t}\n\t\t\tvar txt = reader.readAsText(input, this._config.encoding);\n\t\t\tif (!usingAsyncReader)\n\t\t\t\tthis._chunkLoaded({ target: { result: txt } });\t// mimic the async signature\n\t\t};\n\n\t\tthis._chunkLoaded = function(event)\n\t\t{\n\t\t\t// Very important to increment start each time before handling results\n\t\t\tthis._start += this._config.chunkSize;\n\t\t\tthis._finished = !this._config.chunkSize || this._start >= this._input.size;\n\t\t\tthis.parseChunk(event.target.result);\n\t\t};\n\n\t\tthis._chunkError = function()\n\t\t{\n\t\t\tthis._sendError(reader.error);\n\t\t};\n\n\t}\n\tFileStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tFileStreamer.prototype.constructor = FileStreamer;\n\n\n\tfunction StringStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar remaining;\n\t\tthis.stream = function(s)\n\t\t{\n\t\t\tremaining = s;\n\t\t\treturn this._nextChunk();\n\t\t};\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (this._finished) return;\n\t\t\tvar size = this._config.chunkSize;\n\t\t\tvar chunk = size ? remaining.substr(0, size) : remaining;\n\t\t\tremaining = size ? remaining.substr(size) : '';\n\t\t\tthis._finished = !remaining;\n\t\t\treturn this.parseChunk(chunk);\n\t\t};\n\t}\n\tStringStreamer.prototype = Object.create(StringStreamer.prototype);\n\tStringStreamer.prototype.constructor = StringStreamer;\n\n\n\tfunction ReadableStreamStreamer(config)\n\t{\n\t\tconfig = config || {};\n\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar queue = [];\n\t\tvar parseOnData = true;\n\t\tvar streamHasEnded = false;\n\n\t\tthis.pause = function()\n\t\t{\n\t\t\tChunkStreamer.prototype.pause.apply(this, arguments);\n\t\t\tthis._input.pause();\n\t\t};\n\n\t\tthis.resume = function()\n\t\t{\n\t\t\tChunkStreamer.prototype.resume.apply(this, arguments);\n\t\t\tthis._input.resume();\n\t\t};\n\n\t\tthis.stream = function(stream)\n\t\t{\n\t\t\tthis._input = stream;\n\n\t\t\tthis._input.on('data', this._streamData);\n\t\t\tthis._input.on('end', this._streamEnd);\n\t\t\tthis._input.on('error', this._streamError);\n\t\t};\n\n\t\tthis._checkIsFinished = function()\n\t\t{\n\t\t\tif (streamHasEnded && queue.length === 1) {\n\t\t\t\tthis._finished = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tthis._checkIsFinished();\n\t\t\tif (queue.length)\n\t\t\t{\n\t\t\t\tthis.parseChunk(queue.shift());\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tparseOnData = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._streamData = bindFunction(function(chunk)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tqueue.push(typeof chunk === 'string' ? chunk : chunk.toString(this._config.encoding));\n\n\t\t\t\tif (parseOnData)\n\t\t\t\t{\n\t\t\t\t\tparseOnData = false;\n\t\t\t\t\tthis._checkIsFinished();\n\t\t\t\t\tthis.parseChunk(queue.shift());\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (error)\n\t\t\t{\n\t\t\t\tthis._streamError(error);\n\t\t\t}\n\t\t}, this);\n\n\t\tthis._streamError = bindFunction(function(error)\n\t\t{\n\t\t\tthis._streamCleanUp();\n\t\t\tthis._sendError(error);\n\t\t}, this);\n\n\t\tthis._streamEnd = bindFunction(function()\n\t\t{\n\t\t\tthis._streamCleanUp();\n\t\t\tstreamHasEnded = true;\n\t\t\tthis._streamData('');\n\t\t}, this);\n\n\t\tthis._streamCleanUp = bindFunction(function()\n\t\t{\n\t\t\tthis._input.removeListener('data', this._streamData);\n\t\t\tthis._input.removeListener('end', this._streamEnd);\n\t\t\tthis._input.removeListener('error', this._streamError);\n\t\t}, this);\n\t}\n\tReadableStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tReadableStreamStreamer.prototype.constructor = ReadableStreamStreamer;\n\n\n\tfunction DuplexStreamStreamer(_config) {\n\t\tvar Duplex = require('stream').Duplex;\n\t\tvar config = copy(_config);\n\t\tvar parseOnWrite = true;\n\t\tvar writeStreamHasFinished = false;\n\t\tvar parseCallbackQueue = [];\n\t\tvar stream = null;\n\n\t\tthis._onCsvData = function(results)\n\t\t{\n\t\t\tvar data = results.data;\n\t\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\t\tif (!stream.push(data[i]) && !this._handle.paused()) {\n\t\t\t\t\t// the writeable consumer buffer has filled up\n\t\t\t\t\t// so we need to pause until more items\n\t\t\t\t\t// can be processed\n\t\t\t\t\tthis._handle.pause();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis._onCsvComplete = function()\n\t\t{\n\t\t\t// node will finish the read stream when\n\t\t\t// null is pushed\n\t\t\tstream.push(null);\n\t\t};\n\n\t\tconfig.step = bindFunction(this._onCsvData, this);\n\t\tconfig.complete = bindFunction(this._onCsvComplete, this);\n\t\tChunkStreamer.call(this, config);\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (writeStreamHasFinished && parseCallbackQueue.length === 1) {\n\t\t\t\tthis._finished = true;\n\t\t\t}\n\t\t\tif (parseCallbackQueue.length) {\n\t\t\t\tparseCallbackQueue.shift()();\n\t\t\t} else {\n\t\t\t\tparseOnWrite = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._addToParseQueue = function(chunk, callback)\n\t\t{\n\t\t\t// add to queue so that we can indicate\n\t\t\t// completion via callback\n\t\t\t// node will automatically pause the incoming stream\n\t\t\t// when too many items have been added without their\n\t\t\t// callback being invoked\n\t\t\tparseCallbackQueue.push(bindFunction(function() {\n\t\t\t\tthis.parseChunk(typeof chunk === 'string' ? chunk : chunk.toString(config.encoding));\n\t\t\t\tif (isFunction(callback)) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t}, this));\n\t\t\tif (parseOnWrite) {\n\t\t\t\tparseOnWrite = false;\n\t\t\t\tthis._nextChunk();\n\t\t\t}\n\t\t};\n\n\t\tthis._onRead = function()\n\t\t{\n\t\t\tif (this._handle.paused()) {\n\t\t\t\t// the writeable consumer can handle more data\n\t\t\t\t// so resume the chunk parsing\n\t\t\t\tthis._handle.resume();\n\t\t\t}\n\t\t};\n\n\t\tthis._onWrite = function(chunk, encoding, callback)\n\t\t{\n\t\t\tthis._addToParseQueue(chunk, callback);\n\t\t};\n\n\t\tthis._onWriteComplete = function()\n\t\t{\n\t\t\twriteStreamHasFinished = true;\n\t\t\t// have to write empty string\n\t\t\t// so parser knows its done\n\t\t\tthis._addToParseQueue('');\n\t\t};\n\n\t\tthis.getStream = function()\n\t\t{\n\t\t\treturn stream;\n\t\t};\n\t\tstream = new Duplex({\n\t\t\treadableObjectMode: true,\n\t\t\tdecodeStrings: false,\n\t\t\tread: bindFunction(this._onRead, this),\n\t\t\twrite: bindFunction(this._onWrite, this)\n\t\t});\n\t\tstream.once('finish', bindFunction(this._onWriteComplete, this));\n\t}\n\tDuplexStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tDuplexStreamStreamer.prototype.constructor = DuplexStreamStreamer;\n\n\n\t// Use one ParserHandle per entire CSV file or string\n\tfunction ParserHandle(_config)\n\t{\n\t\t// One goal is to minimize the use of regular expressions...\n\t\tvar FLOAT = /^\\s*-?(\\d*\\.?\\d+|\\d+\\.?\\d*)(e[-+]?\\d+)?\\s*$/i;\n\t\tvar ISO_DATE = /(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))/;\n\n\t\tvar self = this;\n\t\tvar _stepCounter = 0;\t// Number of times step was called (number of rows parsed)\n\t\tvar _rowCounter = 0;\t// Number of rows that have been parsed so far\n\t\tvar _input;\t\t\t\t// The input being parsed\n\t\tvar _parser;\t\t\t// The core parser being used\n\t\tvar _paused = false;\t// Whether we are paused or not\n\t\tvar _aborted = false;\t// Whether the parser has aborted or not\n\t\tvar _delimiterError;\t// Temporary state between delimiter detection and processing results\n\t\tvar _fields = [];\t\t// Fields are from the header row of the input, if there is one\n\t\tvar _results = {\t\t// The last results returned from the parser\n\t\t\tdata: [],\n\t\t\terrors: [],\n\t\t\tmeta: {}\n\t\t};\n\n\t\tif (isFunction(_config.step))\n\t\t{\n\t\t\tvar userStep = _config.step;\n\t\t\t_config.step = function(results)\n\t\t\t{\n\t\t\t\t_results = results;\n\n\t\t\t\tif (needsHeaderRow())\n\t\t\t\t\tprocessResults();\n\t\t\t\telse\t// only call user's step function after header row\n\t\t\t\t{\n\t\t\t\t\tprocessResults();\n\n\t\t\t\t\t// It's possbile that this line was empty and there's no row here after all\n\t\t\t\t\tif (_results.data.length === 0)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t_stepCounter += results.data.length;\n\t\t\t\t\tif (_config.preview && _stepCounter > _config.preview)\n\t\t\t\t\t\t_parser.abort();\n\t\t\t\t\telse\n\t\t\t\t\t\tuserStep(_results, self);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Parses input. Most users won't need, and shouldn't mess with, the baseIndex\n\t\t * and ignoreLastRow parameters. They are used by streamers (wrapper functions)\n\t\t * when an input comes in multiple chunks, like from a file.\n\t\t */\n\t\tthis.parse = function(input, baseIndex, ignoreLastRow)\n\t\t{\n\t\t\tvar quoteChar = _config.quoteChar || '\"';\n\t\t\tif (!_config.newline)\n\t\t\t\t_config.newline = guessLineEndings(input, quoteChar);\n\n\t\t\t_delimiterError = false;\n\t\t\tif (!_config.delimiter)\n\t\t\t{\n\t\t\t\tvar delimGuess = guessDelimiter(input, _config.newline, _config.skipEmptyLines, _config.comments);\n\t\t\t\tif (delimGuess.successful)\n\t\t\t\t\t_config.delimiter = delimGuess.bestDelimiter;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t_delimiterError = true;\t// add error after parsing (otherwise it would be overwritten)\n\t\t\t\t\t_config.delimiter = Papa.DefaultDelimiter;\n\t\t\t\t}\n\t\t\t\t_results.meta.delimiter = _config.delimiter;\n\t\t\t}\n\t\t\telse if(isFunction(_config.delimiter))\n\t\t\t{\n\t\t\t\t_config.delimiter = _config.delimiter(input);\n\t\t\t\t_results.meta.delimiter = _config.delimiter;\n\t\t\t}\n\n\t\t\tvar parserConfig = copy(_config);\n\t\t\tif (_config.preview && _config.header)\n\t\t\t\tparserConfig.preview++;\t// to compensate for header row\n\n\t\t\t_input = input;\n\t\t\t_parser = new Parser(parserConfig);\n\t\t\t_results = _parser.parse(_input, baseIndex, ignoreLastRow);\n\t\t\tprocessResults();\n\t\t\treturn _paused ? { meta: { paused: true } } : (_results || { meta: { paused: false } });\n\t\t};\n\n\t\tthis.paused = function()\n\t\t{\n\t\t\treturn _paused;\n\t\t};\n\n\t\tthis.pause = function()\n\t\t{\n\t\t\t_paused = true;\n\t\t\t_parser.abort();\n\t\t\t_input = _input.substr(_parser.getCharIndex());\n\t\t};\n\n\t\tthis.resume = function()\n\t\t{\n\t\t\t_paused = false;\n\t\t\tself.streamer.parseChunk(_input, true);\n\t\t};\n\n\t\tthis.aborted = function()\n\t\t{\n\t\t\treturn _aborted;\n\t\t};\n\n\t\tthis.abort = function()\n\t\t{\n\t\t\t_aborted = true;\n\t\t\t_parser.abort();\n\t\t\t_results.meta.aborted = true;\n\t\t\tif (isFunction(_config.complete))\n\t\t\t\t_config.complete(_results);\n\t\t\t_input = '';\n\t\t};\n\n\t\tfunction testEmptyLine(s) {\n\t\t\treturn _config.skipEmptyLines === 'greedy' ? s.join('').trim() === '' : s.length === 1 && s[0].length === 0;\n\t\t}\n\n\t\tfunction processResults()\n\t\t{\n\t\t\tif (_results && _delimiterError)\n\t\t\t{\n\t\t\t\taddError('Delimiter', 'UndetectableDelimiter', 'Unable to auto-detect delimiting character; defaulted to \\'' + Papa.DefaultDelimiter + '\\'');\n\t\t\t\t_delimiterError = false;\n\t\t\t}\n\n\t\t\tif (_config.skipEmptyLines)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < _results.data.length; i++)\n\t\t\t\t\tif (testEmptyLine(_results.data[i]))\n\t\t\t\t\t\t_results.data.splice(i--, 1);\n\t\t\t}\n\n\t\t\tif (needsHeaderRow())\n\t\t\t\tfillHeaderFields();\n\n\t\t\treturn applyHeaderAndDynamicTypingAndTransformation();\n\t\t}\n\n\t\tfunction needsHeaderRow()\n\t\t{\n\t\t\treturn _config.header && _fields.length === 0;\n\t\t}\n\n\t\tfunction fillHeaderFields()\n\t\t{\n\t\t\tif (!_results)\n\t\t\t\treturn;\n\t\t\tfor (var i = 0; needsHeaderRow() && i < _results.data.length; i++)\n\t\t\t\tfor (var j = 0; j < _results.data[i].length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar header = _results.data[i][j];\n\n\t\t\t\t\tif (_config.trimHeaders) {\n\t\t\t\t\t\theader = header.trim();\n\t\t\t\t\t}\n\n\t\t\t\t\t_fields.push(header);\n\t\t\t\t}\n\t\t\t_results.data.splice(0, 1);\n\t\t}\n\n\t\tfunction shouldApplyDynamicTyping(field) {\n\t\t\t// Cache function values to avoid calling it for each row\n\t\t\tif (_config.dynamicTypingFunction && _config.dynamicTyping[field] === undefined) {\n\t\t\t\t_config.dynamicTyping[field] = _config.dynamicTypingFunction(field);\n\t\t\t}\n\t\t\treturn (_config.dynamicTyping[field] || _config.dynamicTyping) === true;\n\t\t}\n\n\t\tfunction parseDynamic(field, value)\n\t\t{\n\t\t\tif (shouldApplyDynamicTyping(field))\n\t\t\t{\n\t\t\t\tif (value === 'true' || value === 'TRUE')\n\t\t\t\t\treturn true;\n\t\t\t\telse if (value === 'false' || value === 'FALSE')\n\t\t\t\t\treturn false;\n\t\t\t\telse if (FLOAT.test(value))\n\t\t\t\t\treturn parseFloat(value);\n\t\t\t\telse if (ISO_DATE.test(value))\n\t\t\t\t\treturn new Date(value);\n\t\t\t\telse\n\t\t\t\t\treturn (value === '' ? null : value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\n\t\tfunction applyHeaderAndDynamicTypingAndTransformation()\n\t\t{\n\t\t\tif (!_results || (!_config.header && !_config.dynamicTyping && !_config.transform))\n\t\t\t\treturn _results;\n\n\t\t\tfor (var i = 0; i < _results.data.length; i++)\n\t\t\t{\n\t\t\t\tvar row = _config.header ? {} : [];\n\n\t\t\t\tvar j;\n\t\t\t\tfor (j = 0; j < _results.data[i].length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar field = j;\n\t\t\t\t\tvar value = _results.data[i][j];\n\n\t\t\t\t\tif (_config.header)\n\t\t\t\t\t\tfield = j >= _fields.length ? '__parsed_extra' : _fields[j];\n\n\t\t\t\t\tif (_config.transform)\n\t\t\t\t\t\tvalue = _config.transform(value,field);\n\n\t\t\t\t\tvalue = parseDynamic(field, value);\n\n\t\t\t\t\tif (field === '__parsed_extra')\n\t\t\t\t\t{\n\t\t\t\t\t\trow[field] = row[field] || [];\n\t\t\t\t\t\trow[field].push(value);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\trow[field] = value;\n\t\t\t\t}\n\n\t\t\t\t_results.data[i] = row;\n\n\t\t\t\tif (_config.header)\n\t\t\t\t{\n\t\t\t\t\tif (j > _fields.length)\n\t\t\t\t\t\taddError('FieldMismatch', 'TooManyFields', 'Too many fields: expected ' + _fields.length + ' fields but parsed ' + j, _rowCounter + i);\n\t\t\t\t\telse if (j < _fields.length)\n\t\t\t\t\t\taddError('FieldMismatch', 'TooFewFields', 'Too few fields: expected ' + _fields.length + ' fields but parsed ' + j, _rowCounter + i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (_config.header && _results.meta)\n\t\t\t\t_results.meta.fields = _fields;\n\n\t\t\t_rowCounter += _results.data.length;\n\t\t\treturn _results;\n\t\t}\n\n\t\tfunction guessDelimiter(input, newline, skipEmptyLines, comments)\n\t\t{\n\t\t\tvar delimChoices = [',', '\\t', '|', ';', Papa.RECORD_SEP, Papa.UNIT_SEP];\n\t\t\tvar bestDelim, bestDelta, fieldCountPrevRow;\n\n\t\t\tfor (var i = 0; i < delimChoices.length; i++)\n\t\t\t{\n\t\t\t\tvar delim = delimChoices[i];\n\t\t\t\tvar delta = 0, avgFieldCount = 0, emptyLinesCount = 0;\n\t\t\t\tfieldCountPrevRow = undefined;\n\n\t\t\t\tvar preview = new Parser({\n\t\t\t\t\tcomments: comments,\n\t\t\t\t\tdelimiter: delim,\n\t\t\t\t\tnewline: newline,\n\t\t\t\t\tpreview: 10\n\t\t\t\t}).parse(input);\n\n\t\t\t\tfor (var j = 0; j < preview.data.length; j++)\n\t\t\t\t{\n\t\t\t\t\tif (skipEmptyLines && testEmptyLine(preview.data[j]))\n\t\t\t\t\t{\n\t\t\t\t\t\temptyLinesCount++;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tvar fieldCount = preview.data[j].length;\n\t\t\t\t\tavgFieldCount += fieldCount;\n\n\t\t\t\t\tif (typeof fieldCountPrevRow === 'undefined')\n\t\t\t\t\t{\n\t\t\t\t\t\tfieldCountPrevRow = fieldCount;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\telse if (fieldCount > 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tdelta += Math.abs(fieldCount - fieldCountPrevRow);\n\t\t\t\t\t\tfieldCountPrevRow = fieldCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (preview.data.length > 0)\n\t\t\t\t\tavgFieldCount /= (preview.data.length - emptyLinesCount);\n\n\t\t\t\tif ((typeof bestDelta === 'undefined' || delta < bestDelta)\n\t\t\t\t\t&& avgFieldCount > 1.99)\n\t\t\t\t{\n\t\t\t\t\tbestDelta = delta;\n\t\t\t\t\tbestDelim = delim;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_config.delimiter = bestDelim;\n\n\t\t\treturn {\n\t\t\t\tsuccessful: !!bestDelim,\n\t\t\t\tbestDelimiter: bestDelim\n\t\t\t};\n\t\t}\n\n\t\tfunction guessLineEndings(input, quoteChar)\n\t\t{\n\t\t\tinput = input.substr(0, 1024 * 1024);\t// max length 1 MB\n\t\t\t// Replace all the text inside quotes\n\t\t\tvar re = new RegExp(escapeRegExp(quoteChar) + '([^]*?)' + escapeRegExp(quoteChar), 'gm');\n\t\t\tinput = input.replace(re, '');\n\n\t\t\tvar r = input.split('\\r');\n\n\t\t\tvar n = input.split('\\n');\n\n\t\t\tvar nAppearsFirst = (n.length > 1 && n[0].length < r[0].length);\n\n\t\t\tif (r.length === 1 || nAppearsFirst)\n\t\t\t\treturn '\\n';\n\n\t\t\tvar numWithN = 0;\n\t\t\tfor (var i = 0; i < r.length; i++)\n\t\t\t{\n\t\t\t\tif (r[i][0] === '\\n')\n\t\t\t\t\tnumWithN++;\n\t\t\t}\n\n\t\t\treturn numWithN >= r.length / 2 ? '\\r\\n' : '\\r';\n\t\t}\n\n\t\tfunction addError(type, code, msg, row)\n\t\t{\n\t\t\t_results.errors.push({\n\t\t\t\ttype: type,\n\t\t\t\tcode: code,\n\t\t\t\tmessage: msg,\n\t\t\t\trow: row\n\t\t\t});\n\t\t}\n\t}\n\n\t/** https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions */\n\tfunction escapeRegExp(string)\n\t{\n\t\treturn string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n\t}\n\n\t/** The core parser implements speedy and correct CSV parsing */\n\tfunction Parser(config)\n\t{\n\t\t// Unpack the config object\n\t\tconfig = config || {};\n\t\tvar delim = config.delimiter;\n\t\tvar newline = config.newline;\n\t\tvar comments = config.comments;\n\t\tvar step = config.step;\n\t\tvar preview = config.preview;\n\t\tvar fastMode = config.fastMode;\n\t\tvar quoteChar;\n\t\t/** Allows for no quoteChar by setting quoteChar to undefined in config */\n\t\tif (config.quoteChar === undefined) {\n\t\t\tquoteChar = '\"';\n\t\t} else {\n\t\t\tquoteChar = config.quoteChar;\n\t\t}\n\t\tvar escapeChar = quoteChar;\n\t\tif (config.escapeChar !== undefined) {\n\t\t\tescapeChar = config.escapeChar;\n\t\t}\n\n\t\t// Delimiter must be valid\n\t\tif (typeof delim !== 'string'\n\t\t\t|| Papa.BAD_DELIMITERS.indexOf(delim) > -1)\n\t\t\tdelim = ',';\n\n\t\t// Comment character must be valid\n\t\tif (comments === delim)\n\t\t\tthrow 'Comment character same as delimiter';\n\t\telse if (comments === true)\n\t\t\tcomments = '#';\n\t\telse if (typeof comments !== 'string'\n\t\t\t|| Papa.BAD_DELIMITERS.indexOf(comments) > -1)\n\t\t\tcomments = false;\n\n\t\t// Newline must be valid: \\r, \\n, or \\r\\n\n\t\tif (newline !== '\\n' && newline !== '\\r' && newline !== '\\r\\n')\n\t\t\tnewline = '\\n';\n\n\t\t// We're gonna need these at the Parser scope\n\t\tvar cursor = 0;\n\t\tvar aborted = false;\n\n\t\tthis.parse = function(input, baseIndex, ignoreLastRow)\n\t\t{\n\t\t\t// For some reason, in Chrome, this speeds things up (!?)\n\t\t\tif (typeof input !== 'string')\n\t\t\t\tthrow 'Input must be a string';\n\n\t\t\t// We don't need to compute some of these every time parse() is called,\n\t\t\t// but having them in a more local scope seems to perform better\n\t\t\tvar inputLen = input.length,\n\t\t\t\tdelimLen = delim.length,\n\t\t\t\tnewlineLen = newline.length,\n\t\t\t\tcommentsLen = comments.length;\n\t\t\tvar stepIsFunction = isFunction(step);\n\n\t\t\t// Establish starting state\n\t\t\tcursor = 0;\n\t\t\tvar data = [], errors = [], row = [], lastCursor = 0;\n\n\t\t\tif (!input)\n\t\t\t\treturn returnable();\n\n\t\t\tif (fastMode || (fastMode !== false && input.indexOf(quoteChar) === -1))\n\t\t\t{\n\t\t\t\tvar rows = input.split(newline);\n\t\t\t\tfor (var i = 0; i < rows.length; i++)\n\t\t\t\t{\n\t\t\t\t\trow = rows[i];\n\t\t\t\t\tcursor += row.length;\n\t\t\t\t\tif (i !== rows.length - 1)\n\t\t\t\t\t\tcursor += newline.length;\n\t\t\t\t\telse if (ignoreLastRow)\n\t\t\t\t\t\treturn returnable();\n\t\t\t\t\tif (comments && row.substr(0, commentsLen) === comments)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t{\n\t\t\t\t\t\tdata = [];\n\t\t\t\t\t\tpushRow(row.split(delim));\n\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tpushRow(row.split(delim));\n\t\t\t\t\tif (preview && i >= preview)\n\t\t\t\t\t{\n\t\t\t\t\t\tdata = data.slice(0, preview);\n\t\t\t\t\t\treturn returnable(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn returnable();\n\t\t\t}\n\n\t\t\tvar nextDelim = input.indexOf(delim, cursor);\n\t\t\tvar nextNewline = input.indexOf(newline, cursor);\n\t\t\tvar quoteCharRegex = new RegExp(escapeChar.replace(/[-[\\]/{}()*+?.\\\\^$|]/g, '\\\\$&') + quoteChar, 'g');\n\t\t\tvar quoteSearch;\n\n\t\t\t// Parser loop\n\t\t\tfor (;;)\n\t\t\t{\n\t\t\t\t// Field has opening quote\n\t\t\t\tif (input[cursor] === quoteChar)\n\t\t\t\t{\n\t\t\t\t\t// Start our search for the closing quote where the cursor is\n\t\t\t\t\tquoteSearch = cursor;\n\n\t\t\t\t\t// Skip the opening quote\n\t\t\t\t\tcursor++;\n\n\t\t\t\t\tfor (;;)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Find closing quote\n\t\t\t\t\t\tquoteSearch = input.indexOf(quoteChar, quoteSearch + 1);\n\n\t\t\t\t\t\t//No other quotes are found - no other delimiters\n\t\t\t\t\t\tif (quoteSearch === -1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!ignoreLastRow) {\n\t\t\t\t\t\t\t\t// No closing quote... what a pity\n\t\t\t\t\t\t\t\terrors.push({\n\t\t\t\t\t\t\t\t\ttype: 'Quotes',\n\t\t\t\t\t\t\t\t\tcode: 'MissingQuotes',\n\t\t\t\t\t\t\t\t\tmessage: 'Quoted field unterminated',\n\t\t\t\t\t\t\t\t\trow: data.length,\t// row has yet to be inserted\n\t\t\t\t\t\t\t\t\tindex: cursor\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn finish();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Closing quote at EOF\n\t\t\t\t\t\tif (quoteSearch === inputLen - 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar value = input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar);\n\t\t\t\t\t\t\treturn finish(value);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If this quote is escaped, it's part of the data; skip it\n\t\t\t\t\t\t// If the quote character is the escape character, then check if the next character is the escape character\n\t\t\t\t\t\tif (quoteChar === escapeChar &&  input[quoteSearch + 1] === escapeChar)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tquoteSearch++;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If the quote character is not the escape character, then check if the previous character was the escape character\n\t\t\t\t\t\tif (quoteChar !== escapeChar && quoteSearch !== 0 && input[quoteSearch - 1] === escapeChar)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Check up to nextDelim or nextNewline, whichever is closest\n\t\t\t\t\t\tvar checkUpTo = nextNewline === -1 ? nextDelim : Math.min(nextDelim, nextNewline);\n\t\t\t\t\t\tvar spacesBetweenQuoteAndDelimiter = extraSpaces(checkUpTo);\n\n\t\t\t\t\t\t// Closing quote followed by delimiter or 'unnecessary spaces + delimiter'\n\t\t\t\t\t\tif (input[quoteSearch + 1 + spacesBetweenQuoteAndDelimiter] === delim)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\n\t\t\t\t\t\t\tcursor = quoteSearch + 1 + spacesBetweenQuoteAndDelimiter + delimLen;\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar spacesBetweenQuoteAndNewLine = extraSpaces(nextNewline);\n\n\t\t\t\t\t\t// Closing quote followed by newline or 'unnecessary spaces + newLine'\n\t\t\t\t\t\tif (input.substr(quoteSearch + 1 + spacesBetweenQuoteAndNewLine, newlineLen) === newline)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\n\t\t\t\t\t\t\tsaveRow(quoteSearch + 1 + spacesBetweenQuoteAndNewLine + newlineLen);\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\t// because we may have skipped the nextDelim in the quoted field\n\n\t\t\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (preview && data.length >= preview)\n\t\t\t\t\t\t\t\treturn returnable(true);\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t// Checks for valid closing quotes are complete (escaped quotes or quote followed by EOF/delimiter/newline) -- assume these quotes are part of an invalid text string\n\t\t\t\t\t\terrors.push({\n\t\t\t\t\t\t\ttype: 'Quotes',\n\t\t\t\t\t\t\tcode: 'InvalidQuotes',\n\t\t\t\t\t\t\tmessage: 'Trailing quote on quoted field is malformed',\n\t\t\t\t\t\t\trow: data.length,\t// row has yet to be inserted\n\t\t\t\t\t\t\tindex: cursor\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tquoteSearch++;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Comment found at start of new line\n\t\t\t\tif (comments && row.length === 0 && input.substr(cursor, commentsLen) === comments)\n\t\t\t\t{\n\t\t\t\t\tif (nextNewline === -1)\t// Comment ends at EOF\n\t\t\t\t\t\treturn returnable();\n\t\t\t\t\tcursor = nextNewline + newlineLen;\n\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Next delimiter comes before next newline, so we've reached end of field\n\t\t\t\tif (nextDelim !== -1 && (nextDelim < nextNewline || nextNewline === -1))\n\t\t\t\t{\n\t\t\t\t\trow.push(input.substring(cursor, nextDelim));\n\t\t\t\t\tcursor = nextDelim + delimLen;\n\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// End of row\n\t\t\t\tif (nextNewline !== -1)\n\t\t\t\t{\n\t\t\t\t\trow.push(input.substring(cursor, nextNewline));\n\t\t\t\t\tsaveRow(nextNewline + newlineLen);\n\n\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t{\n\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (preview && data.length >= preview)\n\t\t\t\t\t\treturn returnable(true);\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\n\t\t\treturn finish();\n\n\n\t\t\tfunction pushRow(row)\n\t\t\t{\n\t\t\t\tdata.push(row);\n\t\t\t\tlastCursor = cursor;\n\t\t\t}\n\n\t\t\t/**\n             * checks if there are extra spaces after closing quote and given index without any text\n             * if Yes, returns the number of spaces\n             */\n\t\t\tfunction extraSpaces(index) {\n\t\t\t\tvar spaceLength = 0;\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tvar textBetweenClosingQuoteAndIndex = input.substring(quoteSearch + 1, index);\n\t\t\t\t\tif (textBetweenClosingQuoteAndIndex && textBetweenClosingQuoteAndIndex.trim() === '') {\n\t\t\t\t\t\tspaceLength = textBetweenClosingQuoteAndIndex.length;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn spaceLength;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Appends the remaining input from cursor to the end into\n\t\t\t * row, saves the row, calls step, and returns the results.\n\t\t\t */\n\t\t\tfunction finish(value)\n\t\t\t{\n\t\t\t\tif (ignoreLastRow)\n\t\t\t\t\treturn returnable();\n\t\t\t\tif (typeof value === 'undefined')\n\t\t\t\t\tvalue = input.substr(cursor);\n\t\t\t\trow.push(value);\n\t\t\t\tcursor = inputLen;\t// important in case parsing is paused\n\t\t\t\tpushRow(row);\n\t\t\t\tif (stepIsFunction)\n\t\t\t\t\tdoStep();\n\t\t\t\treturn returnable();\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Appends the current row to the results. It sets the cursor\n\t\t\t * to newCursor and finds the nextNewline. The caller should\n\t\t\t * take care to execute user's step function and check for\n\t\t\t * preview and end parsing if necessary.\n\t\t\t */\n\t\t\tfunction saveRow(newCursor)\n\t\t\t{\n\t\t\t\tcursor = newCursor;\n\t\t\t\tpushRow(row);\n\t\t\t\trow = [];\n\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t}\n\n\t\t\t/** Returns an object with the results, errors, and meta. */\n\t\t\tfunction returnable(stopped)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\tdata: data,\n\t\t\t\t\terrors: errors,\n\t\t\t\t\tmeta: {\n\t\t\t\t\t\tdelimiter: delim,\n\t\t\t\t\t\tlinebreak: newline,\n\t\t\t\t\t\taborted: aborted,\n\t\t\t\t\t\ttruncated: !!stopped,\n\t\t\t\t\t\tcursor: lastCursor + (baseIndex || 0)\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t/** Executes the user's step function and resets data & errors. */\n\t\t\tfunction doStep()\n\t\t\t{\n\t\t\t\tstep(returnable());\n\t\t\t\tdata = [];\n\t\t\t\terrors = [];\n\t\t\t}\n\t\t};\n\n\t\t/** Sets the abort flag */\n\t\tthis.abort = function()\n\t\t{\n\t\t\taborted = true;\n\t\t};\n\n\t\t/** Gets the cursor position */\n\t\tthis.getCharIndex = function()\n\t\t{\n\t\t\treturn cursor;\n\t\t};\n\t}\n\n\n\t// If you need to load Papa Parse asynchronously and you also need worker threads, hard-code\n\t// the script path here. See: https://github.com/mholt/PapaParse/issues/87#issuecomment-57885358\n\tfunction getScriptPath()\n\t{\n\t\tvar scripts = document.getElementsByTagName('script');\n\t\treturn scripts.length ? scripts[scripts.length - 1].src : '';\n\t}\n\n\tfunction newWorker()\n\t{\n\t\tif (!Papa.WORKERS_SUPPORTED)\n\t\t\treturn false;\n\t\tif (!LOADED_SYNC && Papa.SCRIPT_PATH === null)\n\t\t\tthrow new Error(\n\t\t\t\t'Script path cannot be determined automatically when Papa Parse is loaded asynchronously. ' +\n\t\t\t\t'You need to set Papa.SCRIPT_PATH manually.'\n\t\t\t);\n\t\tvar workerUrl = Papa.SCRIPT_PATH || AUTO_SCRIPT_PATH;\n\t\t// Append 'papaworker' to the search string to tell papaparse that this is our worker.\n\t\tworkerUrl += (workerUrl.indexOf('?') !== -1 ? '&' : '?') + 'papaworker';\n\t\tvar w = new global.Worker(workerUrl);\n\t\tw.onmessage = mainThreadReceivedMessage;\n\t\tw.id = workerIdCounter++;\n\t\tworkers[w.id] = w;\n\t\treturn w;\n\t}\n\n\t/** Callback when main thread receives a message */\n\tfunction mainThreadReceivedMessage(e)\n\t{\n\t\tvar msg = e.data;\n\t\tvar worker = workers[msg.workerId];\n\t\tvar aborted = false;\n\n\t\tif (msg.error)\n\t\t\tworker.userError(msg.error, msg.file);\n\t\telse if (msg.results && msg.results.data)\n\t\t{\n\t\t\tvar abort = function() {\n\t\t\t\taborted = true;\n\t\t\t\tcompleteWorker(msg.workerId, { data: [], errors: [], meta: { aborted: true } });\n\t\t\t};\n\n\t\t\tvar handle = {\n\t\t\t\tabort: abort,\n\t\t\t\tpause: notImplemented,\n\t\t\t\tresume: notImplemented\n\t\t\t};\n\n\t\t\tif (isFunction(worker.userStep))\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < msg.results.data.length; i++)\n\t\t\t\t{\n\t\t\t\t\tworker.userStep({\n\t\t\t\t\t\tdata: [msg.results.data[i]],\n\t\t\t\t\t\terrors: msg.results.errors,\n\t\t\t\t\t\tmeta: msg.results.meta\n\t\t\t\t\t}, handle);\n\t\t\t\t\tif (aborted)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdelete msg.results;\t// free memory ASAP\n\t\t\t}\n\t\t\telse if (isFunction(worker.userChunk))\n\t\t\t{\n\t\t\t\tworker.userChunk(msg.results, handle, msg.file);\n\t\t\t\tdelete msg.results;\n\t\t\t}\n\t\t}\n\n\t\tif (msg.finished && !aborted)\n\t\t\tcompleteWorker(msg.workerId, msg.results);\n\t}\n\n\tfunction completeWorker(workerId, results) {\n\t\tvar worker = workers[workerId];\n\t\tif (isFunction(worker.userComplete))\n\t\t\tworker.userComplete(results);\n\t\tworker.terminate();\n\t\tdelete workers[workerId];\n\t}\n\n\tfunction notImplemented() {\n\t\tthrow 'Not implemented.';\n\t}\n\n\t/** Callback when worker thread receives a message */\n\tfunction workerThreadReceivedMessage(e)\n\t{\n\t\tvar msg = e.data;\n\n\t\tif (typeof Papa.WORKER_ID === 'undefined' && msg)\n\t\t\tPapa.WORKER_ID = msg.workerId;\n\n\t\tif (typeof msg.input === 'string')\n\t\t{\n\t\t\tglobal.postMessage({\n\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\tresults: Papa.parse(msg.input, msg.config),\n\t\t\t\tfinished: true\n\t\t\t});\n\t\t}\n\t\telse if ((global.File && msg.input instanceof File) || msg.input instanceof Object)\t// thank you, Safari (see issue #106)\n\t\t{\n\t\t\tvar results = Papa.parse(msg.input, msg.config);\n\t\t\tif (results)\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\tresults: results,\n\t\t\t\t\tfinished: true\n\t\t\t\t});\n\t\t}\n\t}\n\n\t/** Makes a deep copy of an array or object (mostly) */\n\tfunction copy(obj)\n\t{\n\t\tif (typeof obj !== 'object' || obj === null)\n\t\t\treturn obj;\n\t\tvar cpy = obj instanceof Array ? [] : {};\n\t\tfor (var key in obj)\n\t\t\tcpy[key] = copy(obj[key]);\n\t\treturn cpy;\n\t}\n\n\tfunction bindFunction(f, self)\n\t{\n\t\treturn function() { f.apply(self, arguments); };\n\t}\n\n\tfunction isFunction(func)\n\t{\n\t\treturn typeof func === 'function';\n\t}\n\n\treturn Papa;\n}));\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\nexports.setImmediate = setImmediate;\nexports.clearImmediate = clearImmediate;\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","module.exports = require('./lib/_stream_writable.js');\n","module.exports = require('./lib/_stream_duplex.js');\n","module.exports = require('./readable').Transform\n","module.exports = require('./readable').PassThrough\n"],"sourceRoot":""}