{"version":3,"sources":["webpack:////usr/src/sentry/node_modules/echarts/lib/component/toolbox/featureManager.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/helper/sliderMove.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/dataZoom/DataZoomModel.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/dataZoom/DataZoomView.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/helper/RoamController.js","webpack:///./app/views/organizationEvents/loadingPanel.jsx","webpack:////usr/src/sentry/node_modules/echarts/lib/component/helper/cursorHelper.js","webpack:////usr/src/sentry/node_modules/echarts/lib/chart/helper/LineDraw.js","webpack:////usr/src/sentry/node_modules/echarts/lib/chart/helper/Line.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/helper/BrushController.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/dataZoom/helper.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/marker/MarkerModel.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/marker/markerHelper.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/marker/MarkerView.js","webpack:///./app/utils/getPeriod.jsx","webpack:////usr/src/sentry/node_modules/echarts/lib/component/helper/interactionMutex.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/helper/brushHelper.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/helper/BrushTargetManager.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/dataZoom.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/dataZoom/typeDefaulter.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/dataZoom/dataZoomProcessor.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/dataZoom/dataZoomAction.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/markLine.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/toolbox.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/dataZoom/history.js","webpack:///./app/components/charts/components/dataZoom.jsx","webpack:///./app/components/charts/components/toolBox.jsx","webpack:///./app/components/charts/chartZoom.jsx","webpack:///./app/components/charts/releaseSeries.jsx","webpack:///./app/components/charts/components/markLine.jsx","webpack:////usr/src/sentry/node_modules/echarts/lib/chart/helper/LinePath.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/dataZoom/AxisProxy.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/dataZoom/SliderZoomModel.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/dataZoom/SliderZoomView.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/dataZoom/InsideZoomModel.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/dataZoom/InsideZoomView.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/dataZoom/roams.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/marker/MarkLineModel.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/marker/MarkLineView.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/toolbox/ToolboxModel.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/toolbox/ToolboxView.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/toolbox/feature/SaveAsImage.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/toolbox/feature/MagicType.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/toolbox/feature/DataView.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/toolbox/feature/DataZoom.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/dataZoomSelect.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/dataZoom/SelectZoomModel.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/dataZoom/SelectZoomView.js","webpack:////usr/src/sentry/node_modules/echarts/lib/component/toolbox/feature/Restore.js"],"names":["features","exports","register","name","ctor","get","getSpanSign","handleEnds","handleIndex","dist","span","Math","abs","sign","restrict","value","extend","min","max","module","delta","extent","minSpan","maxSpan","extentSpan","originalDistSign","extentMinSpan","realExtent","slice","currDistSign","__webpack_require__","__DEV__","echarts","zrUtil","env","modelUtil","helper","AxisProxy","each","eachAxisDim","retrieveRaw","option","ret","hasOwnProperty","updateRangeUse","dataZoomModel","rawOption","rangePropMode","_rangePropMode","rangeModeInOption","names","index","percentSpecified","valueSpecified","_default","extendComponentModel","type","dependencies","defaultOption","zlevel","z","orient","xAxisIndex","yAxisIndex","filterMode","throttle","start","end","startValue","endValue","minValueSpan","maxValueSpan","rangeMode","init","parentModel","ecModel","this","_dataIntervalByAxis","_dataInfo","_axisProxies","textStyleModel","_autoThrottle","mergeDefaultAndTheme","doInit","mergeOption","newOption","merge","thisOption","canvasSupported","realtime","_setDefaultThrottle","getModel","_resetTarget","_giveAxisProxies","axisProxies","eachTargetAxis","dimNames","axisIndex","axisModel","dependentModels","axis","axisProxy","__dzAxisProxy","autoMode","_judgeAutoMode","axisIndexName","normalizeToArray","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","dimName","length","singleAxis","singleAxisModel","singleAxisIndex","componentIndex","axisIndices","axisModels","i","len","push","eachSeries","seriesModel","_isSeriesHasAllAxesTypeOf","axisId","queryComponents","mainType","id","indexOf","dim","axisType","is","seriesAxisIndex","globalOption","animation","animationDurationUpdate","getFirstTargetAxisModel","firstAxisModel","indices","callback","context","call","getAxisProxy","getAxisModel","setRawRange","opt","ignoreUpdateRangeUsg","getPercentRange","findRepresentativeAxisProxy","getDataPercentWindow","getValueRange","axisDimName","getDataValueWindow","key","hostedBy","getRangePropMode","render","api","payload","getTargetCoordInfo","coordSysLists","getComponent","coordModel","getCoordSysModel","store","coordIndex","item","model","save","Eventful","eventTool","interactionMutex","RoamController","zr","pointerChecker","_zr","_opt","bind","mousedownHandler","mousedown","mousemoveHandler","mousemove","mouseupHandler","mouseup","mousewheelHandler","mousewheel","pinchHandler","pinch","setPointerChecker","enable","controlType","disable","defaults","clone","zoomOnMouseWheel","moveOnMouseMove","preventDefaultMouseMove","on","off","dispose","isDragging","_dragging","isPinching","_pinching","e","notLeftMouse","target","draggable","x","offsetX","y","offsetY","_x","_y","checkKeyBinding","gestureEvent","isTaken","oldX","oldY","dx","dy","stop","event","trigger","wheelDelta","zoomDelta","zoom","pinchScale","pinchX","pinchY","zoomX","zoomY","roamController","prop","setting","isString","mixin","d","__webpack_exports__","LoadingMask","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_emotion__WEBPACK_IMPORTED_MODULE_1__","styled","p","theme","offWhite","borderRadius","LoadingPanel","props","a","createElement","IRRELEVANT_EXCLUDES","axisPointer","tooltip","brush","onIrrelevantElement","targetCoordSysModel","getComponentByElement","topTarget","coordSys","coordinateSystem","graphic","LineGroup","LineDraw","_ctor","group","Group","lineDrawProto","prototype","makeSeriesScope","lineData","hostModel","lineStyle","getLineStyle","hoverLineStyle","labelModel","hoverLabelModel","isPointNaN","pt","isNaN","lineNeedsDraw","pts","isPersistent","updateData","lineDraw","oldLineData","_lineData","removeAll","seriesScope","diff","add","idx","getItemLayout","el","setItemGraphicEl","doAdd","update","newIdx","oldIdx","newLineData","itemEl","getItemGraphicEl","remove","doUpdate","execute","updateLayout","eachItemGraphicEl","incrementalPrepareUpdate","_seriesScope","incrementalUpdate","taskParams","updateIncrementalAndHover","isGroup","incremental","useHoverLayer","traverse","_clearIncremental","_incremental","clearDisplaybles","vector","symbolUtil","LinePath","round","SYMBOL_CATEGORIES","makeSymbolTypeKey","symbolCategory","createSymbol","color","getItemVisual","symbolType","symbolSize","isArray","symbolPath","setLinePoints","targetShape","points","p1","p2","cp1","x1","y1","x2","y2","percent","cpx1","cpy1","NaN","Line","_createLine","lineProto","beforeUpdate","symbolFrom","childOfName","symbolTo","label","ignore","invScale","parentNode","parent","scale","line","__dirty","shape","fromPos","pointAt","toPos","sub","normalize","attr","tangent","tangentAt","PI","atan2","textPosition","textAlign","textVerticalAlign","distance","__position","halfPercent","cp","rotation","style","__verticalAlign","__textAlign","position","createLine","initProps","Text","symbol","_updateCommonStl","linePoints","updateProps","hasItemOption","itemModel","getItemModel","visualColor","visualOpacity","retrieve3","opacity","useStyle","strokeNoScale","fill","stroke","hoverStyle","setColor","setStyle","defaultLabelColor","baseText","showLabel","getShallow","hoverShowLabel","getFormattedLabel","dataType","rawVal","getRawValue","getName","isFinite","normalText","emphasisText","retrieve2","labelStyle","setTextStyle","text","autoColor","textFill","getTextColor","fontStyle","fontWeight","fontSize","fontFamily","setHoverStyle","highlight","downplay","linePath","dirty","inherits","DataDiffer","curry","map","mathMin","mathMax","mathPow","pow","COVER_Z","UNSELECT_THRESHOLD","MIN_RESIZE_LINE_WIDTH","MUTEX_RESOURCE_KEY","DIRECTION_MAP","w","s","CURSOR_MAP","ne","sw","nw","se","DEFAULT_BRUSH_OPT","brushStyle","lineWidth","transformable","brushMode","removeOnClick","baseUID","BrushController","_brushType","_brushOption","_panels","_track","_covers","_creatingCover","_creatingPanel","_enableGlobalPan","_uid","_handlers","mouseHandlers","handler","eventName","createCover","controller","brushOption","cover","coverRenderers","brushType","__brushOption","updateZ","endCreating","creatingCover","coverRenderer","getCoverRenderer","updateCoverShape","range","z2","updateCoverAfterCreation","updateCommon","getPanelByPoint","localCursorPoint","panel","panels","transform","_transform","pn","isTargetByCursor","getPanelByCover","panelId","clearCovers","covers","originalLength","areas","isEnd","getTrackEnds","track","tail","createBaseRectCover","doDrift","edgeNames","Rect","makeStyle","silent","cursor","drift","ondragend","invisible","updateBaseRect","localRange","handleSize","xa","ya","x2a","y2a","width","height","widtha","heighta","updateRectShape","mainEl","childAt","globalDir","getGlobalDirection","localDirection","split","reverse","join","transformDirection","getTransform","left","right","top","bottom","h","xmin","ymin","xmax","ymax","setShape","clipByPanel","formatRectRange","driftRect","toRectRange","fromRectRange","rectRange","localDelta","toLocalDelta","namePart","ind","driftPolygon","point","thisGroup","localD","transformCoordToLocal","localZero","data","clipPath","preventDefault","rawE","mainShapeContain","contain","updateCoverByMouse","eventParams","thisBrushOption","shouldShowCover","determineBrushType","getCreatingRange","defaultBrushType","constructor","enableBrush","release","take","doEnableBrush","setPanels","panelOpts","mount","enableGlobalPan","getLocalTransform","eachCover","cb","updateCovers","brushOptionList","tmpIdPrefix","oldCovers","newCovers","getKey","addOrUpdate","oldIndex","newIndex","newBrushOption","unmount","handleDragEnd","currPanel","setCursorStyle","resetCursor","lineX","getLineRenderer","lineY","rect","localTrack","ends","polygon","Polyline","Polygon","xyIndex","otherExtent","getLinearBrushOtherExtent","getWidth","getHeight","formatUtil","COORDS","createNameEach","attrs","capitalNames","capitalFirst","capitalAttrs","nameObj","capital","j","isCoordSupported","coordType","createLinkedNodesFinder","forEachNode","forEachEdgeType","edgeIdGetter","sourceNode","existsLink","result","nodes","records","edgeType","absorb","processSingleNode","node","isNodeAbsorded","hasLink","edgeId","isLinked","dataFormatMixin","addCommas","encodeHTML","fillLabel","defaultEmphasis","MarkerModel","extraOpt","createdBySelf","isAnimationEnabled","hostSeries","__hostSeries","newOpt","isInit","modelPropName","markerOpt","markerModel","Array","seriesIndex","formatTooltip","dataIndex","getData","formattedValue","html","_data","setData","numberUtil","isDimensionStacked","markerTypeCalculatorWithExtent","mlType","otherDataDim","targetDataDim","otherCoordIndex","targetCoordIndex","coordArr","calcDataDim","getCalculationInfo","numCalculate","indicesOfNearest","precision","getPrecision","toFixed","markerTypeCalculator","average","getAxisInfo","valueIndex","valueDim","valueDataDim","getDimension","valueAxis","getAxis","dataDim","dimensions","dimItem","getDimensionInfo","coordDim","dataDimToCoordDim","baseAxis","getOtherAxis","baseDataDim","mapDimension","getBaseAxis","sum","count","val","getMedian","getDataExtent","dataTransform","parseFloat","hasXAndY","coord","dims","axisInfo","xAxis","radiusAxis","yAxis","angleAxis","dataFilter","containData","hasXOrY","dimValueGetter","dimIndex","extendComponentView","markerGroupMap","createHashMap","__keep","markerModelKey","renderSeries","getPeriod","_ref","period","shouldDoublePeriod","arguments","undefined","DEFAULT_STATS_PERIOD","statsPeriod","_period$match","match","_period$match2","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default","periodNumber","periodLength","concat","parseInt","Error","formattedStart","getUtcDateString","formattedEnd","moment","previousPeriodStart","subtract","ATTR","getStore","registerAction","resourceKey","userKey","BoundingRect","graphicUtil","normalizeRect","create","makeRectPanelClipPath","localPoints","clipPointsByRect","makeLinearBrushOtherExtent","specifiedXYIndex","brushWidth","base","makeRectIsTargetByCursor","targetModel","brushHelper","COORD_CONVERTS","INCLUDE_FINDER_MAIN_TYPES","BrushTargetManager","targetInfoList","_targetInfoList","info","foundCpts","parseFinder","targetInfoBuilders","builder","include","proto","formatMinMax","minMax","includeMainTypes","setOutputRanges","matchOutputRanges","area","coordRange","coordRanges","coordConvert","__rangeOffset","offset","diffProcessor","values","xyMinMax","targetInfo","findTargetInfo","coordSyses","setInputRanges","xyMinMaxCurr","xyMinMaxOrigin","sizeCurr","sizeOrigin","scales","rangeOffset","getSize","makePanelOpts","getDefaultBrushType","getPanelRect","coordSysModel","controlSeries","areaPanelId","targetInfoMatchers","grid","xAxisModels","yAxisModels","gridModels","gridModelMap","xAxesHas","yAxesHas","gridModel","set","cartesians","getCartesians","cartesian","panelRectBuilder","xAxisDeclared","yAxisDeclared","geo","geoModels","geoModel","xAxisModel","yAxisModel","getRect","getBoundingRect","applyTransform","axisConvert","to","rangeOrCoordRange","xminymin","xmaxymax","Infinity","axisNameIndex","coordToData","toLocalCoord","toGlobalCoord","dataToCoord","axisDiffProcessor","refer","registerSubTypeDefaulter","_util","registerProcessor","getTargetSeries","seriesModelMap","eachComponent","getTargetSeriesModels","uid","modifyOutputEnd","overallReset","reset","filterData","percentRange","valueRange","linkedNodesFinder","effectedModels","query","apply","registerPreprocessor","markLine","giveStore","newSnapshot","batchItem","dataZoomId","subType","pop","head","snapshot","clear","DEFAULT","DataZoom","getFeatures","dataZoom","objectWithoutProperties_default","objectSpread_default","title","back","restore","ToolBox","options","itemSize","feature","getDate","date","utc","format","HTML5_FMT","DATETIME_LOCAL_SECONDS","ChartZoom","_this","classCallCheck_default","possibleConstructorReturn_default","getPrototypeOf_default","saveCurrentPeriod","currentPeriod","setPeriod","saveHistory","startFormatted","endFormatted","history","callIfFunction","onZoom","zooming","updateParams","router","handleChartReady","chart","dispatchAction","dataZoomSelectActive","onChartReady","handleZoomRestore","evt","onRestore","handleDataZoom","rangeStart","rangeEnd","previousPeriod","onDataZoom","handleChartFinished","onFinished","disabled","_this$props","children","useShortDate","dateFormat","hasShortInterval","useShortInterval","xAxisOptions","axisLabel","formatter","getFormattedDate","local","formatAxisLabel","isTimestamp","isUtc","isGroupedByDate","toolBox","iconStyle","borderWidth","React","Component","propTypes","PropTypes","object","string","instanceOf","Date","bool","SentryTypes","EChartsXAxis","func","ReleaseSeries","state","releases","releaseSeries","getReleaseSeries","organization","seriesName","normal","purpleLight","tz","getUserTimezone","show","dateCreated","shortVersion","onClick","includes","slug","version","_this2","_this$props2","requestPromise","getOrganizationReleases","then","setState","catch","addErrorMessage","t","Organization","arrayOf","Release","withRouter","withOrganization","withApi","vec2","straightLineProto","bezierCurveProto","BezierCurve","isLine","extendShape","buildPath","ctx","asc","_dimName","_axisIndex","_valueWindow","_percentWindow","_dataExtent","_minMaxSpan","_dataZoomModel","setAxisModel","isRestore","percentWindow","valueWindow","getPixelPrecision","useOrigin","setRange","seriesModels","getOtherAxisModel","otherAxisDim","coordSysIndexName","foundOtherAxisModel","axisDim","otherAxisModel","getMinMaxSpan","calculateDataWindow","dataExtent","percentExtent","parse","boundValue","boundPercent","linearMap","targetSeries","seriesData","seriesExtent","getApproximateExtent","getMin","isCategoryAxis","axisDataLen","getCategories","getMax","fixExtentByAxis","calculateDataExtent","dataWindow","minMaxSpan","valueSpan","setMinMaxSpan","dataDims","filterSelf","leftOut","rightOut","hasValue","thisHasValue","thisLeftOut","thisRightOut","isInWindow","selectRange","setApproximateExtent","layoutMode","backgroundColor","dataBackground","areaStyle","borderColor","fillerColor","handleIcon","handleStyle","labelPrecision","labelFormatter","showDetail","showDataShadow","zoomLock","textStyle","DataZoomView","layout","sliderMove","HORIZONTAL","LABEL_GAP","SHOW_DATA_SHADOW_SERIES_TYPE","SliderZoomView","_displayables","_orient","_range","_handleEnds","_size","_handleWidth","_handleHeight","_location","_dataShadowInfo","superApply","createOrUpdate","from","_buildView","_updateView","_resetLocation","_resetInterval","barGroup","_renderBackground","_renderHandle","_renderDataShadow","_positionGroup","coordRect","_findCoordRect","ecSize","positionInfo","layoutParams","getLayoutParams","layoutRect","getLayoutRect","padding","location","targetAxisModel","inverse","otherAxisInverse","_getViewExtent","size","onclick","_onClickPanelClick","_prepareDataShadowInfo","series","getRawData","otherDim","getShadowDim","otherDataExtent","otherOffset","lastIsEmpty","otherShadowExtent","thisShadowExtent","areaPoints","step","thisCoord","stride","isEmpty","otherCoord","getAreaStyle","thisAxis","radius","angle","thisDim","displaybles","handles","handleLabels","filler","getCursor","_onDragMove","onmousemove","ondragstart","_showDataInfo","_onDragEnd","onmouseover","onmouseout","subPixelOptimizeRect","path","createIcon","bRect","parsePercent","getItemStyle","handleColor","textFont","getFont","viewExtent","_updateInterval","viewExtend","lastRange","nonRealtime","handleInterval","handle","handleHeight","_updateDataInfo","labelTexts","dataInterval","_formatLabel","orderedHandleEnds","setLabel","barTransform","direction","textPoint","valueStr","getLabel","isFunction","replace","showOrHide","vertex","changed","_dispatchZoomAction","localPoint","center","coordInfoList","roams","InsideZoomView","coordSysName","allCoordIds","coordInfo","generateCoordId","dataZoomOption","coordId","containsPoint","containPoint","throttleRate","panGetRange","_onPan","zoomGetRange","_onZoom","roamControllerOpt","unregister","newX","newY","directionInfo","getDirectionInfo","percentDelta","signal","pixel","pixelLength","mouseX","mouseY","percentPoint","pixelStart","oldPoint","newPoint","polar","radiusExtent","getRadiusAxis","getExtent","angleExtent","getAngleAxis","pointToCoord","throttleUtil","getZr","cleanStore","record","onPan","wrapAndDispatch","getRange","batch","dataZoomInfos","dataZoomInfo","theDataZoomId","theCoordId","newRecord","createController","typePriority","controllerParams","type_true","type_move","type_false","type_undefined","oneType","emphasis","animationEasing","List","markerHelper","MarkerView","markLineTransform","mlModel","retrieve","baseIndex","mlFrom","mlTo","isInifinity","ifMarkLineHasOnlyDim","fromCoord","toCoord","otherDimIndex","markLineFilter","updateSingleMarkerEndLayout","isFrom","xPx","yPx","getMarkerPosition","getValues","dataToPoint","setItemLayout","updateTransform","markLineModel","mlData","fromData","__from","toData","__to","seriesId","lineDrawMap","coordDimsInfos","optData","filter","initData","createList","updateDataVisualAndLayout","setItemVisual","getVisual","lineColor","fromSymbolSize","fromSymbol","toSymbolSize","toSymbol","child","dataModel","featureManager","ToolboxModel","ignoreSize","optionUpdated","featureOpt","featureName","Feature","itemGap","showTitle","textContain","Model","listComponentHelper","toolboxModel","featureOpts","_features","featureNames","_featureNames","processFeature","makeBackground","eachChild","icon","titleText","__title","makeFont","needPutOnTop","topOffset","oldName","featureModel","isUserFeatureName","unusable","iconStyleModel","iconStyleEmphasisModel","icons","getIcons","titles","iconPaths","iconStr","iconName","createIconPaths","setIconStatus","status","iconStatus","updateView","lang","saveAsImageLang","toolbox","saveAsImage","SaveAsImage","excludeComponents","pixelRatio","$a","document","download","url","getConnectedDataURL","href","MouseEvent","browser","ie","edge","window","navigator","msSaveOrOpenBlob","bstr","atob","u8arr","Uint8Array","charCodeAt","blob","Blob","open","write","view","bubbles","cancelable","dispatchEvent","magicTypeLang","magicType","MagicType","bar","stack","tiled","availableIcons","seriesOptGenreator","seriesType","markPoint","radioTypes","radio","newSeriesOpt","categoryAxis","getAxesByScale","boundaryGap","currentType","dataViewLang","dataView","BLOCK_SPLITER","ITEM_SPLITER","assembleOtherSeries","lines","vals","argLen","trim","str","itemSplitRegex","RegExp","parseContents","blockMetaList","blocks","block","isTSVFormat","tsv","tsvLines","headers","shift","categories","header","items","parseTSVContents","blockMeta","axisKey","hasName","parseListContents","DataView","_dom","tryMergeDataOption","newData","originalData","newVal","original","isObject","readOnly","optionToContent","contentToOption","textColor","textareaColor","textareaBorderColor","buttonColor","buttonTextColor","container","getDom","removeChild","root","cssText","innerHTML","viewMain","textarea","tables","seriesGroupByCategoryAxis","otherSeries","meta","eachRawSeries","other","groupSeries","valueAxisDim","columns","mapArray","getContentFromModel","htmlOrDom","getOption","isDom","appendChild","buttonContainer","buttonStyle","closeButton","refreshButton","self","close","addEventListener","keyCode","which","selectionStart","selectionEnd","substring","clientHeight","newSeriesOptList","seriesOpt","getSeriesByName","dataZoomLang","DATA_ZOOM_ID_BASE","_brushController","_onBrush","_isZoomActive","zoomActive","brushTargetManager","retrieveAxisSetting","updateZoomBtnStatus","updateBackBtnStatus","handlers","nextActive","setBatch","found","dzModel","findDataZoom","dataZoomOpts","toolboxOpt","dataZoomOpt","addForAxis","axisName","axisIndicesName","givenAxisIndices","opts","forEachComponent","axisOpt","$fromToolbox","restoreLang","Restore","resetOption"],"mappings":"4EAkBA,IAAAA,EAAA,GAUAC,EAAAC,SARA,SAAAC,EAAAC,GACAJ,EAAAG,GAAAC,GAQAH,EAAAI,IALA,SAAAF,GACA,OAAAH,EAAAG,wBC4DA,SAAAG,EAAAC,EAAAC,GACA,IAAAC,EAAAF,EAAAC,GAAAD,EAAA,EAAAC,GAGA,OACAE,KAAAC,KAAAC,IAAAH,GACAI,KAAAJ,EAAA,KAAAA,EAAA,IAAAD,GAAA,KAIA,SAAAM,EAAAC,EAAAC,GACA,OAAAL,KAAAM,IAAAD,EAAA,GAAAL,KAAAO,IAAAF,EAAA,GAAAD,IAGAI,EAAAlB,QA3DA,SAAAmB,EAAAb,EAAAc,EAAAb,EAAAc,EAAAC,GAEAhB,EAAA,GAAAO,EAAAP,EAAA,GAAAc,GACAd,EAAA,GAAAO,EAAAP,EAAA,GAAAc,GACAD,KAAA,EACA,IAAAI,EAAAH,EAAA,GAAAA,EAAA,GAEA,MAAAC,IACAA,EAAAR,EAAAQ,EAAA,GAAAE,KAGA,MAAAD,IACAA,EAAAZ,KAAAO,IAAAK,EAAA,MAAAD,IAAA,IAGA,QAAAd,IACAc,EAAAC,EAAAZ,KAAAC,IAAAL,EAAA,GAAAA,EAAA,IACAC,EAAA,GAGA,IAAAiB,EAAAnB,EAAAC,EAAAC,GACAD,EAAAC,IAAAY,EAEA,IAAAM,EAAAJ,GAAA,EACAK,EAAAN,EAAAO,QACAH,EAAAZ,KAAA,EAAAc,EAAA,IAAAD,EAAAC,EAAA,IAAAD,EACAnB,EAAAC,GAAAM,EAAAP,EAAAC,GAAAmB,GAEA,IAAAE,EAAAvB,EAAAC,EAAAC,GAcA,OAZA,MAAAc,IAAAO,EAAAhB,OAAAY,EAAAZ,MAAAgB,EAAAnB,KAAAY,KAEAf,EAAA,EAAAC,GAAAD,EAAAC,GAAAiB,EAAAZ,KAAAS,GAIAO,EAAAvB,EAAAC,EAAAC,GAEA,MAAAe,GAAAM,EAAAnB,KAAAa,IACAhB,EAAA,EAAAC,GAAAD,EAAAC,GAAAqB,EAAAhB,KAAAU,GAGAhB,yBClFcuB,EAAQ,MAEtBC,QAFA,IAIAC,EAAcF,EAAQ,MAEtBG,EAAaH,EAAQ,MAErBI,EAAUJ,EAAQ,MAElBK,EAAgBL,EAAQ,MAExBM,EAAaN,EAAQ,MAErBO,EAAgBP,EAAQ,MAoBxBQ,EAAAL,EAAAK,KACAC,EAAAH,EAAAG,YAieA,SAAAC,EAAAC,GACA,IAAAC,EAAA,GAIA,OAHAJ,EAAA,4DAAAnC,GACAsC,EAAAE,eAAAxC,KAAAuC,EAAAvC,GAAAsC,EAAAtC,MAEAuC,EAGA,SAAAE,EAAAC,EAAAC,GACA,IAAAC,EAAAF,EAAAG,eACAC,EAAAJ,EAAAxC,IAAA,aACAiC,EAAA,qDAAAY,EAAAC,GACA,IAAAC,EAAA,MAAAN,EAAAI,EAAA,IACAG,EAAA,MAAAP,EAAAI,EAAA,IAEAE,IAAAC,EACAN,EAAAI,GAAA,WACKC,GAAAC,EACLN,EAAAI,GAAA,QACKF,EACLF,EAAAI,GAAAF,EAAAE,GACKC,IAELL,EAAAI,GAAA,aAMA,IAAAG,EA7fAtB,EAAAuB,qBAAA,CACAC,KAAA,WACAC,aAAA,yEAKAC,cAAA,CACAC,OAAA,EACAC,EAAA,EAEAC,OAAA,KAEAC,WAAA,KAEAC,WAAA,KAEAC,WAAA,SAgBAC,SAAA,KAKAC,MAAA,EAEAC,IAAA,IAEAC,WAAA,KAEAC,SAAA,KAEA/C,QAAA,KAEAC,QAAA,KAEA+C,aAAA,KAEAC,aAAA,KAEAC,UAAA,MAOAC,KAAA,SAAAhC,EAAAiC,EAAAC,GAMAC,KAAAC,oBAAA,GAKAD,KAAAE,UAAA,GAMAF,KAAAG,aAAA,GAKAH,KAAAI,eAKAJ,KAAAK,eAAA,EAMAL,KAAA5B,eAAA,sBACA,IAAAF,EAAAN,EAAAC,GACAmC,KAAAM,qBAAAzC,EAAAkC,GACAC,KAAAO,OAAArC,IAMAsC,YAAA,SAAAC,GACA,IAAAvC,EAAAN,EAAA6C,GAEApD,EAAAqD,MAAAV,KAAAnC,OAAA4C,GAAA,GACAT,KAAAO,OAAArC,IAMAqC,OAAA,SAAArC,GACA,IAAAyC,EAAAX,KAAAnC,OAEAP,EAAAsD,kBACAD,EAAAE,UAAA,GAGAb,KAAAc,oBAAA5C,GAEAF,EAAAgC,KAAA9B,GACAR,EAAA,qDAAAY,EAAAC,GAIA,UAAAyB,KAAA5B,eAAAG,KACAoC,EAAArC,EAAA,WAGK0B,MACLA,KAAAI,eAAAJ,KAAAe,SAAA,aAEAf,KAAAgB,eAEAhB,KAAAiB,oBAMAA,iBAAA,WACA,IAAAC,EAAAlB,KAAAG,aACAH,KAAAmB,eAAA,SAAAC,EAAAC,EAAApD,EAAA8B,GACA,IAAAuB,EAAAtB,KAAAuB,gBAAAH,EAAAI,MAAAH,GAEAI,EAAAH,EAAAI,gBACAJ,EAAAI,cAAA,IAAAjE,EAAA2D,EAAA7F,KAAA8F,EAAArB,KAAAD,IAGAmB,EAAAE,EAAA7F,KAAA,IAAA8F,GAAAI,GACKzB,OAMLgB,aAAA,WACA,IAAAL,EAAAX,KAAAnC,OAEA8D,EAAA3B,KAAA4B,iBAEAjE,EAAA,SAAAyD,GACA,IAAAS,EAAAT,EAAAC,UACAV,EAAAkB,GAAAtE,EAAAuE,iBAAAnB,EAAAkB,KACK7B,MAEL,cAAA2B,EACA3B,KAAA+B,oBACK,WAAAJ,GACL3B,KAAAgC,kBAOAJ,eAAA,WAIA,IAAAjB,EAAAX,KAAAnC,OACAoE,GAAA,EACAtE,EAAA,SAAAyD,GAIA,MAAAT,EAAAS,EAAAC,aACAY,GAAA,IAEKjC,MACL,IAAAf,EAAA0B,EAAA1B,OAEA,aAAAA,GAAAgD,EACA,SACKA,OAAA,GACL,MAAAhD,IACA0B,EAAA1B,OAAA,cAGA,cAOA8C,kBAAA,WACA,IAAAG,GAAA,EACAjD,EAAAe,KAAAvE,IAAA,aACAkF,EAAAX,KAAAnC,OACA0D,EAAAvB,KAAAuB,gBAEA,GAAAW,EAAA,CAEA,IAAAC,EAAA,aAAAlD,EAAA,QAEAsC,EAAAY,EAAA,QAAAC,QACAzB,EAAAwB,EAAA,iBACAD,GAAA,GAEAxE,EAAA6D,EAAAc,WAAA,SAAAC,GACAJ,GAAAI,EAAA7G,IAAA,eAAAwD,IACA0B,EAAA4B,gBAAA,CAAAD,EAAAE,gBACAN,GAAA,KAMAA,GAEAvE,EAAA,SAAAyD,GACA,GAAAc,EAAA,CAIA,IAAAO,EAAA,GACAC,EAAA1C,KAAAuB,gBAAAH,EAAAI,MAEA,GAAAkB,EAAAN,SAAAK,EAAAL,OACA,QAAAO,EAAA,EAAAC,EAAAF,EAAAN,OAAkDO,EAAAC,EAASD,IAC3D,aAAAD,EAAAC,GAAAlH,IAAA,SACAgH,EAAAI,KAAAF,GAKAhC,EAAAS,EAAAC,WAAAoB,EAEAA,EAAAL,SACAF,GAAA,KAEOlC,MAGPkC,GAOAlC,KAAAD,QAAA+C,WAAA,SAAAC,GACA/C,KAAAgD,0BAAAD,EAAA,UACApF,EAAA,SAAAyD,GACA,IAAAqB,EAAA9B,EAAAS,EAAAC,WACAA,EAAA0B,EAAAtH,IAAA2F,EAAAC,WACA4B,EAAAF,EAAAtH,IAAA2F,EAAA6B,QAMA5B,EALA0B,EAAAhD,QAAAmD,gBAAA,CACAC,SAAA/B,EAAAI,KACAjD,MAAA8C,EACA+B,GAAAH,IACa,GACbT,eAEAnF,EAAAgG,QAAAZ,EAAApB,GAAA,GACAoB,EAAAI,KAAAxB,MAIOrB,OAOPgC,eAAA,WACA,IAAAsB,EAEAtD,KAAAmB,eAAA,SAAAC,IACAkC,MAAAlC,EAAA7F,OACKyE,MACLA,KAAAnC,OAAAoB,OAAA,MAAAqE,EAAA,yBAMAN,0BAAA,SAAAD,EAAAQ,GAIA,IAAAC,GAAA,EASA,OARA7F,EAAA,SAAAyD,GACA,IAAAqC,EAAAV,EAAAtH,IAAA2F,EAAAC,WACAC,EAAAtB,KAAAuB,gBAAAH,EAAAI,MAAAiC,GAEAnC,KAAA7F,IAAA,UAAA8H,IACAC,GAAA,IAEKxD,MACLwD,GAMA1C,oBAAA,SAAA5C,GAMA,GAJAA,EAAAH,eAAA,cACAiC,KAAAK,eAAA,GAGAL,KAAAK,cAAA,CACA,IAAAqD,EAAA1D,KAAAD,QAAAlC,OACAmC,KAAAnC,OAAAwB,SAAAqE,EAAAC,WAAAD,EAAAE,wBAAA,WAOAC,wBAAA,WACA,IAAAC,EAUA,OATAnG,EAAA,SAAAyD,GACA,SAAA0C,EAAA,CACA,IAAAC,EAAA/D,KAAAvE,IAAA2F,EAAAC,WAEA0C,EAAA3B,SACA0B,EAAA9D,KAAAuB,gBAAAH,EAAAI,MAAAuC,EAAA,OAGK/D,MACL8D,GAOA3C,eAAA,SAAA6C,EAAAC,GACA,IAAAlE,EAAAC,KAAAD,QACApC,EAAA,SAAAyD,GACA1D,EAAAsC,KAAAvE,IAAA2F,EAAAC,WAAA,SAAAA,GACA2C,EAAAE,KAAAD,EAAA7C,EAAAC,EAAArB,KAAAD,IACOC,OACFA,OAQLmE,aAAA,SAAAhC,EAAAd,GACA,OAAArB,KAAAG,aAAAgC,EAAA,IAAAd,IAQA+C,aAAA,SAAAjC,EAAAd,GACA,IAAAI,EAAAzB,KAAAmE,aAAAhC,EAAAd,GACA,OAAAI,KAAA2C,gBAcAC,YAAA,SAAAC,EAAAC,GACA,IAAA1G,EAAAmC,KAAAnC,OACAH,EAAA,qDAAAY,GAMA,MAAAgG,EAAAhG,EAAA,WAAAgG,EAAAhG,EAAA,MACAT,EAAAS,EAAA,IAAAgG,EAAAhG,EAAA,IACAT,EAAAS,EAAA,IAAAgG,EAAAhG,EAAA,MAEK0B,OACLuE,GAAAvG,EAAAgC,KAAAsE,IAOAE,gBAAA,WACA,IAAA/C,EAAAzB,KAAAyE,8BAEA,GAAAhD,EACA,OAAAA,EAAAiD,wBAYAC,cAAA,SAAAC,EAAAvD,GACA,SAAAuD,GAAA,MAAAvD,EAOA,OAAArB,KAAAmE,aAAAS,EAAAvD,GAAAwD,qBANA,IAAApD,EAAAzB,KAAAyE,8BAEA,OAAAhD,EACAA,EAAAoD,0BADA,GAcAJ,4BAAA,SAAAnD,GACA,GAAAA,EACA,OAAAA,EAAAI,cAIA,IAAAR,EAAAlB,KAAAG,aAEA,QAAA2E,KAAA5D,EACA,GAAAA,EAAAnD,eAAA+G,IAAA5D,EAAA4D,GAAAC,SAAA/E,MACA,OAAAkB,EAAA4D,GASA,QAAAA,KAAA5D,EACA,GAAAA,EAAAnD,eAAA+G,KAAA5D,EAAA4D,GAAAC,SAAA/E,MACA,OAAAkB,EAAA4D,IAQAE,iBAAA,WACA,OAAAhF,KAAA5B,eAAApB,WAkCAT,EAAAlB,QAAAqD,wBCliBA,IAoBAA,EApBoBxB,EAAQ,MAoB5Bd,OAAA,CACAwC,KAAA,WACAqG,OAAA,SAAAhH,EAAA8B,EAAAmF,EAAAC,GACAnF,KAAA/B,gBACA+B,KAAAD,UACAC,KAAAkF,OAqBAE,mBAAA,WACA,IAAAnH,EAAA+B,KAAA/B,cACA8B,EAAAC,KAAAD,QACAsF,EAAA,GA+BA,OA9BApH,EAAAkD,eAAA,SAAAC,EAAAC,GACA,IAAAC,EAAAvB,EAAAuF,aAAAlE,EAAAI,KAAAH,GAEA,GAAAC,EAAA,CACA,IAAAiE,EAAAjE,EAAAkE,mBACAD,GAIA,SAAAA,EAAAjE,EAAAmE,EAAAC,GAGA,IAFA,IAAAC,EAEAhD,EAAA,EAAqBA,EAAA8C,EAAArD,OAAkBO,IACvC,GAAA8C,EAAA9C,GAAAiD,QAAAL,EAAA,CACAI,EAAAF,EAAA9C,GACA,MAIAgD,GACAF,EAAA5C,KAAA8C,EAAA,CACAC,MAAAL,EACA7C,WAAA,GACAgD,eAIAC,EAAAjD,WAAAG,KAAAvB,GAtBAuE,CAAAN,EAAAjE,EAAA+D,EAAAE,EAAApC,YAAAkC,EAAAE,EAAApC,UAAA,IAAAoC,EAAA/C,kBAEKxC,MAuBLqF,KAIA9I,EAAAlB,QAAAqD,wBCpFA,IAAArB,EAAaH,EAAQ,MAErB4I,EAAe5I,EAAQ,MAEvB6I,EAAgB7I,EAAQ,MAExB8I,EAAuB9I,EAAQ,MA4B/B,SAAA+I,EAAAC,GAIAlG,KAAAmG,eAKAnG,KAAAoG,IAAAF,EAKAlG,KAAAqG,KAAA,GAEA,IAAAC,EAAAjJ,EAAAiJ,KACAC,EAAAD,EAAAE,EAAAxG,MACAyG,EAAAH,EAAAI,EAAA1G,MACA2G,EAAAL,EAAAM,EAAA5G,MACA6G,EAAAP,EAAAQ,EAAA9G,MACA+G,EAAAT,EAAAU,EAAAhH,MACA8F,EAAA5B,KAAAlE,MAOAA,KAAAiH,kBAAA,SAAAd,GACAnG,KAAAmG,kBAiBAnG,KAAAkH,OAAA,SAAAC,EAAA7C,GAEAtE,KAAAoH,UACApH,KAAAqG,KAAAhJ,EAAAgK,SAAAhK,EAAAiK,MAAAhD,IAAA,GAAuD,CACvDiD,kBAAA,EACAC,iBAAA,EACAC,yBAAA,IAGA,MAAAN,IACAA,GAAA,IAGA,IAAAA,GAAA,SAAAA,GAAA,QAAAA,IACAjB,EAAAwB,GAAA,YAAAnB,GACAL,EAAAwB,GAAA,YAAAjB,GACAP,EAAAwB,GAAA,UAAAf,KAGA,IAAAQ,GAAA,UAAAA,GAAA,SAAAA,IACAjB,EAAAwB,GAAA,aAAAb,GACAX,EAAAwB,GAAA,QAAAX,KAIA/G,KAAAoH,QAAA,WACAlB,EAAAyB,IAAA,YAAApB,GACAL,EAAAyB,IAAA,YAAAlB,GACAP,EAAAyB,IAAA,UAAAhB,GACAT,EAAAyB,IAAA,aAAAd,GACAX,EAAAyB,IAAA,QAAAZ,IAGA/G,KAAA4H,QAAA5H,KAAAoH,QAEApH,KAAA6H,WAAA,WACA,OAAA7H,KAAA8H,WAGA9H,KAAA+H,WAAA,WACA,OAAA/H,KAAAgI,WAMA,SAAAxB,EAAAyB,GACA,KAAAlC,EAAAmC,aAAAD,MAAAE,QAAAF,EAAAE,OAAAC,WAAA,CAIA,IAAAC,EAAAJ,EAAAK,QACAC,EAAAN,EAAAO,QAGAxI,KAAAmG,gBAAAnG,KAAAmG,eAAA8B,EAAAI,EAAAE,KACAvI,KAAAyI,GAAAJ,EACArI,KAAA0I,GAAAH,EACAvI,KAAA8H,WAAA,IAIA,SAAApB,EAAAuB,GACA,IAAAlC,EAAAmC,aAAAD,IAAAU,EAAA3I,KAAA,kBAAAiI,IAAAjI,KAAA8H,WAAA,UAAAG,EAAAW,eAAA5C,EAAA6C,QAAA7I,KAAAoG,IAAA,cAIA,IAAAiC,EAAAJ,EAAAK,QACAC,EAAAN,EAAAO,QACAM,EAAA9I,KAAAyI,GACAM,EAAA/I,KAAA0I,GACAM,EAAAX,EAAAS,EACAG,EAAAV,EAAAQ,EACA/I,KAAAyI,GAAAJ,EACArI,KAAA0I,GAAAH,EACAvI,KAAAqG,KAAAoB,yBAAA1B,EAAAmD,KAAAjB,EAAAkB,OACAnJ,KAAAoJ,QAAA,MAAAJ,EAAAC,EAAAH,EAAAC,EAAAV,EAAAE,IAGA,SAAA3B,EAAAqB,GACAlC,EAAAmC,aAAAD,KACAjI,KAAA8H,WAAA,GAIA,SAAAhB,EAAAmB,GAEA,GAAAU,EAAA3I,KAAA,mBAAAiI,IAAA,IAAAA,EAAAoB,WAAA,CAOA,IAAAC,EAAArB,EAAAoB,WAAA,YACAE,EAAArF,KAAAlE,KAAAiI,EAAAqB,EAAArB,EAAAK,QAAAL,EAAAO,UAGA,SAAAxB,EAAAiB,GACA,IAAAjC,EAAA6C,QAAA7I,KAAAoG,IAAA,cAIA,IAAAkD,EAAArB,EAAAuB,WAAA,YACAD,EAAArF,KAAAlE,KAAAiI,EAAAqB,EAAArB,EAAAwB,OAAAxB,EAAAyB,SAGA,SAAAH,EAAAtB,EAAAqB,EAAAK,EAAAC,GACA5J,KAAAmG,gBAAAnG,KAAAmG,eAAA8B,EAAA0B,EAAAC,KAIA7D,EAAAmD,KAAAjB,EAAAkB,OACAnJ,KAAAoJ,QAAA,OAAAE,EAAAK,EAAAC,IAIA,SAAAjB,EAAAkB,EAAAC,EAAA7B,GACA,IAAA8B,EAAAF,EAAAxD,KAAAyD,GACA,OAAAC,KAAA1M,EAAA2M,SAAAD,IAAA9B,EAAAkB,MAAAY,EAAA,QA3EA1M,EAAA4M,MAAAhE,EAAAH,GA8EA,IAAApH,EAAAuH,EACA1J,EAAAlB,QAAAqD,qCC5MAxB,EAAAgN,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAnN,EAAA,GAAAoN,EAAApN,EAAAqN,EAAAF,GAAAG,EAAAtN,EAAA,GAGMkN,EAAcK,kBAAO,MAAV,CAAAtC,OAAA,aAAGsC,CAAH,oBACK,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,UADlB,kBAEE,SAAAF,GAAC,OAAIA,EAAEC,MAAME,cAFf,qDAUXC,EAAeL,kBAAO,SAAAM,GAAK,OAC/BT,EAAAU,EAAAC,cAAA,MAASF,EACPT,EAAAU,EAAAC,cAACb,EAAD,QAFc,CAAAjC,OAAA,aAAGsC,CAAH,iHAcHK,0BCTf,IAAAI,EAAA,CACAC,YAAA,EACAC,QAAA,EACAC,MAAA,GAcAhQ,EAAAiQ,oBAPA,SAAArD,EAAA/C,EAAAqG,GACA,IAAA3F,EAAAV,EAAAsG,sBAAAvD,EAAAwD,WAEAC,EAAA9F,KAAA+F,iBACA,OAAA/F,OAAA2F,IAAAL,EAAAtF,EAAAzC,WAAAuI,KAAA9F,QAAA2F,yBChCA,IAAAK,EAAc1O,EAAQ,MAEtB2O,EAAgB3O,EAAQ,MA8BxB,SAAA4O,EAAAtQ,GACAwE,KAAA+L,MAAAvQ,GAAAqQ,EACA7L,KAAAgM,MAAA,IAAAJ,EAAAK,MAGA,IAAAC,EAAAJ,EAAAK,UAkGA,SAAAC,EAAAC,GACA,IAAAC,EAAAD,EAAAC,UACA,OACAC,UAAAD,EAAAvL,SAAA,aAAAyL,eACAC,eAAAH,EAAAvL,SAAA,sBAAAyL,eACAE,WAAAJ,EAAAvL,SAAA,SACA4L,gBAAAL,EAAAvL,SAAA,mBAmBA,SAAA6L,EAAAC,GACA,OAAAC,MAAAD,EAAA,KAAAC,MAAAD,EAAA,IAGA,SAAAE,EAAAC,GACA,OAAAJ,EAAAI,EAAA,MAAAJ,EAAAI,EAAA,IA9HAd,EAAAe,aAAA,WACA,UAOAf,EAAAgB,WAAA,SAAAb,GACA,IAAAc,EAAAnN,KACAgM,EAAAmB,EAAAnB,MACAoB,EAAAD,EAAAE,UACAF,EAAAE,UAAAhB,EAGAe,GACApB,EAAAsB,YAGA,IAAAC,EAAAnB,EAAAC,GACAA,EAAAmB,KAAAJ,GAAAK,IAAA,SAAAC,IASA,SAAAP,EAAAd,EAAAqB,EAAAH,GAGA,IAAAR,EAFAV,EAAAsB,cAAAD,IAGA,OAGA,IAAAE,EAAA,IAAAT,EAAApB,MAAAM,EAAAqB,EAAAH,GACAlB,EAAAwB,iBAAAH,EAAAE,GACAT,EAAAnB,MAAAyB,IAAAG,GAjBAE,CAAAX,EAAAd,EAAAqB,EAAAH,KACGQ,OAAA,SAAAC,EAAAC,IAmBH,SAAAd,EAAAC,EAAAc,EAAAD,EAAAD,EAAAT,GACA,IAAAY,EAAAf,EAAAgB,iBAAAH,GAEA,IAAAlB,EAAAmB,EAAAP,cAAAK,IAEA,YADAb,EAAAnB,MAAAqC,OAAAF,GAIAA,EAGAA,EAAAjB,WAAAgB,EAAAF,EAAAT,GAFAY,EAAA,IAAAhB,EAAApB,MAAAmC,EAAAF,EAAAT,GAKAW,EAAAL,iBAAAG,EAAAG,GACAhB,EAAAnB,MAAAyB,IAAAU,GAjCAG,CAAAnB,EAAAC,EAAAf,EAAA4B,EAAAD,EAAAT,KACGc,OAAA,SAAAX,GACH1B,EAAAqC,OAAAjB,EAAAgB,iBAAAV,MACGa,WAiCHrC,EAAAsC,aAAA,WACA,IAAAnC,EAAArM,KAAAqN,UAEAhB,GAIAA,EAAAoC,kBAAA,SAAAb,EAAAF,GACAE,EAAAY,aAAAnC,EAAAqB,IACG1N,OAGHkM,EAAAwC,yBAAA,SAAArC,GACArM,KAAA2O,aAAAvC,EAAAC,GACArM,KAAAqN,UAAA,KACArN,KAAAgM,MAAAsB,aAGApB,EAAA0C,kBAAA,SAAAC,EAAAxC,GACA,SAAAyC,EAAAlB,GACAA,EAAAmB,UACAnB,EAAAoB,YAAApB,EAAAqB,eAAA,GAIA,QAAAvB,EAAAmB,EAAAvP,MAAkCoO,EAAAmB,EAAAtP,IAAsBmO,IAAA,CAGxD,GAAAX,EAFAV,EAAAsB,cAAAD,IAEA,CACA,IAAAE,EAAA,IAAA5N,KAAA+L,MAAAM,EAAAqB,EAAA1N,KAAA2O,cACAf,EAAAsB,SAAAJ,GACA9O,KAAAgM,MAAAyB,IAAAG,GACAvB,EAAAwB,iBAAAH,EAAAE,MAeA1B,EAAAmC,OAAA,WACArO,KAAAmP,oBAEAnP,KAAAoP,aAAA,KACApP,KAAAgM,MAAAsB,aAGApB,EAAAiD,kBAAA,WACA,IAAAH,EAAAhP,KAAAoP,aAEAJ,GACAA,EAAAK,oBAYA,IAAA3Q,EAAAoN,EACAvP,EAAAlB,QAAAqD,wBCzKA,IAAArB,EAAaH,EAAQ,MAErBoS,EAAapS,EAAQ,MAErBqS,EAAiBrS,EAAQ,MAEzBsS,EAAetS,EAAQ,MAEvB0O,EAAc1O,EAAQ,MAItBuS,EAFcvS,EAAQ,MAEtBuS,MAwBAC,EAAA,0BAEA,SAAAC,EAAAC,GACA,UAAAA,EAAA,OAOA,SAAAC,EAAAtU,EAAA8Q,EAAAqB,GACA,IAAAoC,EAAAzD,EAAA0D,cAAArC,EAAA,SACAsC,EAAA3D,EAAA0D,cAAArC,EAAAnS,GACA0U,EAAA5D,EAAA0D,cAAArC,EAAAnS,EAAA,QAEA,GAAAyU,GAAA,SAAAA,EAAA,CAIA3S,EAAA6S,QAAAD,KACAA,EAAA,CAAAA,MAGA,IAAAE,EAAAZ,EAAAM,aAAAG,GAAAC,EAAA,MAAAA,EAAA,KAAAA,EAAA,GAAAA,EAAA,GAAAH,GAEA,OADAK,EAAA5U,OACA4U,GAWA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAD,EAAAK,GAAAH,EAAA,GACAF,EAAAM,GAAAJ,EAAA,GACAF,EAAAO,GAAAJ,EAAA,GACAH,EAAAQ,GAAAL,EAAA,GACAH,EAAAS,QAAA,EAEAL,GACAJ,EAAAU,KAAAN,EAAA,GACAJ,EAAAW,KAAAP,EAAA,KAEAJ,EAAAU,KAAAE,IACAZ,EAAAW,KAAAC,KA8GA,SAAAC,EAAA7E,EAAAqB,EAAAH,GACA3B,EAAAK,MAAA/H,KAAAlE,MAEAA,KAAAmR,YAAA9E,EAAAqB,EAAAH,GAGA,IAAA6D,EAAAF,EAAA/E,UAEAiF,EAAAC,aAlHA,WACA,IACAC,EADAtR,KACAuR,YAAA,cACAC,EAFAxR,KAEAuR,YAAA,YACAE,EAHAzR,KAGAuR,YAAA,SAEA,GAAAD,GAAAE,IAAAC,EAAAC,OAAA,CAOA,IAHA,IAAAC,EAAA,EACAC,EAAA5R,KAAA6R,OAEAD,GACAA,EAAAE,QACAH,GAAAC,EAAAE,MAAA,IAGAF,IAAAC,OAGA,IAAAE,EApBA/R,KAoBAuR,YAAA,QAGA,GAAAvR,KAAAgS,SAAAD,EAAAC,QAAA,CAIA,IAAAlB,EAAAiB,EAAAE,MAAAnB,QACAoB,EAAAH,EAAAI,QAAA,GACAC,EAAAL,EAAAI,QAAArB,GACA5G,EAAAoF,EAAA+C,IAAA,GAAAD,EAAAF,GAGA,GAFA5C,EAAAgD,UAAApI,KAEAoH,EAAA,CACAA,EAAAiB,KAAA,WAAAL,GACA,IAAAM,EAAAT,EAAAU,UAAA,GACAnB,EAAAiB,KAAA,WAAAxW,KAAA2W,GAAA,EAAA3W,KAAA4W,MAAAH,EAAA,GAAAA,EAAA,KACAlB,EAAAiB,KAAA,SAAAZ,EAAAb,EAAAa,EAAAb,IAUA,GAPAU,IACAA,EAAAe,KAAA,WAAAH,GACAI,EAAAT,EAAAU,UAAA,GACAjB,EAAAe,KAAA,YAAAxW,KAAA2W,GAAA,EAAA3W,KAAA4W,MAAAH,EAAA,GAAAA,EAAA,KACAhB,EAAAe,KAAA,SAAAZ,EAAAb,EAAAa,EAAAb,MAGAW,EAAAC,OAAA,CAEA,IAAAkB,EACAC,EACAC,EAHArB,EAAAc,KAAA,WAAAH,GAIA,IAAAW,EAAA,EAAApB,EAEA,WAAAF,EAAAuB,WACAJ,EAAA,CAAA1I,EAAA,GAAA6I,EAAAX,EAAA,GAAAlI,EAAA,GAAA6I,EAAAX,EAAA,IACAS,EAAA3I,EAAA,aAAAA,EAAA,wBACA4I,EAAA5I,EAAA,YAAAA,EAAA,8BAEA,cAAAuH,EAAAuB,WAAA,CACA,IAAAC,EAAAnC,EAAA,EAEAvG,EAAA,EADAiI,EAAAT,EAAAU,UAAAQ,IACA,IAAAT,EAAA,IACAU,EAAAnB,EAAAI,QAAAc,GAEA1I,EAAA,OACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAA,EAAA,IAGAqI,EAAA,CAAAM,EAAA,GAAA3I,EAAA,GAAAwI,EAAAG,EAAA,GAAA3I,EAAA,GAAAwI,GACAF,EAAA,SACAC,EAAA,SACA,IAAAK,GAAApX,KAAA4W,MAAAH,EAAA,GAAAA,EAAA,IAEAJ,EAAA,GAAAF,EAAA,KACAiB,EAAApX,KAAA2W,GAAAS,GAGA1B,EAAAc,KAAA,WAAAY,QAGAP,EAAA,EAAA1I,EAAA,GAAA6I,EAAAb,EAAA,IAAAhI,EAAA,GAAA6I,EAAAb,EAAA,IACAW,EAAA3I,EAAA,cAAAA,EAAA,uBACA4I,EAAA5I,EAAA,eAAAA,EAAA,sBAGAuH,EAAAc,KAAA,CACAa,MAAA,CAEAN,kBAAArB,EAAA4B,iBAAAP,EACAD,UAAApB,EAAA6B,aAAAT,GAEAU,SAAAX,EACAd,MAAA,CAAAH,WAqBAP,EAAAD,YAAA,SAAA9E,EAAAqB,EAAAH,GACA,IAAAxK,EAAAsJ,EAAAC,UAEAyF,EAlJA,SAAAzB,GACA,IAAAyB,EAAA,IAAAvC,EAAA,CACAjU,KAAA,SAGA,OADA6U,EAAA2B,EAAAE,MAAA3B,GACAyB,EA6IAyB,CADAnH,EAAAsB,cAAAD,IAEAqE,EAAAE,MAAAnB,QAAA,EACAlF,EAAA6H,UAAA1B,EAAA,CACAE,MAAA,CACAnB,QAAA,IAEG/N,EAAA2K,GACH1N,KAAAyN,IAAAsE,GACA,IAAAN,EAAA,IAAA7F,EAAA8H,KAAA,CACAnY,KAAA,UAEAyE,KAAAyN,IAAAgE,GACApU,EAAAK,KAAAgS,EAAA,SAAAE,GACA,IAAA+D,EAAA9D,EAAAD,EAAAvD,EAAAqB,GAIA1N,KAAAyN,IAAAkG,GACA3T,KAAA2P,EAAAC,IAAAvD,EAAA0D,cAAArC,EAAAkC,IACG5P,MAEHA,KAAA4T,iBAAAvH,EAAAqB,EAAAH,IAGA6D,EAAAlE,WAAA,SAAAb,EAAAqB,EAAAH,GACA,IAAAxK,EAAAsJ,EAAAC,UACAyF,EAAA/R,KAAAuR,YAAA,QACAsC,EAAAxH,EAAAsB,cAAAD,GACAvF,EAAA,CACA8J,MAAA,IAEA7B,EAAAjI,EAAA8J,MAAA4B,GACAjI,EAAAkI,YAAA/B,EAAA5J,EAAApF,EAAA2K,GACArQ,EAAAK,KAAAgS,EAAA,SAAAE,GACA,IAAAI,EAAA3D,EAAA0D,cAAArC,EAAAkC,GACA9K,EAAA6K,EAAAC,GAEA,GAAA5P,KAAA8E,KAAAkL,EAAA,CACAhQ,KAAAqO,OAAArO,KAAAuR,YAAA3B,IACA,IAAA+D,EAAA9D,EAAAD,EAAAvD,EAAAqB,GACA1N,KAAAyN,IAAAkG,GAGA3T,KAAA8E,GAAAkL,GACGhQ,MAEHA,KAAA4T,iBAAAvH,EAAAqB,EAAAH,IAGA6D,EAAAwC,iBAAA,SAAAvH,EAAAqB,EAAAH,GACA,IAAAxK,EAAAsJ,EAAAC,UACAyF,EAAA/R,KAAAuR,YAAA,QACAhF,EAAAgB,KAAAhB,UACAE,EAAAc,KAAAd,eACAC,EAAAa,KAAAb,WACAC,EAAAY,KAAAZ,gBAEA,IAAAY,GAAAlB,EAAA0H,cAAA,CACA,IAAAC,EAAA3H,EAAA4H,aAAAvG,GACAnB,EAAAyH,EAAAjT,SAAA,aAAAyL,eACAC,EAAAuH,EAAAjT,SAAA,sBAAAyL,eACAE,EAAAsH,EAAAjT,SAAA,SACA4L,EAAAqH,EAAAjT,SAAA,kBAGA,IAAAmT,EAAA7H,EAAA0D,cAAArC,EAAA,SACAyG,EAAA9W,EAAA+W,UAAA/H,EAAA0D,cAAArC,EAAA,WAAAnB,EAAA8H,QAAA,GACAtC,EAAAuC,SAAAjX,EAAAgK,SAAA,CACAkN,eAAA,EACAC,KAAA,OACAC,OAAAP,EACAG,QAAAF,GACG5H,IACHwF,EAAA2C,WAAAjI,EAEApP,EAAAK,KAAAgS,EAAA,SAAAE,GACA,IAAA+D,EAAA3T,KAAAuR,YAAA3B,GAEA+D,IACAA,EAAAgB,SAAAT,GACAP,EAAAiB,SAAA,CACAP,QAAAF,MAGGnU,MACH,IAGA6U,EACAC,EAJAC,EAAArI,EAAAsI,WAAA,QACAC,EAAAtI,EAAAqI,WAAA,QACAvD,EAAAzR,KAAAuR,YAAA,SAIA,IAAAwD,GAAAE,KACAJ,EAAAX,GAAA,OAGA,OAFAY,EAAA/R,EAAAmS,kBAAAxH,EAAA,SAAArB,EAAA8I,YAEA,CACA,IAAAC,EAAArS,EAAAsS,YAAA3H,GACAoH,EAAA,MAAAM,EAAA/I,EAAAiJ,QAAA5H,GAAA6H,SAAAH,GAAA3F,EAAA2F,KAIA,IAAAI,EAAAT,EAAAD,EAAA,KACAW,EAAAR,EAAA5X,EAAAqY,UAAA3S,EAAAmS,kBAAAxH,EAAA,WAAArB,EAAA8I,UAAAL,GAAA,KACAa,EAAAlE,EAAA2B,MAGA,MAAAoC,GAAA,MAAAC,IACA7J,EAAAgK,aAAAnE,EAAA2B,MAAA1G,EAAA,CACAmJ,KAAAL,GACK,CACLM,UAAAjB,IAEApD,EAAA6B,YAAAqC,EAAA9C,UACApB,EAAA4B,gBAAAsC,EAAA7C,kBAEArB,EAAAuB,WAAAtG,EAAAjR,IAAA,uBAKAgW,EAAAiD,WAFA,MAAAe,EAEA,CACAI,KAAAJ,EACAM,SAAApJ,EAAAqJ,cAAA,GAGAC,UAAAtJ,EAAAqI,WAAA,aACAkB,WAAAvJ,EAAAqI,WAAA,cACAmB,SAAAxJ,EAAAqI,WAAA,YACAoB,WAAAzJ,EAAAqI,WAAA,eAGA,CACAa,KAAA,MAIApE,EAAAC,QAAAqD,IAAAE,EACArJ,EAAAyK,cAAArW,OAGAoR,EAAAkF,UAAA,WACAtW,KAAAoJ,QAAA,aAGAgI,EAAAmF,SAAA,WACAvW,KAAAoJ,QAAA,WAGAgI,EAAA5C,aAAA,SAAAnC,EAAAqB,GACA1N,KAAAoQ,cAAA/D,EAAAsB,cAAAD,KAGA0D,EAAAhB,cAAA,SAAAE,GACA,IAAAkG,EAAAxW,KAAAuR,YAAA,QACAnB,EAAAoG,EAAAvE,MAAA3B,GACAkG,EAAAC,SAGApZ,EAAAqZ,SAAAxF,EAAAtF,EAAAK,OACA,IAAAvN,EAAAwS,EACA3U,EAAAlB,QAAAqD,wBClXcxB,EAAQ,MAEtBC,QAFA,IAIAE,EAAaH,EAAQ,MAErB4I,EAAe5I,EAAQ,MAEvB0O,EAAc1O,EAAQ,MAEtB8I,EAAuB9I,EAAQ,MAE/ByZ,EAAiBzZ,EAAQ,MAoBzB0Z,EAAAvZ,EAAAuZ,MACAlZ,EAAAL,EAAAK,KACAmZ,EAAAxZ,EAAAwZ,IACAC,EAAA/a,KAAAM,IACA0a,EAAAhb,KAAAO,IACA0a,EAAAjb,KAAAkb,IACAC,EAAA,IACAC,EAAA,EACAC,EAAA,EACAC,EAAA,YACAC,EAAA,CACAC,EAAA,MACAtP,EAAA,MACAsC,EAAA,MACAiN,EAAA,OAEAC,EAAA,CACAF,EAAA,KACAtP,EAAA,KACAsC,EAAA,KACAiN,EAAA,KACAE,GAAA,OACAC,GAAA,OACAC,GAAA,OACAC,GAAA,QAEAC,EAAA,CACAC,WAAA,CACAC,UAAA,EACAvD,OAAA,kBACAD,KAAA,mBAEAyD,eAAA,EACAC,UAAA,SACAC,eAAA,GAEAC,EAAA,EAiBA,SAAAC,EAAAnS,GACAJ,EAAA5B,KAAAlE,MAMAA,KAAAoG,IAAAF,EAMAlG,KAAAgM,MAAA,IAAAJ,EAAAK,MAUAjM,KAAAsY,WAQAtY,KAAAuY,aAMAvY,KAAAwY,QAMAxY,KAAAyY,OAAA,GAMAzY,KAAA8H,UAMA9H,KAAA0Y,QAAA,GAMA1Y,KAAA2Y,eAOA3Y,KAAA4Y,eAMA5Y,KAAA6Y,iBAUA7Y,KAAA8Y,KAAA,mBAAAV,IAMApY,KAAA+Y,UAAA,GACArb,EAAAsb,EAAA,SAAAC,EAAAC,GACAlZ,KAAA+Y,UAAAG,GAAA7b,EAAAiJ,KAAA2S,EAAAjZ,OACGA,MAqKH,SAAAmZ,EAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAF,EAAAG,WAAAL,YAAAC,EAAAC,GAIA,OAHAC,EAAAG,cAAAJ,EACAK,EAAAJ,EAAAD,GACAD,EAAApN,MAAAyB,IAAA6L,GACAA,EAGA,SAAAK,EAAAP,EAAAQ,GACA,IAAAC,EAAAC,EAAAF,GAOA,OALAC,EAAAF,cACAE,EAAAF,YAAAP,EAAAQ,GACAF,EAAAE,IAAAH,gBAGAG,EAGA,SAAAG,EAAAX,EAAAE,GACA,IAAAD,EAAAC,EAAAG,cACAK,EAAAR,GAAAS,iBAAAX,EAAAE,EAAAD,EAAAW,MAAAX,GAGA,SAAAK,EAAAJ,EAAAD,GACA,IAAAra,EAAAqa,EAAAra,EACA,MAAAA,MAAAkY,GACAoC,EAAApK,SAAA,SAAAtB,GACAA,EAAA5O,IACA4O,EAAAqM,GAAAjb,IAIA,SAAAkb,EAAAd,EAAAE,GACAQ,EAAAR,GAAAa,aAAAf,EAAAE,GACAS,EAAAX,EAAAE,GAGA,SAAAQ,EAAAR,GACA,OAAAC,EAAAD,EAAAG,cAAAD,WAIA,SAAAY,EAAAhB,EAAAnR,EAAAoS,GACA,IAMAC,EANAC,EAAAnB,EAAAZ,QAEA,IAAA+B,EACA,SAIA,IAAAC,EAAApB,EAAAqB,WAIA,OAHA/c,EAAA6c,EAAA,SAAAG,GACAA,EAAAC,iBAAA1S,EAAAoS,EAAAG,KAAAF,EAAAI,KAEAJ,EAIA,SAAAM,EAAAxB,EAAAE,GACA,IAAAiB,EAAAnB,EAAAZ,QAEA,IAAA+B,EACA,SAGA,IAAAM,EAAAvB,EAAAG,cAAAoB,QAGA,aAAAA,GAAAN,EAAAM,GAGA,SAAAC,EAAA1B,GACA,IAAA2B,EAAA3B,EAAAV,QACAsC,EAAAD,EAAA3Y,OAKA,OAJA1E,EAAAqd,EAAA,SAAAzB,GACAF,EAAApN,MAAAqC,OAAAiL,IACGF,GACH2B,EAAA3Y,OAAA,IACA4Y,EAGA,SAAA5R,EAAAgQ,EAAA9U,GACA,IAAA2W,EAAApE,EAAAuC,EAAAV,QAAA,SAAAY,GACA,IAAAD,EAAAC,EAAAG,cACAO,EAAA3c,EAAAiK,MAAA+R,EAAAW,OACA,OACAR,UAAAH,EAAAG,UACAqB,QAAAxB,EAAAwB,QACAb,WAGAZ,EAAAhQ,QAAA,QAAA6R,EAAA,CACAC,QAAA5W,EAAA4W,MACA/C,gBAAA7T,EAAA6T,gBAmBA,SAAAgD,EAAAC,GACA,IAAAC,EAAAD,EAAAhZ,OAAA,EAEA,OADAiZ,EAAA,IAAAA,EAAA,GACA,CAAAD,EAAA,GAAAA,EAAAC,IAGA,SAAAC,EAAAC,EAAAnC,EAAAC,EAAAmC,GACA,IAAAlC,EAAA,IAAA1N,EAAAK,MA2BA,OA1BAqN,EAAA7L,IAAA,IAAA7B,EAAA6P,KAAA,CACAlgB,KAAA,OACA6X,MAAAsI,EAAArC,GACAsC,QAAA,EACAvT,WAAA,EACAwT,OAAA,OACAC,MAAAjF,EAAA2E,EAAAnC,EAAAE,EAAA,QACAwC,UAAAlF,EAAAxN,EAAAgQ,EAAA,CACA8B,OAAA,OAGAxd,EAAA8d,EAAA,SAAAjgB,GACA+d,EAAA7L,IAAA,IAAA7B,EAAA6P,KAAA,CACAlgB,OACA6X,MAAA,CACAiB,QAAA,GAEAjM,WAAA,EACAuT,QAAA,EACAI,WAAA,EACAF,MAAAjF,EAAA2E,EAAAnC,EAAAE,EAAA/d,GACAugB,UAAAlF,EAAAxN,EAAAgQ,EAAA,CACA8B,OAAA,SAIA5B,EAGA,SAAA0C,EAAA5C,EAAAE,EAAA2C,EAAA5C,GACA,IAAArB,EAAAqB,EAAAtB,WAAAC,WAAA,EACAkE,EAAAnF,EAAAiB,EAAAZ,GACA/O,EAAA4T,EAAA,MACA1T,EAAA0T,EAAA,MACAE,EAAA9T,EAAA2P,EAAA,EACAoE,EAAA7T,EAAAyP,EAAA,EACApH,EAAAqL,EAAA,MACApL,EAAAoL,EAAA,MACAI,EAAAzL,EAAAsL,EAAAlE,EAAA,EACAsE,EAAAzL,EAAAqL,EAAAlE,EAAA,EACAuE,EAAA3L,EAAAvI,EACAmU,EAAA3L,EAAAtI,EACAkU,EAAAF,EAAAvE,EACA0E,EAAAF,EAAAxE,EACA2E,EAAAvD,EAAAE,EAAA,OAAAjR,EAAAE,EAAAgU,EAAAC,GAEAnD,EAAApB,gBACA0E,EAAAvD,EAAAE,EAAA,IAAA6C,EAAAC,EAAAF,EAAAQ,GACAC,EAAAvD,EAAAE,EAAA,IAAA+C,EAAAD,EAAAF,EAAAQ,GACAC,EAAAvD,EAAAE,EAAA,IAAA6C,EAAAC,EAAAK,EAAAP,GACAS,EAAAvD,EAAAE,EAAA,IAAA6C,EAAAG,EAAAG,EAAAP,GACAS,EAAAvD,EAAAE,EAAA,KAAA6C,EAAAC,EAAAF,KACAS,EAAAvD,EAAAE,EAAA,KAAA+C,EAAAD,EAAAF,KACAS,EAAAvD,EAAAE,EAAA,KAAA6C,EAAAG,EAAAJ,KACAS,EAAAvD,EAAAE,EAAA,KAAA+C,EAAAC,EAAAJ,MAIA,SAAA/B,EAAAf,EAAAE,GACA,IAAAD,EAAAC,EAAAG,cACAxB,EAAAoB,EAAApB,cACA2E,EAAAtD,EAAAuD,QAAA,GACAD,EAAAtI,SAAAoH,EAAArC,IACAuD,EAAArK,KAAA,CACAoJ,QAAA1D,EACA2D,OAAA3D,EAAA,mBAEAva,EAAA,+CAAAnC,GACA,IAAAqS,EAAA0L,EAAA/H,YAAAhW,GACAuhB,EAgCA,SAAAC,EAAA3D,EAAA4D,GACA,GAAAA,EAAA5a,OAAA,GACA4a,IAAAC,MAAA,IACA,IAAAH,EAAA,CAAAC,EAAA3D,EAAA4D,EAAA,IAAAD,EAAA3D,EAAA4D,EAAA,KAEA,OADA,MAAAF,EAAA,UAAAA,EAAA,KAAAA,EAAAI,UACAJ,EAAAK,KAAA,IAEA,IAYAL,EAAAlR,EAAAwR,mBAZA,CACA7F,EAAA,OACAtP,EAAA,QACAsC,EAAA,MACAiN,EAAA,UAQAwF,GAvBA,SAAA5D,GACA,OAAAxN,EAAAyR,aAAAjE,EAAApN,OAsBAqR,CAAAjE,IACA,MAPA,CACAkE,KAAA,IACAC,MAAA,IACAC,IAAA,IACAC,OAAA,KAGAX,GApDAC,CAAA3D,EAAA7d,GACAqS,KAAA2E,KAAA,CACAoJ,QAAA1D,EACA8D,WAAA9D,EACA2D,OAAA3D,EAAAR,EAAAqF,GAAA,mBAKA,SAAAH,EAAAvD,EAAAE,EAAA/d,EAAA8M,EAAAE,EAAAgP,EAAAmG,GACA,IAsFApN,EACAqN,EACAC,EACAC,EACAC,EA1FAlQ,EAAA0L,EAAA/H,YAAAhW,GACAqS,KAAAmQ,UAqFAzN,EArFA0N,EAAA5E,EAAAE,EAAA,EAAAjR,EAAAE,GAAA,CAAAF,EAAAkP,EAAAhP,EAAAmV,KAsFAC,EAAA7G,EAAAxG,EAAA,MAAAA,EAAA,OACAsN,EAAA9G,EAAAxG,EAAA,MAAAA,EAAA,OACAuN,EAAA9G,EAAAzG,EAAA,MAAAA,EAAA,OACAwN,EAAA/G,EAAAzG,EAAA,MAAAA,EAAA,OACA,CACAjI,EAAAsV,EACApV,EAAAqV,EACArB,MAAAsB,EAAAF,EACAnB,OAAAsB,EAAAF,KA3FA,SAAAlC,EAAArC,GACA,OAAAhc,EAAAgK,SAAA,CACAkN,eAAA,GACG8E,EAAAtB,YAGH,SAAAkG,EAAA5V,EAAAE,EAAAqI,EAAAC,GACA,IAAAxU,EAAA,CAAAya,EAAAzO,EAAAuI,GAAAkG,EAAAvO,EAAAsI,IACAvU,EAAA,CAAAya,EAAA1O,EAAAuI,GAAAmG,EAAAxO,EAAAsI,IACA,QAAAxU,EAAA,GAAAC,EAAA,IACA,CAAAD,EAAA,GAAAC,EAAA,KAgCA,SAAA4hB,EAAAC,EAAAC,EAAAhF,EAAAE,EAAA/d,EAAAyN,EAAAC,EAAAhB,GACA,IAAAoR,EAAAC,EAAAG,cACA4E,EAAAF,EAAA9E,EAAAW,OACAsE,EAAAC,EAAAnF,EAAApQ,EAAAC,GACAvL,EAAAnC,EAAA0hB,MAAA,aAAAuB,GACA,IAAAC,EAAAnH,EAAAkH,GACAH,EAAAI,EAAA,IAAAA,EAAA,KAAAH,EAAAG,EAAA,MAEApF,EAAAW,MAAAoE,EAAAH,EAAAI,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,QACAnE,EAAAd,EAAAE,GACAlQ,EAAAgQ,EAAA,CACA8B,OAAA,IAIA,SAAAwD,EAAAtF,EAAAE,EAAAtQ,EAAAC,EAAAhB,GACA,IAAA+R,EAAAV,EAAAG,cAAAO,MACAsE,EAAAC,EAAAnF,EAAApQ,EAAAC,GACAvL,EAAAsc,EAAA,SAAA2E,GACAA,EAAA,IAAAL,EAAA,GACAK,EAAA,IAAAL,EAAA,KAEApE,EAAAd,EAAAE,GACAlQ,EAAAgQ,EAAA,CACA8B,OAAA,IAIA,SAAAqD,EAAAnF,EAAApQ,EAAAC,GACA,IAAA2V,EAAAxF,EAAApN,MACA6S,EAAAD,EAAAE,sBAAA9V,EAAAC,GACA8V,EAAAH,EAAAE,sBAAA,KACA,OAAAD,EAAA,GAAAE,EAAA,GAAAF,EAAA,GAAAE,EAAA,IAGA,SAAAf,EAAA5E,EAAAE,EAAA0F,GACA,IAAA1E,EAAAM,EAAAxB,EAAAE,GACA,OAAAgB,IAAA,IAAAA,IAAA2E,SAAAD,EAAA5F,EAAAqB,YAAApd,EAAAiK,MAAA0X,GAwCA,SAAAE,EAAAjX,GACA,IAAAkX,EAAAlX,EAAAkB,MACAgW,EAAAD,gBAAAC,EAAAD,iBAGA,SAAAE,EAAA9F,EAAAjR,EAAAE,GACA,OAAA+Q,EAAA/H,YAAA,QAAA8N,QAAAhX,EAAAE,GAGA,SAAA+W,EAAAlG,EAAAnR,EAAAoS,EAAAa,GACA,IAGAqE,EAHA3F,EAAAR,EAAAT,eACA2B,EAAAlB,EAAAR,eACA4G,EAAApG,EAAAb,aAKA,GAFAa,EAAAX,OAAA5V,KAAAwX,EAAArd,SAhPA,SAAAoc,GACA,IAAAgC,EAAAhC,EAAAX,OAEA,IAAA2C,EAAAhZ,OACA,SAGA,IAAAoO,EAAA4K,IAAAhZ,OAAA,GACAmO,EAAA6K,EAAA,GACApS,EAAAwH,EAAA,GAAAD,EAAA,GACAtH,EAAAuH,EAAA,GAAAD,EAAA,GAEA,OADAyG,EAAAhO,IAAAC,IAAA,IACAkO,EAsOAsI,CAAArG,IAAAQ,EAAA,CACA,GAAAU,IAAAV,EAAA,CACA,WAAA4F,EAAAtH,WAAA4C,EAAA1B,GACA,IAAAC,EAAAhc,EAAAiK,MAAAkY,GACAnG,EAAAG,UAAAkG,EAAArG,EAAAG,UAAAc,GACAjB,EAAAwB,SAAA,IAAAP,EAAA,KAAAA,EAAAO,QACAjB,EAAAR,EAAAT,eAAAQ,EAAAC,EAAAC,GAEAD,EAAAV,QAAA7V,KAAA+W,GAGA,GAAAA,EAAA,CACA,IAAAC,EAAAN,EAAAmG,EAAAtG,EAAAd,WAAAgC,IACAV,EAAAH,cACAO,MAAAH,EAAA8F,iBAAA3B,EAAA5E,EAAAQ,EAAAR,EAAAX,SAEAyC,IACAvB,EAAAP,EAAAQ,GACAC,EAAAM,aAAAf,EAAAQ,IAGAG,EAAAX,EAAAQ,GACA2F,EAAA,CACArE,eAGGA,GAAA,WAAAsE,EAAAtH,WAAAsH,EAAArH,eAMHiC,EAAAhB,EAAAnR,EAAAoS,IAAAS,EAAA1B,KACAmG,EAAA,CACArE,QACA/C,eAAA,IAKA,OAAAoH,EAGA,SAAAG,EAAAlG,EAAAc,GACA,eAAAd,EACAc,EAAAsF,iBAGApG,EAtiBAnB,EAAAlM,UAAA,CACA0T,YAAAxH,EAmBAyH,YAAA,SAAAzG,GAqIA,IAAAD,EACAlT,EAnIA,OAFAlG,KAAAsY,aAqIApS,GADAkT,EApIApZ,MAqIAoG,IACAJ,EAAA+Z,QAAA7Z,EAAAmR,EAAA+B,EAAAN,MACApb,EAAA0b,EAAAL,UAAA,SAAAE,EAAAC,GACAhT,EAAAyB,IAAAuR,EAAAD,KAEAG,EAAAd,WAAAc,EAAAb,aAAA,MAzIAc,EAAAG,WAqHA,SAAAJ,EAAAC,GACA,IAAAnT,EAAAkT,EAAAhT,IAEAgT,EAAAP,kBACA7S,EAAAga,KAAA9Z,EAAAmR,EAAA+B,EAAAN,MAGApb,EAAA0b,EAAAL,UAAA,SAAAE,EAAAC,GACAhT,EAAAwB,GAAAwR,EAAAD,KAEAG,EAAAd,WAAAe,EAAAG,UACAJ,EAAAb,aAAAlb,EAAAqD,MAAArD,EAAAiK,MAAAwQ,GAAAuB,GAAA,GAhIA4G,CAAAjgB,KAAAqZ,GACArZ,MAaAkgB,UAAA,SAAAC,GACA,GAAAA,KAAA/d,OAAA,CACA,IAAAmY,EAAAva,KAAAwY,QAAA,GACAnb,EAAAK,KAAAyiB,EAAA,SAAAA,GACA5F,EAAA4F,EAAAtF,SAAAxd,EAAAiK,MAAA6Y,UAGAngB,KAAAwY,QAAA,KAGA,OAAAxY,MAOAogB,MAAA,SAAA9b,GACAA,KAAA,GACAtE,KAAA6Y,iBAAAvU,EAAA+b,gBACA,IAAAzB,EAAA5e,KAAAgM,MAUA,OARAhM,KAAAoG,IAAAqH,IAAAmR,GAEAA,EAAArM,KAAA,CACAgB,SAAAjP,EAAAiP,UAAA,MACAJ,SAAA7O,EAAA6O,UAAA,EACArB,MAAAxN,EAAAwN,OAAA,QAEA9R,KAAAya,WAAAmE,EAAA0B,oBACAtgB,MAEAugB,UAAA,SAAAC,EAAAvc,GACAvG,EAAAsC,KAAA0Y,QAAA8H,EAAAvc,IAgBAwc,aAAA,SAAAC,GACAA,EAAArjB,EAAAwZ,IAAA6J,EAAA,SAAArH,GACA,OAAAhc,EAAAqD,MAAArD,EAAAiK,MAAAwQ,GAAAuB,GAAA,KAEA,IAAAsH,EAAA,kBACAC,EAAA5gB,KAAA0Y,QACAmI,EAAA7gB,KAAA0Y,QAAA,GACAU,EAAApZ,KACA4Z,EAAA5Z,KAAA2Y,eAEA,OADA,IAAAhC,EAAAiK,EAAAF,EAOA,SAAApH,EAAA/a,GACA,OAAAuiB,EAAAxH,EAAAG,cAAAlb,IARAuiB,GAAArT,IAAAsT,GAAAhT,OAAAgT,GAAA1S,OAuBA,SAAA2S,GACAJ,EAAAI,KAAApH,GACAR,EAAApN,MAAAqC,OAAAuS,EAAAI,MAzBAzS,UACAvO,KAEA,SAAA8gB,EAAAzH,EAAA9a,GACA,aAAA8a,EAAAjW,GAAAiW,EAAAjW,GAAAud,EAAApiB,GAAA,IAAA8a,EAAAG,UAOA,SAAAuH,EAAAE,EAAAD,GACA,IAAAE,EAAAR,EAAAO,GAGA,SAAAD,GAAAJ,EAAAI,KAAApH,EACAiH,EAAAI,GAAAL,EAAAI,OACO,CACP,IAAA1H,EAAAuH,EAAAI,GAAA,MAAAD,GAAAJ,EAAAI,GAAAvH,cAAAyH,EAAAN,EAAAI,IAAArH,EAAAP,EAAAD,EAAAC,EAAA8H,IACAhH,EAAAd,EAAAE,MAUA6H,QAAA,WAOA,OANAnhB,KAAA8f,aAAA,GAEAhF,EAAA9a,MAEAA,KAAAoG,IAAAiI,OAAArO,KAAAgM,OAEAhM,MAEA4H,QAAA,WACA5H,KAAAmhB,UACAnhB,KAAA2H,QAGAtK,EAAA4M,MAAAoO,EAAAvS,GAgaA,IAAAkT,EAAA,CACAxS,UAAA,SAAAyB,GACA,GAAAjI,KAAA8H,UAGAsZ,EAAAld,KAAAlE,KAAAiI,QACK,IAAAA,EAAAE,SAAAF,EAAAE,OAAAC,UAAA,CACL8W,EAAAjX,GACA,IAAAoS,EAAAra,KAAAgM,MAAA8S,sBAAA7W,EAAAK,QAAAL,EAAAO,SACAxI,KAAA2Y,eAAA,MACA3Y,KAAA4Y,eAAAwB,EAAApa,KAAAiI,EAAAoS,MAGAra,KAAA8H,WAAA,EACA9H,KAAAyY,OAAA,CAAA4B,EAAArd,YAIA0J,UAAA,SAAAuB,GACA,IAAAoS,EAAAra,KAAAgM,MAAA8S,sBAAA7W,EAAAK,QAAAL,EAAAO,SAGA,GAlHA,SAAA4Q,EAAAnR,EAAAoS,GAEA,GAAAjB,EAAAd,WAAA,CAIA,IAAApS,EAAAkT,EAAAhT,IACA2U,EAAA3B,EAAAV,QACA2I,EAAAjH,EAAAhB,EAAAnR,EAAAoS,GAEA,IAAAjB,EAAAtR,UACA,QAAAnF,EAAA,EAAmBA,EAAAoY,EAAA3Y,OAAmBO,IAAA,CACtC,IAAA0W,EAAA0B,EAAApY,GAAA8W,cAEA,GAAA4H,KAAA,IAAAA,GAAAhI,EAAAwB,UAAAwG,EAAAxG,UAAAtB,EAAAF,EAAAG,WAAA6F,QAAAtE,EAAApY,GAAA0X,EAAA,GAAAA,EAAA,IAEA,OAKAgH,GAAAnb,EAAAob,eAAA,cA2FAC,CAAAvhB,KAAAiI,EAAAoS,GAEAra,KAAA8H,UAAA,CACAoX,EAAAjX,GACA,IAAAsX,EAAAD,EAAAtf,KAAAiI,EAAAoS,GAAA,GACAkF,GAAAnW,EAAApJ,KAAAuf,KAGA3Y,QAAAwa,GAOA,SAAAA,EAAAnZ,GACA,GAAAjI,KAAA8H,UAAA,CACAoX,EAAAjX,GACA,IACAsX,EAAAD,EAAAtf,KAAAiI,EADAjI,KAAAgM,MAAA8S,sBAAA7W,EAAAK,QAAAL,EAAAO,UACA,GACAxI,KAAA8H,WAAA,EACA9H,KAAAyY,OAAA,GACAzY,KAAA2Y,eAAA,KAEA4G,GAAAnW,EAAApJ,KAAAuf,IASA,IAAAhG,EAAA,CACAiI,MAAAC,EAAA,GACAC,MAAAD,EAAA,GACAE,KAAA,CACAxI,YAAA,SAAAC,EAAAC,GACA,OAAAiC,EAAA1E,EAAAsH,EAAA,SAAAlE,GACA,OAAAA,GACO,SAAAA,GACP,OAAAA,IACOZ,EAAAC,EAAA,wCAEPsG,iBAAA,SAAAiC,GACA,IAAAC,EAAA1G,EAAAyG,GACA,OAAA3D,EAAA4D,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,QAEA9H,iBAAA,SAAAX,EAAAE,EAAA2C,EAAA5C,GACA2C,EAAA5C,EAAAE,EAAA2C,EAAA5C,IAEAc,eACAkF,QAAAD,GAEA0C,QAAA,CACA3I,YAAA,SAAAC,EAAAC,GACA,IAAAC,EAAA,IAAA1N,EAAAK,MAQA,OALAqN,EAAA7L,IAAA,IAAA7B,EAAAmW,SAAA,CACAxmB,KAAA,OACA6X,MAAAsI,EAAArC,GACAsC,QAAA,KAEArC,GAEAqG,iBAAA,SAAAiC,GACA,OAAAA,GAEAjI,YAAA,SAAAP,EAAAE,GACAA,EAAAjL,OAAAiL,EAAAuD,QAAA,IAEAvD,EAAA7L,IAAA,IAAA7B,EAAAoW,QAAA,CACAzmB,KAAA,OACA6M,WAAA,EACAyT,MAAAjF,EAAA8H,EAAAtF,EAAAE,GACAwC,UAAAlF,EAAAxN,EAAAgQ,EAAA,CACA8B,OAAA,QAIAnB,iBAAA,SAAAX,EAAAE,EAAA2C,EAAA5C,GACAC,EAAAuD,QAAA,GAAAkB,SAAA,CACAzN,OAAA0N,EAAA5E,EAAAE,EAAA2C,MAGA9B,eACAkF,QAAAD,IAIA,SAAAqC,EAAAQ,GACA,OACA9I,YAAA,SAAAC,EAAAC,GACA,OAAAiC,EAAA1E,EAAAsH,EAAA,SAAAlE,GACA,IAAAqE,EAAA,CAAArE,EAAA,SAEA,OADAiI,GAAA5D,EAAAnB,UACAmB,GACO,SAAAA,GACP,OAAAA,EAAA4D,KACO7I,EAAAC,EAAA,sBAAA4I,KAEPtC,iBAAA,SAAAiC,GACA,IAAAC,EAAA1G,EAAAyG,GAGA,OAFA9K,EAAA+K,EAAA,GAAAI,GAAAJ,EAAA,GAAAI,IACAlL,EAAA8K,EAAA,GAAAI,GAAAJ,EAAA,GAAAI,MAGAlI,iBAAA,SAAAX,EAAAE,EAAA2C,EAAA5C,GACA,IAAA6I,EAEA5H,EAAAM,EAAAxB,EAAAE,GAEA,QAAAgB,KAAA6H,0BACAD,EAAA5H,EAAA6H,0BAAAF,EAAA7I,EAAAqB,gBACO,CACP,IAAAvU,EAAAkT,EAAAhT,IACA8b,EAAA,IAAAhc,EAAAkc,WAAAlc,EAAAmc,aAAA,EAAAJ,IAGA,IAAA5D,EAAA,CAAApC,EAAAiG,GACAD,GAAA5D,EAAAnB,UACAlB,EAAA5C,EAAAE,EAAA+E,EAAAhF,IAEAc,eACAkF,QAAAD,GAIA,IAAA1gB,EAAA2Z,EACA9b,EAAAlB,QAAAqD,wBCp3BA,IAAArB,EAAaH,EAAQ,MAErBolB,EAAiBplB,EAAQ,MAsBzBqlB,EAAA,qCAmBA,SAAAC,EAAAlkB,EAAAmkB,GACAnkB,IAAAtB,QACA,IAAA0lB,EAAArlB,EAAAwZ,IAAAvY,EAAAgkB,EAAAK,cACAF,MAAA,IAAAzlB,QACA,IAAA4lB,EAAAvlB,EAAAwZ,IAAA4L,EAAAH,EAAAK,cACA,gBAAA3e,EAAAC,GACA5G,EAAAK,KAAAY,EAAA,SAAA/C,EAAAgD,GAMA,IALA,IAAAskB,EAAA,CACAtnB,OACAunB,QAAAJ,EAAAnkB,IAGAwkB,EAAA,EAAqBA,EAAAN,EAAArgB,OAAkB2gB,IACvCF,EAAAJ,EAAAM,IAAAxnB,EAAAqnB,EAAAG,GAGA/e,EAAAE,KAAAD,EAAA4e,MAoBA,IAAAllB,EAAA6kB,EAzDA,wCAyDA,mCAsEAnnB,EAAA2nB,iBAvHA,SAAAC,GACA,OAAA5lB,EAAAgG,QAAAkf,EAAAU,IAAA,GAuHA5nB,EAAAmnB,iBACAnnB,EAAAsC,cACAtC,EAAA6nB,wBA5DA,SAAAC,EAAAC,EAAAC,GACA,gBAAAC,GACA,IAcAC,EAdAC,EAAA,CACAC,MAAA,GACAC,QAAA,IAOA,GAJAN,EAAA,SAAAO,GACAH,EAAAE,QAAAC,EAAApoB,MAAA,MAGA+nB,EACA,OAAAE,EAGAI,EAAAN,EAAAE,GAGA,GACAD,GAAA,EACAJ,EAAAU,SACKN,GAEL,SAAAM,EAAAC,IAUA,SAAAA,EAAAN,GACA,OAAAnmB,EAAAgG,QAAAmgB,EAAAC,MAAAK,IAAA,EAVAC,CAAAD,EAAAN,IAaA,SAAAM,EAAAN,GACA,IAAAQ,GAAA,EAMA,OALAZ,EAAA,SAAAO,GACAtmB,EAAAK,KAAA2lB,EAAAS,EAAAH,IAAA,YAAAM,GACAT,EAAAE,QAAAC,EAAApoB,MAAA0oB,KAAAD,GAAA,OAGAA,EApBAE,CAAAJ,EAAAN,KACAI,EAAAE,EAAAN,GACAD,GAAA,GAIA,OAAAC,GAiBA,SAAAI,EAAAE,EAAAN,GACAA,EAAAC,MAAA5gB,KAAAihB,GACAV,EAAA,SAAAO,GACAtmB,EAAAK,KAAA2lB,EAAAS,EAAAH,IAAA,YAAAM,GACAT,EAAAE,QAAAC,EAAApoB,MAAA0oB,IAAA,8BC/Ic/mB,EAAQ,MAEtBC,QAFA,IAIAC,EAAcF,EAAQ,MAEtBG,EAAaH,EAAQ,MAErBI,EAAUJ,EAAQ,MAElBK,EAAgBL,EAAQ,MAExBolB,EAAiBplB,EAAQ,MAEzBinB,EAAsBjnB,EAAQ,MAoB9BknB,EAAA9B,EAAA8B,UACAC,EAAA/B,EAAA+B,WAEA,SAAAC,EAAAhgB,GACA/G,EAAAgnB,gBAAAjgB,EAAA,kBAGA,IAAAkgB,EAAApnB,EAAAuB,qBAAA,CACAC,KAAA,SACAC,aAAA,gCAKAgB,KAAA,SAAAhC,EAAAiC,EAAAC,EAAA0kB,GACAzkB,KAAAM,qBAAAzC,EAAAkC,GACAC,KAAAQ,YAAA3C,EAAAkC,EAAA0kB,EAAAC,eAAA,IAMAC,mBAAA,WACA,GAAArnB,EAAAwmB,KACA,SAGA,IAAAc,EAAA5kB,KAAA6kB,aACA,OAAA7kB,KAAAgV,WAAA,cAAA4P,KAAAD,sBAEAnkB,YAAA,SAAAskB,EAAA/kB,EAAA2kB,EAAAK,GACA,IAAAP,EAAAxkB,KAAA6f,YACAmF,EAAAhlB,KAAAmD,SAAA,QAEAuhB,GACA3kB,EAAA+C,WAAA,SAAAC,GACA,IAAAkiB,EAAAliB,EAAAtH,IAAAuE,KAAAmD,UAAA,GACA+hB,EAAAniB,EAAAiiB,GAEAC,KAAAjG,MAKAkG,EAyBAA,EAAA1kB,YAAAykB,EAAAllB,GAAA,IAxBAglB,GAEAT,EAAAW,GAGA5nB,EAAAK,KAAAunB,EAAAjG,KAAA,SAAArZ,GAEAA,aAAAwf,OACAb,EAAA3e,EAAA,IACA2e,EAAA3e,EAAA,KAEA2e,EAAA3e,KAGAuf,EAAA,IAAAV,EAAAS,EAAAjlB,KAAAD,GACA1C,EAAAjB,OAAA8oB,EAAA,CACA/hB,SAAAnD,KAAAmD,SAEAiiB,YAAAriB,EAAAqiB,YACA7pB,KAAAwH,EAAAxH,KACAmpB,eAAA,IAEAQ,EAAAL,aAAA9hB,GAKAA,EAAAiiB,GAAAE,GAhCAniB,EAAAiiB,GAAA,MAiCOhlB,OAGPqlB,cAAA,SAAAC,GACA,IAAAtG,EAAAhf,KAAAulB,UACAppB,EAAA6D,KAAAqV,YAAAiQ,GACAE,EAAAnoB,EAAA6S,QAAA/T,GAAAkB,EAAAwZ,IAAA1a,EAAAioB,GAAAjH,KAAA,MAAAiH,EAAAjoB,GACAZ,EAAAyjB,EAAA1J,QAAAgQ,GACAG,EAAApB,EAAArkB,KAAAzE,MAkBA,OAhBA,MAAAY,GAAAZ,KACAkqB,GAAA,UAGAlqB,IACAkqB,GAAApB,EAAA9oB,GAEA,MAAAY,IACAspB,GAAA,QAIA,MAAAtpB,IACAspB,GAAApB,EAAAmB,IAGAC,GAEAF,QAAA,WACA,OAAAvlB,KAAA0lB,OAEAC,QAAA,SAAA3G,GACAhf,KAAA0lB,MAAA1G,KAGA3hB,EAAA4M,MAAAua,EAAAL,GACA,IAAAzlB,EAAA8lB,EACAjoB,EAAAlB,QAAAqD,wBChJA,IAAArB,EAAaH,EAAQ,MAErB0oB,EAAiB1oB,EAAQ,MAIzB2oB,EAFuB3oB,EAAQ,MAE/B2oB,mBAoBAxiB,EAAAhG,EAAAgG,QAgCA,SAAAyiB,EAAAC,EAAA/G,EAAAgH,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAA,GAIAC,EAHAR,EAAA7G,EAAAiH,GAGAjH,EAAAsH,mBAAA,wBAAAL,EACA9pB,EAAAoqB,EAAAvH,EAAAqH,EAAAN,GACAT,EAAAtG,EAAAwH,iBAAAH,EAAAlqB,GAAA,GACAiqB,EAAAF,GAAAlH,EAAAvjB,IAAAuqB,EAAAV,GACAc,EAAAD,GAAAnH,EAAAvjB,IAAAwqB,EAAAX,GAEA,IAAAmB,EAAAb,EAAAc,aAAA1H,EAAAvjB,IAAAwqB,EAAAX,IAOA,OANAmB,EAAA1qB,KAAAM,IAAAoqB,EAAA,MAEA,IACAL,EAAAD,IAAAC,EAAAD,GAAAQ,QAAAF,IAGAL,EAGA,IAAAxP,EAAAvZ,EAAAuZ,MAEAgQ,EAAA,CAOAvqB,IAAAua,EAAAkP,EAAA,OAQAxpB,IAAAsa,EAAAkP,EAAA,OAQAe,QAAAjQ,EAAAkP,EAAA,YAiDA,SAAAgB,EAAAnhB,EAAAqZ,EAAAtT,EAAA3I,GACA,IAAAjF,EAAA,GAcA,OAZA,MAAA6H,EAAAohB,YAAA,MAAAphB,EAAAqhB,UACAlpB,EAAAmpB,aAAA,MAAAthB,EAAAohB,WAAA/H,EAAAkI,aAAAvhB,EAAAohB,YAAAphB,EAAAqhB,SACAlpB,EAAAqpB,UAAAzb,EAAA0b,QAaA,SAAArkB,EAAAskB,GACA,IAAArI,EAAAjc,EAAAwiB,UACA+B,EAAAtI,EAAAsI,WACAD,EAAArI,EAAAkI,aAAAG,GAEA,QAAA1kB,EAAA,EAAiBA,EAAA2kB,EAAAllB,OAAuBO,IAAA,CACxC,IAAA4kB,EAAAvI,EAAAwI,iBAAAF,EAAA3kB,IAEA,GAAA4kB,EAAAhsB,OAAA8rB,EACA,OAAAE,EAAAE,UAtBAC,CAAA3kB,EAAAjF,EAAAmpB,eACAnpB,EAAA6pB,SAAAjc,EAAAkc,aAAA9pB,EAAAqpB,WACArpB,EAAA+pB,YAAA7I,EAAA8I,aAAAhqB,EAAA6pB,SAAArkB,OAEAxF,EAAA6pB,SAAA5kB,EAAAglB,cACAjqB,EAAAqpB,UAAAzb,EAAAkc,aAAA9pB,EAAA6pB,UACA7pB,EAAA+pB,YAAA7I,EAAA8I,aAAAhqB,EAAA6pB,SAAArkB,KACAxF,EAAAmpB,aAAAjI,EAAA8I,aAAAhqB,EAAAqpB,UAAA7jB,MAGAxF,EAuCA,SAAAyoB,EAAAvH,EAAAiI,EAAAroB,GACA,eAAAA,EAAA,CACA,IAAAopB,EAAA,EACAC,EAAA,EAOA,OANAjJ,EAAAthB,KAAAupB,EAAA,SAAAiB,EAAAxa,GACAZ,MAAAob,KACAF,GAAAE,EACAD,OAGAD,EAAAC,EACG,iBAAArpB,EACHogB,EAAAmJ,UAAAlB,GAGAjI,EAAAoJ,cAAAnB,GAAA,WAAAroB,EAAA,KAIAvD,EAAAgtB,cA9GA,SAAAtlB,EAAA4C,GACA,IAAAqZ,EAAAjc,EAAAwiB,UACA7Z,EAAA3I,EAAA4I,iBAKA,GAAAhG,IA3FA,SAAAA,GACA,OAAAmH,MAAAwb,WAAA3iB,EAAA0C,MAAAyE,MAAAwb,WAAA3iB,EAAA4C,IA0FAggB,CAAA5iB,KAAAtI,EAAA6S,QAAAvK,EAAA6iB,QAAA9c,EAAA,CACA,IAAA+c,EAAA/c,EAAA4b,WACAoB,EAAA5B,EAAAnhB,EAAAqZ,EAAAtT,EAAA3I,GAKA,IAFA4C,EAAAtI,EAAAiK,MAAA3B,IAEA/G,MAAAgoB,EAAAjhB,EAAA/G,OAAA8pB,EAAAf,UAAAe,EAAAvB,UAAA,CACA,IAAAjB,EAAA7iB,EAAAolB,EAAAC,EAAAf,SAAArkB,KACA6iB,EAAA9iB,EAAAolB,EAAAC,EAAAvB,UAAA7jB,KACAqC,EAAA6iB,MAAA5B,EAAAjhB,EAAA/G,MAAAogB,EAAA0J,EAAAb,YAAAa,EAAAzB,aAAAf,EAAAC,GAEAxgB,EAAAxJ,MAAAwJ,EAAA6iB,MAAArC,OACK,CAIL,IAFA,IAAAqC,EAAA,OAAA7iB,EAAAgjB,MAAAhjB,EAAAgjB,MAAAhjB,EAAAijB,WAAA,MAAAjjB,EAAAkjB,MAAAljB,EAAAkjB,MAAAljB,EAAAmjB,WAEAnmB,EAAA,EAAqBA,EAAA,EAAOA,IAC5BikB,EAAA4B,EAAA7lB,MACA6lB,EAAA7lB,GAAA4jB,EAAAvH,IAAA8I,aAAAW,EAAA9lB,IAAA6lB,EAAA7lB,KAIAgD,EAAA6iB,SAIA,OAAA7iB,GA6EAtK,EAAAyrB,cACAzrB,EAAA0tB,WAnCA,SAAArd,EAAA/F,GAEA,QAAA+F,KAAAsd,aAAArjB,EAAA6iB,QAvKA,SAAA7iB,GACA,QAAAmH,MAAAwb,WAAA3iB,EAAA0C,KAAAyE,MAAAwb,WAAA3iB,EAAA4C,KAsKA0gB,CAAAtjB,KAAA+F,EAAAsd,YAAArjB,EAAA6iB,QAkCAntB,EAAA6tB,eA/BA,SAAAvjB,EAAAxD,EAAAmjB,EAAA6D,GAEA,OAAAA,EAAA,EACAxjB,EAAA6iB,OAAA7iB,EAAA6iB,MAAAW,GAGAxjB,EAAAxJ,OA0BAd,EAAAkrB,qCCtOA,IAAAnpB,EAAcF,EAAQ,MAEtBG,EAAaH,EAAQ,MAoBrBwB,EAAAtB,EAAAgsB,oBAAA,CACAxqB,KAAA,SACAiB,KAAA,WAMAG,KAAAqpB,eAAAhsB,EAAAisB,iBAEArkB,OAAA,SAAAigB,EAAAnlB,EAAAmF,GACA,IAAAmkB,EAAArpB,KAAAqpB,eACAA,EAAA3rB,KAAA,SAAAiI,GACAA,EAAA4jB,QAAA,IAEA,IAAAC,EAAAxpB,KAAApB,KAAA,QACAmB,EAAA+C,WAAA,SAAAC,GACA,IAAAmiB,EAAAniB,EAAAymB,GACAtE,GAAAllB,KAAAypB,aAAA1mB,EAAAmiB,EAAAnlB,EAAAmF,IACKlF,MACLqpB,EAAA3rB,KAAA,SAAAiI,IACAA,EAAA4jB,QAAAvpB,KAAAgM,MAAAqC,OAAA1I,EAAAqG,QACKhM,OAELypB,aAAA,eAGAltB,EAAAlB,QAAAqD,2HChCagrB,EAAY,SAAAC,GAAqD,IAAnDC,EAAmDD,EAAnDC,OAAQtqB,EAA2CqqB,EAA3CrqB,MAAOC,EAAoCoqB,EAApCpqB,IAAOsqB,GAA6BC,UAAA1nB,OAAA,QAAA2nB,IAAAD,UAAA,GAAAA,UAAA,GAAP,IAAtBD,mBAO/C,GANKD,GAAWtqB,GAAUC,IACxBqqB,EAASI,KAKPJ,EAAQ,CACV,IAAKC,EACH,MAAO,CAACI,YAAaL,GAFb,IAAAM,EAI6BN,EAAOO,MAAM,oBAJ1CC,EAAAC,IAAAH,EAAA,GAIDI,EAJCF,EAAA,GAIaG,EAJbH,EAAA,GAMV,MAAO,CAACH,YAAW,GAAAO,OAAkC,EAA7BC,SAASH,EAAc,KAA5BE,OAAsCD,IAG3D,IAAKjrB,IAAUC,EACb,MAAM,IAAImrB,MAAM,0BAGlB,IAAMC,EAAiBC,YAAiBtrB,GAClCurB,EAAeD,YAAiBrrB,GAEtC,GAAIsqB,EAAoB,CAEtB,IAAMrc,EAAOsd,IAAOvrB,GAAKiO,KAAKsd,IAAOxrB,IAE/ByrB,EAAsBD,IAAOxrB,GAAO0rB,SAASxd,GAGnD,MAAO,CACLlO,MAAOsrB,YAAiBG,GACxBxrB,IAAKsrB,GAIT,MAAO,CACLvrB,MAAOqrB,EACPprB,IAAKsrB,0BCvDT,IAAAztB,EAAcF,EAAQ,MAoBtB+tB,EAAA,0BAoBA,SAAAC,EAAAhlB,GACA,OAAAA,EAAA+kB,KAAA/kB,EAAA+kB,GAAA,IAWA7tB,EAAA+tB,eAAA,CACAvsB,KAAA,mBACAuK,MAAA,oBACA4E,OAAA,UACC,cACD1S,EAAA2kB,KAnCA,SAAA9Z,EAAAklB,EAAAC,GACAH,EAAAhlB,GACAklB,GAAAC,GAkCAhwB,EAAA0kB,QA/BA,SAAA7Z,EAAAklB,EAAAC,GACA,IAAA5lB,EAAAylB,EAAAhlB,GACAT,EAAA2lB,KAEAC,IACA5lB,EAAA2lB,GAAA,OA2BA/vB,EAAAwN,QAvBA,SAAA3C,EAAAklB,GACA,QAAAF,EAAAhlB,GAAAklB,0BCrCA,IAAAE,EAAmBpuB,EAAQ,MAI3BoO,EAFoBpO,EAAQ,MAE5BoO,oBAEAigB,EAAkBruB,EAAQ,MA6C1B,SAAAsuB,EAAA7J,GACA,OAAA2J,EAAAG,OAAA9J,GAGAtmB,EAAAqwB,sBA7BA,SAAA/J,GAEA,OADAA,EAAA6J,EAAA7J,GACA,SAAAgK,EAAAnR,GACA,OAAA+Q,EAAAK,iBAAAD,EAAAhK,KA2BAtmB,EAAAwwB,2BAvBA,SAAAlK,EAAAmK,GAEA,OADAnK,EAAA6J,EAAA7J,GACA,SAAAM,GACA,IAAAvU,EAAA,MAAAoe,IAAA7J,EACA8J,EAAAre,EAAAiU,EAAApF,MAAAoF,EAAAnF,OACAwP,EAAAte,EAAAiU,EAAAtZ,EAAAsZ,EAAApZ,EACA,OAAAyjB,KAAAD,GAAA,MAkBA1wB,EAAA4wB,yBAdA,SAAAtK,EAAAzc,EAAAgnB,GAEA,OADAvK,EAAA6J,EAAA7J,GACA,SAAA1Z,EAAAoS,EAAAG,GACA,OAAAmH,EAAAtC,QAAAhF,EAAA,GAAAA,EAAA,MAAA/O,EAAArD,EAAA/C,EAAAgnB,2BC9CchvB,EAAQ,MAEtBC,QAFA,IAIAE,EAAaH,EAAQ,MAErB0O,EAAc1O,EAAQ,MAEtBK,EAAgBL,EAAQ,MAExBivB,EAAkBjvB,EAAQ,MAoB1BQ,EAAAL,EAAAK,KACA2F,EAAAhG,EAAAgG,QACAuT,EAAAvZ,EAAAuZ,MACAwV,EAAA,8BAGAC,EAAA,+EA4DA,SAAAC,EAAAzuB,EAAAkC,EAAAuE,GAKA,IAAAioB,EAAAvsB,KAAAwsB,gBAAA,GACAC,EAAA,GACAC,EAAAC,EAAA5sB,EAAAlC,GACAH,EAAAkvB,EAAA,SAAAC,EAAAjuB,KACA0F,MAAAwoB,SAAAzpB,EAAAiB,EAAAwoB,QAAAluB,IAAA,IACAiuB,EAAAH,EAAAH,EAAAE,KAKA,IAAAM,EAAAT,EAAAngB,UA6GA,SAAA6gB,EAAAC,GAEA,OADAA,EAAA,GAAAA,EAAA,IAAAA,EAAA/P,UACA+P,EAGA,SAAAN,EAAA5sB,EAAAlC,GACA,OAAAN,EAAAovB,YAAA5sB,EAAAlC,EAAA,CACAqvB,iBAAAb,IAlHAU,EAAAI,gBAAA,SAAAlS,EAAAlb,GACAC,KAAAotB,kBAAAnS,EAAAlb,EAAA,SAAAstB,EAAAC,EAAA5hB,GAGA,IAFA2hB,EAAAE,cAAAF,EAAAE,YAAA,KAAA1qB,KAAAyqB,IAEAD,EAAAC,WAAA,CACAD,EAAAC,aAMA,IAAA9J,EAAAgK,EAAAH,EAAA7T,WAAA,EAAA9N,EAAA4hB,GACAD,EAAAI,cAAA,CACAC,OAAAC,EAAAN,EAAA7T,WAAAgK,EAAAoK,OAAAP,EAAArT,MAAA,OACA6T,SAAArK,EAAAqK,cAMAd,EAAAK,kBAAA,SAAAnS,EAAAlb,EAAAygB,GACA9iB,EAAAud,EAAA,SAAAoS,GACA,IAAAS,EAAA9tB,KAAA+tB,eAAAV,EAAAttB,GAEA+tB,IAAA,IAAAA,GACAzwB,EAAAK,KAAAowB,EAAAE,WAAA,SAAAtiB,GACA,IAAA8X,EAAAgK,EAAAH,EAAA7T,WAAA,EAAA9N,EAAA2hB,EAAArT,OACAwG,EAAA6M,EAAA7J,EAAAoK,OAAAliB,EAAA3L,MAGGC,OAGH+sB,EAAAkB,eAAA,SAAAhT,EAAAlb,GACArC,EAAAud,EAAA,SAAAoS,GACA,IA2OAa,EAAAC,EACAC,EACAC,EACAC,EA9OAR,EAAA9tB,KAAA+tB,eAAAV,EAAAttB,GAGA,GAFAstB,EAAArT,MAAAqT,EAAArT,OAAA,GAEA8T,IAAA,IAAAA,EAAA,CACAT,EAAAxS,QAAAiT,EAAAjT,QAOA,IAAA2I,EAAAgK,EAAAH,EAAA7T,WAAA,EAAAsU,EAAApiB,SAAA2hB,EAAAC,YACAiB,EAAAlB,EAAAI,cACAJ,EAAArT,MAAAuU,EAAAZ,EAAAN,EAAA7T,WAAAgK,EAAAoK,OAAAW,EAAAb,QA8NAQ,EA9NA1K,EAAAqK,SA8NAM,EA9NAI,EAAAV,SA+NAO,EAAAI,EAAAN,GACAG,EAAAG,EAAAL,GACAG,EAAA,CAAAF,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,IACAvhB,MAAAwhB,EAAA,MAAAA,EAAA,MACAxhB,MAAAwhB,EAAA,MAAAA,EAAA,MACAA,IApOA9K,EAAAoK,SAEG5tB,OAGH+sB,EAAA0B,cAAA,SAAAvpB,EAAAwpB,GACA,OAAArxB,EAAAwZ,IAAA7W,KAAAwsB,gBAAA,SAAAsB,GACA,IAAAnM,EAAAmM,EAAAa,eACA,OACA9T,QAAAiT,EAAAjT,QACA+E,iBAAA8O,KAAAZ,GACA7O,SAAAkN,EAAAT,sBAAA/J,GACAhH,iBAAAwR,EAAAF,yBAAAtK,EAAAzc,EAAA4oB,EAAAc,eACAzM,0BAAAgK,EAAAN,2BAAAlK,OAKAoL,EAAA8B,cAAA,SAAAxB,EAAAtqB,EAAAhD,GAGA,IAAA+tB,EAAA9tB,KAAA+tB,eAAAV,EAAAttB,GACA,WAAA+tB,MAAAzqB,EAAAyqB,EAAAE,WAAAjrB,EAAA4I,mBAAA,GAaAohB,EAAAgB,eAAA,SAAAV,EAAAttB,GAIA,IAHA,IAAAwsB,EAAAvsB,KAAAwsB,gBACAE,EAAAC,EAAA5sB,EAAAstB,GAEA1qB,EAAA,EAAiBA,EAAA4pB,EAAAnqB,OAA2BO,IAAA,CAC5C,IAAAmrB,EAAAvB,EAAA5pB,GACAmsB,EAAAzB,EAAAxS,QAEA,GAAAiU,GACA,GAAAhB,EAAAjT,UAAAiU,EACA,OAAAhB,OAGA,IAAAnrB,EAAA,EAAqBA,EAAAosB,EAAA3sB,OAA+BO,IACpD,GAAAosB,EAAApsB,GAAA+pB,EAAAoB,GACA,OAAAA,EAMA,UAcA,IAAAlB,EAAA,CACAoC,KAAA,SAAAtC,EAAAH,GACA,IAAA0C,EAAAvC,EAAAuC,YACAC,EAAAxC,EAAAwC,YACAC,EAAAzC,EAAAyC,WAEAC,EAAA/xB,EAAAisB,gBACA+F,EAAA,GACAC,EAAA,IAEAL,GAAAC,GAAAC,KAIAzxB,EAAAuxB,EAAA,SAAA3tB,GACA,IAAAiuB,EAAAjuB,EAAAE,KAAAwtB,KAAAppB,MACAwpB,EAAAI,IAAAD,EAAAnsB,GAAAmsB,GACAF,EAAAE,EAAAnsB,KAAA,IAEA1F,EAAAwxB,EAAA,SAAA5tB,GACA,IAAAiuB,EAAAjuB,EAAAE,KAAAwtB,KAAAppB,MACAwpB,EAAAI,IAAAD,EAAAnsB,GAAAmsB,GACAD,EAAAC,EAAAnsB,KAAA,IAEA1F,EAAAyxB,EAAA,SAAAI,GACAH,EAAAI,IAAAD,EAAAnsB,GAAAmsB,GACAF,EAAAE,EAAAnsB,KAAA,EACAksB,EAAAC,EAAAnsB,KAAA,IAEAgsB,EAAA1xB,KAAA,SAAA6xB,GACA,IAAAP,EAAAO,EAAA5jB,iBACA8jB,EAAA,GACA/xB,EAAAsxB,EAAAU,gBAAA,SAAAC,EAAApxB,IACA8E,EAAA4rB,EAAAU,EAAAvI,QAAA,KAAAxhB,QAAA,GAAAvC,EAAA6rB,EAAAS,EAAAvI,QAAA,KAAAxhB,QAAA,IACA6pB,EAAA5sB,KAAA8sB,KAGApD,EAAA1pB,KAAA,CACAgY,QAAA,SAAA0U,EAAAnsB,GACAmsB,YACAX,cAAAW,EAEA7jB,SAAA+jB,EAAA,GACAzB,WAAAyB,EACAd,aAAAiB,EAAAZ,KACAa,cAAAR,EAAAE,EAAAnsB,IACA0sB,cAAAR,EAAAC,EAAAnsB,UAIA2sB,IAAA,SAAArD,EAAAH,GACA7uB,EAAAgvB,EAAAsD,UAAA,SAAAC,GACA,IAAAvkB,EAAAukB,EAAAtkB,iBACA4gB,EAAA1pB,KAAA,CACAgY,QAAA,QAAAoV,EAAA7sB,GACA6sB,WACArB,cAAAqB,EACAvkB,WACAsiB,WAAA,CAAAtiB,GACAijB,aAAAiB,EAAAG,UAKAhB,EAAA,CACA,SAAArC,EAAAoB,GACA,IAAAoC,EAAAxD,EAAAwD,WACAC,EAAAzD,EAAAyD,WACAZ,EAAA7C,EAAA6C,UAGA,OAFAA,GAAAW,IAAAX,EAAAW,EAAA1uB,KAAAwtB,KAAAppB,QACA2pB,GAAAY,IAAAZ,EAAAY,EAAA3uB,KAAAwtB,KAAAppB,OACA2pB,OAAAzB,EAAAyB,WAEA,SAAA7C,EAAAoB,GACA,IAAAmC,EAAAvD,EAAAuD,SACA,OAAAA,OAAAnC,EAAAmC,WAEAL,EAAA,CACAZ,KAAA,WAEA,OAAAhvB,KAAA0L,SAAAsjB,KAAAoB,UAAA9oB,SAEAyoB,IAAA,WACA,IAAArkB,EAAA1L,KAAA0L,SACAiW,EAAAjW,EAAA2kB,kBAAA/oB,QAGA,OADAqa,EAAA2O,eAAA1kB,EAAAyR,aAAA3R,IACAiW,IAGA6L,EAAA,CACAhM,MAAA5K,EAAA2Z,EAAA,GACA7O,MAAA9K,EAAA2Z,EAAA,GACA5O,KAAA,SAAA6O,EAAA9kB,EAAA+kB,GACA,IAAAC,EAAAhlB,EAAA0gB,EAAAoE,IAAA,CAAAC,EAAA,MAAAA,EAAA,QACAE,EAAAjlB,EAAA0gB,EAAAoE,IAAA,CAAAC,EAAA,MAAAA,EAAA,QACA7C,EAAA,CAAAZ,EAAA,CAAA0D,EAAA,GAAAC,EAAA,KAAA3D,EAAA,CAAA0D,EAAA,GAAAC,EAAA,MACA,OACA/C,SACAC,SAAAD,IAGA9L,QAAA,SAAA0O,EAAA9kB,EAAA+kB,GACA,IAAA5C,EAAA,EAAA+C,UAAA,CAAAA,WASA,OACAhD,OATAvwB,EAAAwZ,IAAA4Z,EAAA,SAAA9qB,GACA,IAAA+E,EAAAgB,EAAA0gB,EAAAoE,IAAA7qB,GAKA,OAJAkoB,EAAA,MAAA9xB,KAAAM,IAAAwxB,EAAA,MAAAnjB,EAAA,IACAmjB,EAAA,MAAA9xB,KAAAM,IAAAwxB,EAAA,MAAAnjB,EAAA,IACAmjB,EAAA,MAAA9xB,KAAAO,IAAAuxB,EAAA,MAAAnjB,EAAA,IACAmjB,EAAA,MAAA9xB,KAAAO,IAAAuxB,EAAA,MAAAnjB,EAAA,IACAA,IAIAmjB,cAKA,SAAA0C,EAAAM,EAAAL,EAAA9kB,EAAA+kB,GACA,IAAAjvB,EAAAkK,EAAA0b,QAAA,UAAAyJ,IACAjD,EAAAZ,EAAA3vB,EAAAwZ,IAAA,eAAAlU,GACA,OAAA6tB,EAAAhvB,EAAAsvB,YAAAtvB,EAAAuvB,aAAAN,EAAA9tB,KAAAnB,EAAAwvB,cAAAxvB,EAAAyvB,YAAAR,EAAA9tB,QAEAkrB,EAAA,GAGA,OAFAA,EAAAgD,GAAAjD,EACAC,EAAA,EAAAgD,GAAA,CAAA5f,SACA,CACA2c,SACAC,YAIA,IAAAF,EAAA,CACAnM,MAAA5K,EAAAsa,EAAA,GACAxP,MAAA9K,EAAAsa,EAAA,GACAvP,KAAA,SAAAiM,EAAAuD,EAAA7C,GACA,QAAAV,EAAA,MAAAU,EAAA,GAAA6C,EAAA,MAAAvD,EAAA,MAAAU,EAAA,GAAA6C,EAAA,QAAAvD,EAAA,MAAAU,EAAA,GAAA6C,EAAA,MAAAvD,EAAA,MAAAU,EAAA,GAAA6C,EAAA,SAEArP,QAAA,SAAA8L,EAAAuD,EAAA7C,GACA,OAAAjxB,EAAAwZ,IAAA+W,EAAA,SAAAjoB,EAAA+H,GACA,OAAA/H,EAAA,GAAA2oB,EAAA,GAAA6C,EAAAzjB,GAAA,GAAA/H,EAAA,GAAA2oB,EAAA,GAAA6C,EAAAzjB,GAAA,QAKA,SAAAwjB,EAAAL,EAAAjD,EAAAuD,EAAA7C,GACA,OAAAV,EAAA,GAAAU,EAAAuC,GAAAM,EAAA,GAAAvD,EAAA,GAAAU,EAAAuC,GAAAM,EAAA,IAcA,SAAA3C,EAAAX,GACA,OAAAA,EAAA,CAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,QAAA5c,SAGA,IAAAvS,EAAA4tB,EACA/vB,EAAAlB,QAAAqD,wBC7YAxB,EAAQ,MAERA,EAAQ,MAERA,EAAQ,MAERA,EAAQ,MAERA,EAAQ,MAERA,EAAQ,MAERA,EAAQ,MAERA,EAAQ,MAERA,EAAQ,4BChBQA,EAAQ,MAoBxBk0B,yBAAA,sBAEA,uCCtBA,IAAAh0B,EAAcF,EAAQ,MAEtBm0B,EAAYn0B,EAAQ,MAEpBosB,EAAA+H,EAAA/H,cACA5rB,EAAA2zB,EAAA3zB,KAoBAN,EAAAk0B,kBAAA,CAIAC,gBAAA,SAAAxxB,GACA,IAAAyxB,EAAAlI,IASA,OARAvpB,EAAA0xB,cAAA,oBAAAxzB,GACAA,EAAAkD,eAAA,SAAAC,EAAAC,EAAApD,GACA,IAAAwD,EAAAxD,EAAAkG,aAAA/C,EAAA7F,KAAA8F,GACA3D,EAAA+D,EAAAiwB,wBAAA,SAAA3uB,GACAyuB,EAAAhC,IAAAzsB,EAAA4uB,IAAA5uB,SAIAyuB,GAEAI,iBAAA,EAIAC,aAAA,SAAA9xB,EAAAmF,GACAnF,EAAA0xB,cAAA,oBAAAxzB,GAIAA,EAAAkD,eAAA,SAAAC,EAAAC,EAAApD,GACAA,EAAAkG,aAAA/C,EAAA7F,KAAA8F,GAAAywB,MAAA7zB,EAAAiH,KAgBAjH,EAAAkD,eAAA,SAAAC,EAAAC,EAAApD,GACAA,EAAAkG,aAAA/C,EAAA7F,KAAA8F,GAAA0wB,WAAA9zB,EAAAiH,OAGAnF,EAAA0xB,cAAA,oBAAAxzB,GAGA,IAAAwD,EAAAxD,EAAAwG,8BACAutB,EAAAvwB,EAAAiD,uBACAutB,EAAAxwB,EAAAoD,qBACA5G,EAAAoG,YAAA,CACA/E,MAAA0yB,EAAA,GACAzyB,IAAAyyB,EAAA,GACAxyB,WAAAyyB,EAAA,GACAxyB,SAAAwyB,EAAA,KACO,8BClFP,IAAA70B,EAAcF,EAAQ,MAEtBG,EAAaH,EAAQ,MAErBM,EAAaN,EAAQ,MAoBrBE,EAAA+tB,eAAA,oBAAAhmB,EAAApF,GACA,IAAAmyB,EAAA10B,EAAA0lB,wBAAA7lB,EAAAiJ,KAAAvG,EAAA0xB,cAAA1xB,EAAA,YAAAvC,EAAAG,YAAA,SAAAiI,EAAAxE,GACA,OAAAwE,EAAAnK,IAAA2F,EAAAC,aAEA8wB,EAAA,GACApyB,EAAA0xB,cAAA,CACAtuB,SAAA,WACAivB,MAAAjtB,GACG,SAAAS,EAAArH,GACH4zB,EAAAtvB,KAAAwvB,MAAAF,EAAAD,EAAAtsB,GAAA6d,SAEApmB,EAAAK,KAAAy0B,EAAA,SAAAl0B,EAAAM,GACAN,EAAAoG,YAAA,CACA/E,MAAA6F,EAAA7F,MACAC,IAAA4F,EAAA5F,IACAC,WAAA2F,EAAA3F,WACAC,SAAA0F,EAAA1F,qCCxCA,IAAArC,EAAcF,EAAQ,MAEtBA,EAAQ,MAERA,EAAQ,MAoBRE,EAAAk1B,qBAAA,SAAAhuB,GAEAA,EAAAiuB,SAAAjuB,EAAAiuB,UAAA,2BC1BAr1B,EAAQ,MAERA,EAAQ,MAERA,EAAQ,MAERA,EAAQ,MAERA,EAAQ,MAERA,EAAQ,MAERA,EAAQ,4BCZR,IAoBAQ,EApBaR,EAAQ,MAoBrBQ,KACAutB,EAAA,mBA0FA,SAAAuH,EAAAzyB,GACA,IAAA0F,EAAA1F,EAAAkrB,GAMA,OAJAxlB,IACAA,EAAA1F,EAAAkrB,GAAA,MAGAxlB,EAGApK,EAAAwH,KA9FA,SAAA9C,EAAA0yB,GACA,IAAAhtB,EAAA+sB,EAAAzyB,GAGArC,EAAA+0B,EAAA,SAAAC,EAAAC,GAGA,IAFA,IAAAhwB,EAAA8C,EAAArD,OAAA,EAEUO,GAAA,IACV8C,EAAA9C,GAEAgwB,GAHkBhwB,KAQlB,GAAAA,EAAA,GAEA,IAAA1E,EAAA8B,EAAAmD,gBAAA,CACAC,SAAA,WACAyvB,QAAA,SACAxvB,GAAAuvB,IACO,GAEP,GAAA10B,EAAA,CACA,IAAA+zB,EAAA/zB,EAAAuG,kBACAiB,EAAA,GAAAktB,GAAA,CACAA,aACArzB,MAAA0yB,EAAA,GACAzyB,IAAAyyB,EAAA,QAKAvsB,EAAA5C,KAAA4vB,IA8DAp3B,EAAAw3B,IAtDA,SAAA9yB,GACA,IAAA0F,EAAA+sB,EAAAzyB,GACA+yB,EAAArtB,IAAArD,OAAA,GACAqD,EAAArD,OAAA,GAAAqD,EAAAotB,MAEA,IAAAE,EAAA,GAWA,OAVAr1B,EAAAo1B,EAAA,SAAAJ,EAAAC,GACA,QAAAhwB,EAAA8C,EAAArD,OAAA,EAAkCO,GAAA,EAAQA,IAG1C,GAFA+vB,EAAAjtB,EAAA9C,GAAAgwB,GAEA,CACAI,EAAAJ,GAAAD,EACA,SAIAK,GAuCA13B,EAAA23B,MAhCA,SAAAjzB,GACAA,EAAAkrB,GAAA,MAgCA5vB,EAAA4sB,MAxBA,SAAAloB,GACA,OAAAyyB,EAAAzyB,GAAAqC,sPCnGM6wB,WAAU,CACdr0B,KAAM,SACN2I,iBAAkB,QAClBlI,SAAU,KAGG,SAAS6zB,EAASnoB,GAE/B,OAAKA,GAAUoa,MAAMjV,QAAQnF,GAItBA,EAHE,CAACkoB,sBCTZ,SAASE,IAA0C,IAAAxJ,EAAAG,UAAA1nB,OAAA,QAAA2nB,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GAAzBsJ,EAA6BzJ,EAA7ByJ,SAAah4B,EAAgBi4B,IAAA1J,EAAA,cACjD,OAAA2J,IAAA,GACMF,EACA,CACEA,SAAUE,IAAA,CACRn0B,WAAY,OACZo0B,MAAO,CACLhqB,KAAM,OACNiqB,KAAM,OACNC,QAAS,UAERL,IAGP,GACDh4B,GAIQ,SAASs4B,EAAQC,GAAwB,IAAfv4B,EAAe0uB,UAAA1nB,OAAA,QAAA2nB,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GAClD,OAAAwJ,IAAA,CACE/V,MAAO,EACPC,IAAK,EACLoW,SAAU,GAEVC,QAASV,EAAY/3B,IAClBu4B,GChBP,IAAMG,EAAU,SAAAC,GAAI,OAClBA,EAAOjJ,IAAOkJ,IAAID,GAAME,OAAOnJ,IAAOoJ,UAAUC,wBAA0B,MAatEC,cAsBJ,SAAAA,EAAYrpB,GAAO,IAAAspB,EAAA,OAAAC,IAAAt0B,KAAAo0B,IACjBC,EAAAE,IAAAv0B,KAAAw0B,IAAAJ,GAAAlwB,KAAAlE,KAAM+K,KAuBR0pB,kBAAoB,SAAA1pB,GAClBspB,EAAKK,cAAgB,CACnB9K,OAAQ7e,EAAM6e,OACdtqB,MAAOw0B,EAAQ/oB,EAAMzL,OACrBC,IAAKu0B,EAAQ/oB,EAAMxL,OA5BJ80B,EAyCnBM,UAAY,SAAAhL,EAAuBiL,GAAgB,IAArChL,EAAqCD,EAArCC,OAAQtqB,EAA6BqqB,EAA7BrqB,MAAOC,EAAsBoqB,EAAtBpqB,IACrBs1B,EAAiBf,EAAQx0B,GACzBw1B,EAAehB,EAAQv0B,GAGzBq1B,GACFP,EAAKU,QAAQlyB,KAAKwxB,EAAKK,eASzBM,YAAeX,EAAKtpB,MAAMkqB,OAAQ,CAChCrL,SACAtqB,MAAOu1B,EACPt1B,IAAKu1B,IAGPT,EAAKa,QAAU,WACbC,YACE,CACEvL,SACAtqB,MAAOu1B,EACPt1B,IAAKu1B,GAEPT,EAAKtpB,MAAMqqB,QAGbf,EAAKI,kBAAkB,CAAC7K,SAAQtqB,QAAOC,UAxExB80B,EA+EnBgB,iBAAmB,SAAAC,GACjBA,EAAMC,eAAe,CACnB32B,KAAM,mBACNkG,IAAK,iBACL0wB,sBAAsB,IAGxBR,YAAeX,EAAKtpB,MAAM0qB,aAAcH,IAtFvBjB,EA8FnBqB,kBAAoB,SAACC,EAAKL,GACnBjB,EAAKU,QAAQ3yB,SAIlBiyB,EAAKM,UAAUN,EAAKU,QAAQ,IAG5BV,EAAKU,QAAU,GAEfC,YAAeX,EAAKtpB,MAAM6qB,UAAWD,EAAKL,KAxGzBjB,EA2GnBwB,eAAiB,SAACF,EAAKL,GACrB,IAEM9zB,EAFQ8zB,EAAMv0B,WACElD,OAAf8qB,MACY,GAGnB,GAAwB,OAApBnnB,EAAKs0B,YAAyC,OAAlBt0B,EAAKu0B,SAAmB,CACtD,IAAMC,EAAiB3B,EAAKU,QAAQlC,MAEpC,IAAKmD,EACH,OAGF3B,EAAKM,UAAUqB,OACV,CACL,IAAM12B,EAAQwrB,IAAOkJ,IAAIxyB,EAAKs0B,YAGxBv2B,EAAMurB,IAAOkJ,IAAIxyB,EAAKu0B,UAE5B1B,EAAKM,UAAU,CAAC/K,OAAQ,KAAMtqB,QAAOC,QAAM,GAG7Cy1B,YAAeX,EAAKtpB,MAAMkrB,WAAYN,EAAKL,IAlI1BjB,EA4InB6B,oBAAsB,WACQ,mBAAjB7B,EAAKa,UACdb,EAAKa,UACLb,EAAKa,QAAU,MAEjBF,YAAeX,EAAKtpB,MAAMorB,aA7I1B9B,EAAKU,QAAU,GAGfV,EAAKI,kBAAkB1pB,GAPNspB,oEAWbr0B,KAAK+K,MAAMqrB,UAMfp2B,KAAKy0B,kBAAkBz0B,KAAK+K,wCAmIrB,IAAAsrB,EAcHr2B,KAAK+K,MAZPipB,EAFKqC,EAELrC,IACArL,EAHK0N,EAGL1N,MACAyN,EAJKC,EAILD,SACAE,EALKD,EAKLC,SACAC,EANKF,EAMLE,aAOGxrB,GAbEsrB,EAQLpB,OARKoB,EASLT,UATKS,EAULZ,aAVKY,EAWLJ,WAXKI,EAYLF,WAZK9C,IAAAgD,EAAA,qHAgBP,GAAID,EACF,OAAOE,EAASvrB,GAGlB,IAAMyrB,EAAaD,EAAe,SAAW,MACvCE,EAAmBC,YAAiB12B,KAAK+K,OACzC4rB,EAAerD,IAAA,CACnBsD,UAAW,CACTC,UAAW,SAAC16B,EAAOoC,GACjB,IACM01B,EAASwC,KADa,IAAVl4B,GAC8B,KAAOi4B,EACvD,OAAOM,YAAiB36B,EAAO83B,EAAQ,CAAC8C,OAAQ/C,OAGjDrL,GAGCvd,EAAU,CACd4rB,gBAAiB,SAAC76B,EAAO86B,EAAaC,GACpC,OAAKD,EAGEH,YAAiB36B,EAAO,MAAO,CAAC46B,OAAQG,IAFtC/6B,IAoCb,OAAOm6B,EA9BahD,IAAA,CAElB6D,iBAAiB,EACjB1B,aAAcz1B,KAAKq1B,iBACnBrB,MACAZ,SAAUF,IACV9nB,UACAgsB,QAAS1D,EACP,GACA,CACEN,SAAU,CACRG,MAAO,CACLhqB,KAAM,GACNiqB,KAAM,IAER6D,UAAW,CACTC,YAAa,EACbxnB,MAAO,cACPuE,QAAS,MAKjB4hB,WAAYj2B,KAAK61B,eACjBD,UAAW51B,KAAK01B,kBAChBS,WAAYn2B,KAAKk2B,qBACdnrB,EA1BY,CA2Bf4d,MAAOgO,YA/OWY,IAAMC,WAAxBpD,EACGqD,UAAY,CACjBrC,OAAQsC,IAAUC,OAClB/N,OAAQ8N,IAAUE,OAClBt4B,MAAOo4B,IAAUG,WAAWC,MAC5Bv4B,IAAKm4B,IAAUG,WAAWC,MAC1B9D,IAAK0D,IAAUK,KACf3B,SAAUsB,IAAUK,KAEpBxB,aAAcmB,IAAUK,KAExBpP,MAAOqP,UAAYC,aAGnBhD,OAAQyC,IAAUQ,KAElBtC,UAAW8B,IAAUQ,KACrBzC,aAAciC,IAAUQ,KACxBjC,WAAYyB,IAAUQ,KACtB/B,WAAYuB,IAAUQ,MAmOX9D,6QC5PT+D,qLAWJC,MAAQ,CACNC,SAAU,KACVC,cAAe,MAuBjBC,iBAAmB,SAAAF,GAAY,ICjDAttB,EDiDAsrB,EACOhC,EAAKtpB,MAAlCipB,EADsBqC,EACtBrC,IAAKwE,EADiBnC,EACjBmC,aAAcpD,EADGiB,EACHjB,OAE1B,MAAO,CACLqD,WAAY,WACZzZ,KAAM,GACNuT,UCvD2BxnB,EDuDR,CACjBwB,UAAW,CACTmsB,OAAQ,CACN5oB,MAAOnF,UAAMguB,YACbtkB,QAAS,GACTzV,KAAM,UAGVwM,QAAS,CACPyrB,UAAW,SAAAlN,GAAY,IAAV3K,EAAU2K,EAAV3K,KACX,cAAAwL,OAAeM,IACZ8N,GAAG5Z,EAAK7iB,MAAO63B,EAAM,MAAQ6E,eAC7B5E,OAAO,kBAFV,kCAAAzJ,OAGWxL,EAAKzjB,KAHhB,gCAOJkW,MAAO,CACLqnB,MAAM,GAER9Z,KAAMqZ,EAASxhB,IAAI,SAAAkJ,GAAO,MAAK,CAC7B4I,OAAQ,IAAImP,KAAK/X,EAAQgZ,aACzBx9B,KAAMwkB,EAAQiZ,aACd78B,MAAO4jB,EAAQiZ,aACfC,QAAS,WACHT,EAAap9B,SAAS89B,SAAS,aACjC9D,EAAOvyB,KAAP,kBAAA2nB,OACoBgO,EAAaW,KADjC,cAAA3O,OACkDzK,EAAQqZ,QAD1D,OAKJ3nB,MAAO,CACLolB,UAAW,kBAAM9W,EAAQiZ,mBCtFnC1F,IAAA,CAEE3f,OAAQ,CAAC,OAAQ,SACd5I,yEDyBe,IAAAsuB,EAAAr5B,KAClB,IAAIA,KAAK+K,MAAMstB,SAAf,CADkB,IAAAiB,EAMUt5B,KAAK+K,OA1BrC,SAAiC7F,EAAKszB,GACpC,OAAOtzB,EAAIq0B,eAAJ,kBAAA/O,OAAqCgO,EAAaW,KAAlD,gBA2BLK,CARkBF,EAMXp0B,IANWo0B,EAMNd,cAGTiB,KAAK,SAAApB,GACJgB,EAAKK,SAAS,CACZrB,WACAC,cAAe,CAACe,EAAKd,iBAAiBF,QAGzCsB,MAAM,WACLC,0BAAgBC,YAAE,gEAoDtB,OAAOvD,EAFYt2B,KAAK+K,MAAjBurB,UAES,CACd+B,SAAUr4B,KAAKo4B,MAAMC,SACrBC,cAAet4B,KAAKo4B,MAAME,uBAtFJf,IAAMC,WAA5BW,EACGV,UAAY,CACjBvyB,IAAKwyB,IAAUC,OACfvC,OAAQsC,IAAUC,OAClBa,aAAcR,UAAY8B,aAE1B9F,IAAK0D,IAAUK,KAEfM,SAAUX,IAAUqC,QAAQ/B,UAAYgC,UAmF7BC,yBAAWC,YAAiBC,kBAAQhC,2BE/GnD,IAAAvsB,EAAc1O,EAAQ,MAEtBk9B,EAAWl9B,EAAQ,MAwBnBm9B,EAAAzuB,EAAAsF,KAAA/E,UACAmuB,EAAA1uB,EAAA2uB,YAAApuB,UAEA,SAAAquB,EAAAvoB,GACA,OAAAnF,OAAAmF,EAAAlB,OAAAjE,OAAAmF,EAAAjB,MAGA,IAAAtS,EAAAkN,EAAA6uB,YAAA,CACA77B,KAAA,UACAwU,MAAA,CACAqB,OAAA,OACAD,KAAA,MAEAvC,MAAA,CACAvB,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,QAAA,EACAC,KAAA,KACAC,KAAA,MAEA0pB,UAAA,SAAAC,EAAA1oB,IACAuoB,EAAAvoB,GAAAooB,EAAAC,GAAAI,UAAAC,EAAA1oB,IAEAE,QAAA,SAAA0nB,GACA,OAAAW,EAAAx6B,KAAAiS,OAAAooB,EAAAloB,QAAAjO,KAAAlE,KAAA65B,GAAAS,EAAAnoB,QAAAjO,KAAAlE,KAAA65B,IAEApnB,UAAA,SAAAonB,GACA,IAAA5nB,EAAAjS,KAAAiS,MACAvH,EAAA8vB,EAAAvoB,GAAA,CAAAA,EAAArB,GAAAqB,EAAAvB,GAAAuB,EAAApB,GAAAoB,EAAAtB,IAAA2pB,EAAA7nB,UAAAvO,KAAAlE,KAAA65B,GACA,OAAAO,EAAA9nB,UAAA5H,QAIAnO,EAAAlB,QAAAqD,wBC7DA,IAAArB,EAAaH,EAAQ,MAErB0oB,EAAiB1oB,EAAQ,MAEzBM,EAAaN,EAAQ,MAoBrBQ,EAAAL,EAAAK,KACAk9B,EAAAhV,EAAAgV,IAWAn9B,EAAA,SAAA0E,EAAAd,EAAApD,EAAA8B,GAKAC,KAAA66B,SAAA14B,EAKAnC,KAAA86B,WAAAz5B,EAMArB,KAAA+6B,aAMA/6B,KAAAg7B,eAMAh7B,KAAAi7B,YAOAj7B,KAAAk7B,YAMAl7B,KAAAD,UAMAC,KAAAm7B,eAAAl9B,GAgWA,SAAAm9B,EAAA35B,EAAA45B,GACA,IAAA/5B,EAAAG,EAAA2C,eACAk3B,EAAA75B,EAAAu5B,eACAO,EAAA95B,EAAAs5B,aAEA,GAAAO,EAAA,CAKA,IAAA7U,EAAAb,EAAA4V,kBAAAD,EAAA,SACA9U,EAAA1qB,KAAAM,IAAAoqB,EAAA,IAEA,IAAAgV,EAAAJ,GAAA,IAAAC,EAAA,UAAAA,EAAA,GACAh6B,EAAAo6B,SAAAD,EAAA,MAAAF,EAAA,GAAA5U,QAAAF,GAAAgV,EAAA,MAAAF,EAAA,GAAA5U,QAAAF,KAvWAhpB,EAAA0O,UAAA,CACA0T,YAAApiB,EASAsH,SAAA,SAAA9G,GACA,OAAA+B,KAAAm7B,iBAAAl9B,GAMA4G,mBAAA,WACA,OAAA7E,KAAA+6B,aAAA/9B,SAMA0H,qBAAA,WACA,OAAA1E,KAAAg7B,eAAAh+B,SAQA00B,sBAAA,WACA,IAAAiK,EAAA,GACA57B,EAAAC,KAAAD,QAeA,OAdAA,EAAA+C,WAAA,SAAAC,GACA,GAAAvF,EAAAwlB,iBAAAjgB,EAAAtH,IAAA,sBACA,IAAA0G,EAAAnC,KAAA66B,SACAv5B,EAAAvB,EAAAmD,gBAAA,CACAC,SAAAhB,EAAA,OACA5D,MAAAwE,EAAAtH,IAAA0G,EAAA,aACAiB,GAAAL,EAAAtH,IAAA0G,EAAA,YACS,GAETnC,KAAA86B,cAAAx5B,KAAAkB,iBACAm5B,EAAA94B,KAAAE,KAGK/C,MACL27B,GAEAv3B,aAAA,WACA,OAAApE,KAAAD,QAAAuF,aAAAtF,KAAA66B,SAAA,OAAA76B,KAAA86B,aAEAc,kBAAA,WACA,IAIAC,EACAC,EAUAC,EAfAC,EAAAh8B,KAAA66B,SACA96B,EAAAC,KAAAD,QACAuB,EAAAtB,KAAAoE,eAmBA,MAlBA,MAAA43B,GAAA,MAAAA,GAKAF,EAAA,YACAD,EAAA,MAAAG,EAAA,UAEAF,EAAA,aACAD,EAAA,UAAAG,EAAA,kBAIAj8B,EAAA0xB,cAAAoK,EAAA,gBAAAI,IACAA,EAAAxgC,IAAAqgC,IAAA,MAAAx6B,EAAA7F,IAAAqgC,IAAA,KACAC,EAAAE,KAGAF,GAEAG,cAAA,WACA,OAAA7+B,EAAAiK,MAAAtH,KAAAk7B,cAYAiB,oBAAA,SAAA73B,GACA,IAAA83B,EAAAp8B,KAAAi7B,YAEAnpB,EADA9R,KAAAoE,eACA5C,KAAAsQ,MAEA3T,EAAA6B,KAAAm7B,eAAAn2B,mBAEAq3B,EAAA,QACAf,EAAA,CAAAh3B,EAAAhF,MAAAgF,EAAA/E,KACAg8B,EAAA,GAsCA,OArCA79B,EAAA,mCAAAoM,GACAyxB,EAAA14B,KAAA,MAAAyB,EAAAwF,GAAAgI,EAAAwqB,MAAAh4B,EAAAwF,IAAA,QAGApM,EAAA,eAAAgQ,GACA,IAAA6uB,EAAAhB,EAAA7tB,GACA8uB,EAAAlB,EAAA5tB,GAYA,YAAAvP,EAAAuP,IACA,MAAA8uB,IACAA,EAAAH,EAAA3uB,IAIA6uB,EAAAzqB,EAAAwqB,MAAA1W,EAAA6W,UAAAD,EAAAH,EAAAD,GAAA,KAKAI,EAAA5W,EAAA6W,UAAAF,EAAAH,EAAAC,GAAA,GAKAd,EAAA7tB,GAAA6uB,EACAjB,EAAA5tB,GAAA8uB,IAEA,CACAjB,YAAAX,EAAAW,GACAD,cAAAV,EAAAU,KAWAxJ,MAAA,SAAA7zB,GACA,GAAAA,IAAA+B,KAAAm7B,eAAA,CAIA,IAAAuB,EAAA18B,KAAA0xB,wBAEA1xB,KAAAi7B,YAyHA,SAAAx5B,EAAAu6B,EAAAL,GACA,IAAAS,EAAA,CAAAxL,UACAlzB,EAAAi+B,EAAA,SAAA54B,GACA,IAAA45B,EAAA55B,EAAAwiB,UAEAoX,GACAj/B,EAAAi/B,EAAA7U,aAAAkU,GAAA,YAAA14B,GACA,IAAAs5B,EAAAD,EAAAE,qBAAAv5B,GACAs5B,EAAA,GAAAR,EAAA,KAAAA,EAAA,GAAAQ,EAAA,IACAA,EAAA,GAAAR,EAAA,KAAAA,EAAA,GAAAQ,EAAA,QAKAR,EAAA,GAAAA,EAAA,KACAA,EAAA,CAAAnrB,UAaA,OAGA,SAAAxP,EAAA26B,GACA,IAAA96B,EAAAG,EAAA2C,eACA/H,EAAAiF,EAAAw7B,QAAA,GAGAC,EAAA,aAAAz7B,EAAA7F,IAAA,QACAuhC,EAAAD,GAAAz7B,EAAA27B,gBAAA76B,OAEA,MAAA/F,GAAA,YAAAA,GAAA,mBAAAA,EACA+/B,EAAA,GAAA//B,EACG0gC,IACHX,EAAA,GAAAY,EAAA,IAAA/rB,KAGA,IAAA3U,EAAAgF,EAAA47B,QAAA,GAEA,MAAA5gC,GAAA,YAAAA,GAAA,mBAAAA,EACA8/B,EAAA,GAAA9/B,EACGygC,IACHX,EAAA,GAAAY,EAAA,EAAAA,EAAA,EAAA/rB,KAGA3P,EAAA7F,IAAA,cACA2gC,EAAA,OAAAA,EAAA,MACAA,EAAA,OAAAA,EAAA,OA5BAe,CAAA17B,EAAA26B,GACAA,EArJAgB,CAAAp9B,UAAA66B,SAAA6B,GAUA,IAAAW,EAAAr9B,KAAAm8B,oBAAAl+B,EAAAJ,QACAmC,KAAA+6B,aAAAsC,EAAA9B,YACAv7B,KAAAg7B,eAAAqC,EAAA/B,cA+LA,SAAA75B,GACA,IAAA67B,EAAA77B,EAAAy5B,YAAA,GACAj9B,EAAAwD,EAAA05B,eACAz9B,EAAA,uBAAAuvB,GACAqQ,EAAArQ,EAAA,QAAAhvB,EAAAxC,IAAAwxB,EAAA,QAEA,IAAAsQ,EAAAt/B,EAAAxC,IAAAwxB,EAAA,aAEA,SAAAsQ,IACAD,EAAArQ,EAAA,aAAAsQ,EAGA,OAFAA,EAAA97B,EAAA2C,eAAA5C,KAAAsQ,MAAAwqB,MAAAiB,KAEA,CACA,IAAAnB,EAAA36B,EAAAw5B,YACAqC,EAAArQ,EAAA,QAAArH,EAAA6W,UAAAL,EAAA,GAAAmB,EAAAnB,EAAA,eA5MAoB,CAAAx9B,MAEAo7B,EAAAp7B,QAMAyzB,QAAA,SAAAx1B,GACAA,IAAA+B,KAAAm7B,iBAIAn7B,KAAA+6B,aAAA/6B,KAAAg7B,eAAA,KACAI,EAAAp7B,MAAA,KAMA+xB,WAAA,SAAA9zB,EAAAiH,GACA,GAAAjH,IAAA+B,KAAAm7B,eAAA,CAIA,IAAAa,EAAAh8B,KAAA66B,SACAc,EAAA37B,KAAA0xB,wBACAtyB,EAAAnB,EAAAxC,IAAA,cACA8/B,EAAAv7B,KAAA+6B,aAEA,SAAA37B,GAwBA1B,EAAAi+B,EAAA,SAAA54B,GACA,IAAA45B,EAAA55B,EAAAwiB,UACAkY,EAAAd,EAAA7U,aAAAkU,GAAA,GAEA,eAAA58B,EACAu9B,EAAAe,WAAA,SAAApY,GAKA,IAJA,IAAAqY,EACAC,EACAC,EAEAl7B,EAAA,EAAyBA,EAAA86B,EAAAr7B,OAAqBO,IAAA,CAC9C,IAAAxG,EAAAwgC,EAAAlhC,IAAAgiC,EAAA96B,GAAA2iB,GACAwY,GAAAhxB,MAAA3Q,GACA4hC,EAAA5hC,EAAAo/B,EAAA,GACAyC,EAAA7hC,EAAAo/B,EAAA,GAEA,GAAAuC,IAAAC,IAAAC,EACA,SAGAF,IAAAD,GAAA,GACAE,IAAAJ,GAAA,GACAK,IAAAJ,GAAA,GAIA,OAAAC,GAAAF,GAAAC,IAGAlgC,EAAA+/B,EAAA,SAAAn6B,GACA,aAAAlE,EACA2D,EAAA4iB,QAAAgX,EAAA9lB,IAAAvT,EAAA,SAAAnH,GACA,OAgBA,SAAAA,GACA,OAAAA,GAAAo/B,EAAA,IAAAp/B,GAAAo/B,EAAA,GAjBA0C,CAAA9hC,KAAA8U,WAEW,CACX,IAAA+I,EAAA,GACAA,EAAA1W,GAAAi4B,EAEAoB,EAAAuB,YAAAlkB,MAKAtc,EAAA+/B,EAAA,SAAAn6B,GACAq5B,EAAAwB,qBAAA5C,EAAAj4B,UAgHA,IAAA5E,EAAAjB,EACAlB,EAAAlB,QAAAqD,wBCzdA,IAsFAA,EAtFoBxB,EAAQ,MAoB5Bd,OAAA,CACAwC,KAAA,kBACAw/B,WAAA,MAKAt/B,cAAA,CACAg6B,MAAA,EAGAvb,MAAA,KAEAC,IAAA,KAEAjB,MAAA,KAEAC,OAAA,KAEAc,KAAA,KAEAG,OAAA,KAEA4gB,gBAAA,mBAKAC,eAAA,CACA/xB,UAAA,CACAuD,MAAA,UACAyM,MAAA,GACAlI,QAAA,IAEAkqB,UAAA,CACAzuB,MAAA,qBACAuE,QAAA,KAGAmqB,YAAA,OAIAC,YAAA,wBAIAC,WAAA,0HAEAxiB,WAAA,OACAyiB,YAAA,CACA7uB,MAAA,WAEA8uB,eAAA,KACAC,eAAA,KACAC,YAAA,EACAC,eAAA,OAEAl+B,UAAA,EACAm+B,UAAA,EAEAC,UAAA,CACAnvB,MAAA,WAKAvT,EAAAlB,QAAAqD,wBCvFA,IAAArB,EAAaH,EAAQ,MAErB6I,EAAgB7I,EAAQ,MAExB0O,EAAc1O,EAAQ,MAEtBmC,EAAenC,EAAQ,MAEvBgiC,EAAmBhiC,EAAQ,MAE3B0oB,EAAiB1oB,EAAQ,MAEzBiiC,EAAajiC,EAAQ,MAErBkiC,EAAiBliC,EAAQ,MAoBzBue,EAAA7P,EAAA6P,KACAghB,EAAA7W,EAAA6W,UACA7B,EAAAhV,EAAAgV,IACAt0B,EAAAjJ,EAAAiJ,KACA5I,EAAAL,EAAAK,KAKA2hC,EAAA,aAEAC,EAAA,EACAC,EAAA,uCACAC,EAAAN,EAAA9iC,OAAA,CACAwC,KAAA,kBACAiB,KAAA,SAAAE,EAAAmF,GAKAlF,KAAAy/B,cAAA,GAMAz/B,KAAA0/B,QAMA1/B,KAAA2/B,OAMA3/B,KAAA4/B,YAOA5/B,KAAA6/B,MAMA7/B,KAAA8/B,aAMA9/B,KAAA+/B,cAKA//B,KAAAggC,UAKAhgC,KAAA8H,UAKA9H,KAAAigC,gBACAjgC,KAAAkF,OAMAD,OAAA,SAAAhH,EAAA8B,EAAAmF,EAAAC,GACAq6B,EAAAU,WAAAlgC,KAAA,SAAA8pB,WACAzqB,EAAA8gC,eAAAngC,KAAA,sBAAAA,KAAA/B,cAAAxC,IAAA,uBACAuE,KAAA0/B,QAAAzhC,EAAAxC,IAAA,WAEA,IAAAuE,KAAA/B,cAAAxC,IAAA,SAQA0J,GAAA,aAAAA,EAAAvG,MAAAuG,EAAAi7B,OAAApgC,KAAA2xB,KACA3xB,KAAAqgC,aAGArgC,KAAAsgC,eAXAtgC,KAAAgM,MAAAsB,aAiBAe,OAAA,WACAmxB,EAAAU,WAAAlgC,KAAA,SAAA8pB,WACAzqB,EAAA2zB,MAAAhzB,KAAA,wBAMA4H,QAAA,WACA43B,EAAAU,WAAAlgC,KAAA,UAAA8pB,WACAzqB,EAAA2zB,MAAAhzB,KAAA,wBAEAqgC,WAAA,WACA,IAAAzhB,EAAA5e,KAAAgM,MACA4S,EAAAtR,YAEAtN,KAAAugC,iBAEAvgC,KAAAwgC,iBAEA,IAAAC,EAAAzgC,KAAAy/B,cAAAgB,SAAA,IAAA70B,EAAAK,MAEAjM,KAAA0gC,oBAEA1gC,KAAA2gC,gBAEA3gC,KAAA4gC,oBAEAhiB,EAAAnR,IAAAgzB,GAEAzgC,KAAA6gC,kBAMAN,eAAA,WACA,IAAAtiC,EAAA+B,KAAA/B,cACAiH,EAAAlF,KAAAkF,IAGA47B,EAAA9gC,KAAA+gC,iBAEAC,EAAA,CACAzkB,MAAArX,EAAAkd,WACA5F,OAAAtX,EAAAmd,aAGA4e,EAAAjhC,KAAA0/B,UAAAL,EAAA,CAGA9hB,MAAAyjB,EAAAzkB,MAAAukB,EAAAz4B,EAAAy4B,EAAAvkB,MACAiB,IAAAwjB,EAAAxkB,OAlJA,GAFA,EAqJAD,MAAAukB,EAAAvkB,MACAC,OApJA,IAqJK,CAELe,MAzJA,EA0JAC,IAAAsjB,EAAAv4B,EACAgU,MAzJA,GA0JAC,OAAAskB,EAAAtkB,QAIA0kB,EAAA/B,EAAAgC,gBAAAljC,EAAAJ,QAEAR,EAAAK,KAAA,0CAAAnC,GACA,OAAA2lC,EAAA3lC,KACA2lC,EAAA3lC,GAAA0lC,EAAA1lC,MAGA,IAAA6lC,EAAAjC,EAAAkC,cAAAH,EAAAF,EAAA/iC,EAAAqjC,SACAthC,KAAAggC,UAAA,CACA33B,EAAA+4B,EAAA/4B,EACAE,EAAA64B,EAAA74B,GAEAvI,KAAA6/B,MAAA,CAAAuB,EAAA7kB,MAAA6kB,EAAA5kB,QAxKA,aAyKAxc,KAAA0/B,SAAA1/B,KAAA6/B,MAAA3iB,WAMA2jB,eAAA,WACA,IAAAjiB,EAAA5e,KAAAgM,MACAu1B,EAAAvhC,KAAAggC,UACA/gC,EAAAe,KAAA0/B,QAEA8B,EAAAxhC,KAAA/B,cAAA4F,0BACA49B,EAAAD,KAAA/lC,IAAA,WACAglC,EAAAzgC,KAAAy/B,cAAAgB,SACAiB,GAAA1hC,KAAAigC,iBAAA,IAAsDyB,iBAEtDjB,EAAAluB,KAAAtT,IAAAogC,GAAAoC,EAEKxiC,IAAAogC,GAAAoC,EAAA,CACL3vB,MAAA4vB,EAAA,gBA5LA,aA6LKziC,GAAAwiC,EAIA,CACL3vB,MAAA4vB,EAAA,eACAvuB,SAAApX,KAAA2W,GAAA,GANK,CACLZ,MAAA4vB,EAAA,aACAvuB,SAAApX,KAAA2W,GAAA,GANA,CACAZ,MAAA4vB,EAAA,eAYA,IAAA/f,EAAA/C,EAAAyR,gBAAA,CAAAoQ,IACA7hB,EAAArM,KAAA,YAAAgvB,EAAAl5B,EAAAsZ,EAAAtZ,EAAAk5B,EAAAh5B,EAAAoZ,EAAApZ,KAMAo5B,eAAA,WACA,SAAA3hC,KAAA6/B,MAAA,KAEAa,kBAAA,WACA,IAAAziC,EAAA+B,KAAA/B,cACA2jC,EAAA5hC,KAAA6/B,MACAY,EAAAzgC,KAAAy/B,cAAAgB,SACAA,EAAAhzB,IAAA,IAAAgO,EAAA,CACAE,QAAA,EACA1J,MAAA,CACA5J,EAAA,EACAE,EAAA,EACAgU,MAAAqlB,EAAA,GACAplB,OAAAolB,EAAA,IAEAxuB,MAAA,CACAoB,KAAAvW,EAAAxC,IAAA,oBAEAwe,IAAA,MAGAwmB,EAAAhzB,IAAA,IAAAgO,EAAA,CACAxJ,MAAA,CACA5J,EAAA,EACAE,EAAA,EACAgU,MAAAqlB,EAAA,GACAplB,OAAAolB,EAAA,IAEAxuB,MAAA,CACAoB,KAAA,eAEAyF,GAAA,EACA4nB,QAAAxkC,EAAAiJ,KAAAtG,KAAA8hC,mBAAA9hC,UAGA4gC,kBAAA,WACA,IAAAnU,EAAAzsB,KAAAigC,gBAAAjgC,KAAA+hC,yBAEA,GAAAtV,EAAA,CAIA,IAAAmV,EAAA5hC,KAAA6/B,MACA98B,EAAA0pB,EAAAuV,OACAhjB,EAAAjc,EAAAk/B,aACAC,EAAAn/B,EAAAo/B,aAAAp/B,EAAAo/B,eACA1V,EAAAyV,SAEA,SAAAA,EAAA,CAIA,IAAAE,EAAApjB,EAAAoJ,cAAA8Z,GAEAG,EAAA,IAAAD,EAAA,GAAAA,EAAA,IACAA,EAAA,CAAAA,EAAA,GAAAC,EAAAD,EAAA,GAAAC,GACA,IAQAC,EARAC,EAAA,GAAAX,EAAA,IACAY,EAAA,GAAAZ,EAAA,IACAa,EAAA,EAAAb,EAAA,aACA/tB,EAAA,GACA6uB,EAAAF,EAAA,IAAAxjB,EAAAiJ,QAAA,GACA0a,EAAA,EAEAC,EAAA7mC,KAAA0T,MAAAuP,EAAAiJ,QAAA2Z,EAAA,IAEA5iB,EAAAthB,KAAA,CAAAwkC,GAAA,SAAA/lC,EAAAoC,GACA,GAAAqkC,EAAA,GAAArkC,EAAAqkC,EACAD,GAAAD,MADA,CASA,IAAAG,EAAA,MAAA1mC,GAAA2Q,MAAA3Q,IAAA,KAAAA,EAEA2mC,EAAAD,EAAA,EAAApG,EAAAtgC,EAAAimC,EAAAG,GAAA,GAEAM,IAAAP,GAAA/jC,GACAkkC,EAAA5/B,KAAA,CAAA4/B,IAAArgC,OAAA,UACAyR,EAAAhR,KAAA,CAAAgR,IAAAzR,OAAA,YACOygC,GAAAP,IACPG,EAAA5/B,KAAA,CAAA8/B,EAAA,IACA9uB,EAAAhR,KAAA,CAAA8/B,EAAA,KAGAF,EAAA5/B,KAAA,CAAA8/B,EAAAG,IACAjvB,EAAAhR,KAAA,CAAA8/B,EAAAG,IACAH,GAAAD,EACAJ,EAAAO,KAEA,IAAA5kC,EAAA+B,KAAA/B,cAEA+B,KAAAy/B,cAAAgB,SAAAhzB,IAAA,IAAA7B,EAAAoW,QAAA,CACA/P,MAAA,CACA3B,OAAAmyB,GAEArvB,MAAA/V,EAAAgK,SAAA,CACAmN,KAAAvW,EAAAxC,IAAA,wBACOwC,EAAA8C,SAAA,4BAAAgiC,gBACPpnB,QAAA,EACA1B,IAAA,MAGAja,KAAAy/B,cAAAgB,SAAAhzB,IAAA,IAAA7B,EAAAmW,SAAA,CACA9P,MAAA,CACA3B,OAAAuD,GAEAT,MAAAnV,EAAA8C,SAAA,4BAAAyL,eACAmP,QAAA,EACA1B,IAAA,SAGA8nB,uBAAA,WACA,IAAA9jC,EAAA+B,KAAA/B,cACA8gC,EAAA9gC,EAAAxC,IAAA,kBAEA,QAAAsjC,EAAA,CAKA,IAAAvb,EACAzjB,EAAAC,KAAAD,QA+BA,OA9BA9B,EAAAkD,eAAA,SAAAC,EAAAC,GACA,IAAAs6B,EAAA19B,EAAAkG,aAAA/C,EAAA7F,KAAA8F,GAAAqwB,wBACAr0B,EAAAK,KAAAi+B,EAAA,SAAA54B,GACA,KAAAygB,IAIA,IAAAub,GAAA1hC,EAAAgG,QAAAk8B,EAAAx8B,EAAAtH,IAAA,aAIA,IAEAimC,EAFAsB,EAAAjjC,EAAAuF,aAAAlE,EAAAI,KAAAH,GAAAG,KACA0gC,EA8UA,CACA75B,EAAA,IACAE,EAAA,IACA06B,OAAA,QACAC,MAAA,UAlVA9hC,EAAA7F,MAEAmQ,EAAA3I,EAAA4I,iBAEA,MAAAu2B,GAAAx2B,EAAAkc,eACA8Z,EAAAh2B,EAAAkc,aAAAob,GAAAvB,SAGAS,EAAAn/B,EAAAwiB,UAAAuC,aAAAoa,GACA1e,EAAA,CACAwf,WACAhB,OAAAj/B,EACAogC,QAAA/hC,EAAA7F,KACA2mC,WACAR,sBAEO1hC,OACFA,MACLwjB,IAEAmd,cAAA,WACA,IAAAyC,EAAApjC,KAAAy/B,cACA4D,EAAAD,EAAAC,QAAA,GACAC,EAAAF,EAAAE,aAAA,GACA7C,EAAAzgC,KAAAy/B,cAAAgB,SACAmB,EAAA5hC,KAAA6/B,MACA5hC,EAAA+B,KAAA/B,cACAwiC,EAAAhzB,IAAA21B,EAAAG,OAAA,IAAA9nB,EAAA,CACArT,WAAA,EACAwT,OAAA4nB,EAAAxjC,KAAA0/B,SACA7jB,MAAAvV,EAAAtG,KAAAyjC,YAAAzjC,KAAA,OACA0jC,YAAA,SAAAz7B,GAEAlC,EAAAmD,KAAAjB,EAAAkB,QAEAw6B,YAAAr9B,EAAAtG,KAAA4jC,cAAA5jC,MAAA,GACA8b,UAAAxV,EAAAtG,KAAA6jC,WAAA7jC,MACA8jC,YAAAx9B,EAAAtG,KAAA4jC,cAAA5jC,MAAA,GACA+jC,WAAAz9B,EAAAtG,KAAA4jC,cAAA5jC,MAAA,GACAoT,MAAA,CACAoB,KAAAvW,EAAAxC,IAAA,eACAmX,aAAA,aAIA6tB,EAAAhzB,IAAA,IAAAgO,EAAA7P,EAAAo4B,qBAAA,CACAroB,QAAA,EACA1J,MAAA,CACA5J,EAAA,EACAE,EAAA,EACAgU,MAAAqlB,EAAA,GACAplB,OAAAolB,EAAA,IAEAxuB,MAAA,CACAqB,OAAAxW,EAAAxC,IAAA,wBAAAwC,EAAAxC,IAAA,eACAuc,UAhZA,EAiZAxD,KAAA,qBAGA9W,EAAA,eAAA9B,GACA,IAAAqoC,EAAAr4B,EAAAs4B,WAAAjmC,EAAAxC,IAAA,eACAmgB,OAAA4nB,EAAAxjC,KAAA0/B,SACAt3B,WAAA,EACAyT,MAAAvV,EAAAtG,KAAAyjC,YAAAzjC,KAAApE,GACA8nC,YAAA,SAAAz7B,GAEAlC,EAAAmD,KAAAjB,EAAAkB,QAEA2S,UAAAxV,EAAAtG,KAAA6jC,WAAA7jC,MACA8jC,YAAAx9B,EAAAtG,KAAA4jC,cAAA5jC,MAAA,GACA+jC,WAAAz9B,EAAAtG,KAAA4jC,cAAA5jC,MAAA,IACO,CACPqI,GAAA,EACAE,EAAA,EACAgU,MAAA,EACAC,OAAA,IAEA2nB,EAAAF,EAAA5T,kBACArwB,KAAA+/B,cAAAna,EAAAwe,aAAAnmC,EAAAxC,IAAA,cAAAuE,KAAA6/B,MAAA,IACA7/B,KAAA8/B,aAAAqE,EAAA5nB,MAAA4nB,EAAA3nB,OAAAxc,KAAA+/B,cACAkE,EAAArvB,SAAA3W,EAAA8C,SAAA,eAAAsjC,gBACA,IAAAC,EAAArmC,EAAAxC,IAAA,eAEA,MAAA6oC,IACAL,EAAA7wB,MAAAoB,KAAA8vB,GAGA7D,EAAAhzB,IAAA41B,EAAAznC,GAAAqoC,GACA,IAAA7jC,EAAAnC,EAAAmC,eACAJ,KAAAgM,MAAAyB,IAAA61B,EAAA1nC,GAAA,IAAAgQ,EAAA8H,KAAA,CACAiI,QAAA,EACAI,WAAA,EACA3I,MAAA,CACA/K,EAAA,EACAE,EAAA,EACAsN,KAAA,GACA/C,kBAAA,SACAD,UAAA,SACAkD,SAAA3V,EAAA4V,eACAuuB,SAAAnkC,EAAAokC,WAEAvqB,GAAA,OAEKja,OAMLwgC,eAAA,WACA,IAAAxmB,EAAAha,KAAA2/B,OAAA3/B,KAAA/B,cAAAuG,kBAEAigC,EAAAzkC,KAAA2hC,iBAEA3hC,KAAA4/B,YAAA,CAAAnD,EAAAziB,EAAA,WAAAyqB,GAAA,GAAAhI,EAAAziB,EAAA,WAAAyqB,GAAA,KASAC,gBAAA,SAAA9oC,EAAAY,GACA,IAAAyB,EAAA+B,KAAA/B,cACAtC,EAAAqE,KAAA4/B,YAEA+E,EAAA3kC,KAAA2hC,iBAEArE,EAAAr/B,EAAAwG,8BAAAy3B,gBACAG,EAAA,QACA+C,EAAA5iC,EAAAb,EAAAgpC,EAAA1mC,EAAAxC,IAAA,kBAAAG,EAAA,MAAA0hC,EAAA5gC,QAAA+/B,EAAAa,EAAA5gC,QAAA2/B,EAAAsI,GAAA,cAAArH,EAAA3gC,QAAA8/B,EAAAa,EAAA3gC,QAAA0/B,EAAAsI,GAAA,SACA,IAAAC,EAAA5kC,KAAA2/B,OACA3lB,EAAAha,KAAA2/B,OAAA/E,EAAA,CAAA6B,EAAA9gC,EAAA,GAAAgpC,EAAAtI,GAAA,GAAAI,EAAA9gC,EAAA,GAAAgpC,EAAAtI,GAAA,KACA,OAAAuI,KAAA,KAAA5qB,EAAA,IAAA4qB,EAAA,KAAA5qB,EAAA,IAMAsmB,YAAA,SAAAuE,GACA,IAAAzB,EAAApjC,KAAAy/B,cACA9jC,EAAAqE,KAAA4/B,YACAkF,EAAAlK,EAAAj/B,EAAAqB,SACA4kC,EAAA5hC,KAAA6/B,MACAniC,EAAA,eAAA9B,GAEA,IAAAmpC,EAAA3B,EAAAC,QAAAznC,GACAopC,EAAAhlC,KAAA+/B,cACAgF,EAAAxyB,KAAA,CACAT,MAAA,CAAAkzB,EAAA,EAAAA,EAAA,GACAzxB,SAAA,CAAA5X,EAAAC,GAAAgmC,EAAA,KAAAoD,EAAA,MAEKhlC,MAELojC,EAAAG,OAAAxlB,SAAA,CACA1V,EAAAy8B,EAAA,GACAv8B,EAAA,EACAgU,MAAAuoB,EAAA,GAAAA,EAAA,GACAtoB,OAAAolB,EAAA,KAGA5hC,KAAAilC,gBAAAJ,IAMAI,gBAAA,SAAAJ,GACA,IAAA5mC,EAAA+B,KAAA/B,cACAmlC,EAAApjC,KAAAy/B,cACA6D,EAAAF,EAAAE,aACArkC,EAAAe,KAAA0/B,QACAwF,EAAA,QAGA,GAAAjnC,EAAAxC,IAAA,eACA,IAAAgG,EAAAxD,EAAAwG,8BAEA,GAAAhD,EAAA,CACA,IAAAD,EAAAC,EAAA2C,eAAA5C,KACAwY,EAAAha,KAAA2/B,OACAwF,EAAAN,EACApjC,EAAA06B,oBAAA,CACA78B,MAAA0a,EAAA,GACAza,IAAAya,EAAA,KACSuhB,YAAA95B,EAAAoD,qBACTqgC,EAAA,CAAAllC,KAAAolC,aAAAD,EAAA,GAAA3jC,GAAAxB,KAAAolC,aAAAD,EAAA,GAAA3jC,KAIA,IAAA6jC,EAAAzK,EAAA56B,KAAA4/B,YAAA5iC,SAIA,SAAAsoC,EAAA1pC,GAIA,IAAA2pC,EAAA35B,EAAAyR,aAAA+lB,EAAAC,QAAAznC,GAAAiW,OAAA7R,KAAAgM,OACAw5B,EAAA55B,EAAAwR,mBAAA,IAAAxhB,EAAA,eAAA2pC,GACA7X,EAAA1tB,KAAA8/B,aAAA,EAAAR,EACAmG,EAAA75B,EAAA0kB,eAAA,CAAA+U,EAAAzpC,IAAA,IAAAA,GAAA8xB,KAAA1tB,KAAA6/B,MAAA,MAAA0F,GACAjC,EAAA1nC,GAAAgZ,SAAA,CACAvM,EAAAo9B,EAAA,GACAl9B,EAAAk9B,EAAA,GACA3yB,kBAAA7T,IAAAogC,EAAA,SAAAmG,EACA3yB,UAAA5T,IAAAogC,EAAAmG,EAAA,SACA3vB,KAAAqvB,EAAAtpC,KAhBA0pC,EAAAphC,KAAAlE,KAAA,GACAslC,EAAAphC,KAAAlE,KAAA,IAuBAolC,aAAA,SAAAjpC,EAAAqF,GACA,IAAAvD,EAAA+B,KAAA/B,cACA4gC,EAAA5gC,EAAAxC,IAAA,kBACAmjC,EAAA3gC,EAAAxC,IAAA,kBAEA,MAAAmjC,GAAA,SAAAA,IACAA,EAAAp9B,EAAAg6B,qBAGA,IAAAkK,EAAA,MAAAvpC,GAAA2Q,MAAA3Q,GAAA,GACA,aAAAqF,EAAA5C,MAAA,SAAA4C,EAAA5C,KAAA4C,EAAAsQ,MAAA6zB,SAAA5pC,KAAA0T,MAAAtT,IACAA,EAAAwqB,QAAA5qB,KAAAM,IAAAuiC,EAAA,KACA,OAAAvhC,EAAAuoC,WAAA/G,KAAA1iC,EAAAupC,GAAAroC,EAAA2M,SAAA60B,KAAAgH,QAAA,UAAkJH,MAOlJ9B,cAAA,SAAAkC,GAEAA,EAAA9lC,KAAA8H,WAAAg+B,EACA,IAAAxC,EAAAtjC,KAAAy/B,cAAA6D,aACAA,EAAA,GAAA/wB,KAAA,aAAAuzB,GACAxC,EAAA,GAAA/wB,KAAA,aAAAuzB,IAEArC,YAAA,SAAA7nC,EAAAoN,EAAAC,GACAjJ,KAAA8H,WAAA,EAEA,IAAAy9B,EAAAvlC,KAAAy/B,cAAAgB,SAAAngB,oBAEAylB,EAAAn6B,EAAA0kB,eAAA,CAAAtnB,EAAAC,GAAAs8B,GAAA,GAEAS,EAAAhmC,KAAA0kC,gBAAA9oC,EAAAmqC,EAAA,IAEAllC,EAAAb,KAAA/B,cAAAxC,IAAA,YAEAuE,KAAAsgC,aAAAz/B,GAIAmlC,GAAAnlC,GAAAb,KAAAimC,uBAEApC,WAAA,WACA7jC,KAAA8H,WAAA,EAEA9H,KAAA4jC,eAAA,IAIA5jC,KAAA/B,cAAAxC,IAAA,aACAuE,KAAAimC,uBAEAnE,mBAAA,SAAA75B,GACA,IAAA25B,EAAA5hC,KAAA6/B,MAEAqG,EAAAlmC,KAAAy/B,cAAAgB,SAAA3hB,sBAAA7W,EAAAK,QAAAL,EAAAO,SAEA,KAAA09B,EAAA,MAAAA,EAAA,GAAAtE,EAAA,IAAAsE,EAAA,MAAAA,EAAA,GAAAtE,EAAA,KAIA,IAAAjmC,EAAAqE,KAAA4/B,YACAuG,GAAAxqC,EAAA,GAAAA,EAAA,MAEAqqC,EAAAhmC,KAAA0kC,gBAAA,MAAAwB,EAAA,GAAAC,GAEAnmC,KAAAsgC,cAEA0F,GAAAhmC,KAAAimC,wBAOAA,oBAAA,WACA,IAAAjsB,EAAAha,KAAA2/B,OACA3/B,KAAAkF,IAAAqwB,eAAA,CACA32B,KAAA,WACAwhC,KAAApgC,KAAA2xB,IACAgB,WAAA3yB,KAAA/B,cAAAmF,GACA9D,MAAA0a,EAAA,GACAza,IAAAya,EAAA,MAOA+mB,eAAA,WAEA,IAAApf,EAQA,GAPAjkB,EAAAsC,KAAAoF,qBAAA,SAAAghC,GACA,IAAAzkB,GAAAykB,EAAAhkC,OAAA,CACA,IAAAsJ,EAAA06B,EAAA,GAAAxgC,MAAA+F,iBACAgW,EAAAjW,EAAA0kB,SAAA1kB,EAAA0kB,cAIAzO,EAAA,CACA,IAAApF,EAAAvc,KAAAkF,IAAAkd,WACA5F,EAAAxc,KAAAkF,IAAAmd,YACAV,EAAA,CACAtZ,EAAA,GAAAkU,EACAhU,EAAA,GAAAiU,EACAD,MAAA,GAAAA,EACAC,OAAA,GAAAA,GAIA,OAAAmF,KAgBA,SAAA6hB,EAAAvkC,GACA,mBAAAA,EAAA,wBAGA,IAAAP,EAAA8gC,EACAjjC,EAAAlB,QAAAqD,wBC9tBA,IAoBAA,EApBoBxB,EAAQ,MAoB5Bd,OAAA,CACAwC,KAAA,kBAKAE,cAAA,CACAs3B,UAAA,EAEA4I,UAAA,EAEAz3B,kBAAA,EAEAC,iBAAA,EAEAC,yBAAA,KAIAlL,EAAAlB,QAAAqD,wBCvCA,IAAArB,EAAaH,EAAQ,MAErBgiC,EAAmBhiC,EAAQ,MAE3BkiC,EAAiBliC,EAAQ,MAEzBmpC,EAAYnpC,EAAQ,MAoBpBoJ,EAAAjJ,EAAAiJ,KACAggC,EAAApH,EAAA9iC,OAAA,CACAwC,KAAA,kBAKAiB,KAAA,SAAAE,EAAAmF,GAOAlF,KAAA2/B,QAMA16B,OAAA,SAAAhH,EAAA8B,EAAAmF,EAAAC,GACAmhC,EAAApG,WAAAlgC,KAAA,SAAA8pB,WAIA9pB,KAAA2/B,OAAA1hC,EAAAuG,kBAEAnH,EAAAK,KAAAsC,KAAAoF,qBAAA,SAAAghC,EAAAG,GACA,IAAAC,EAAAnpC,EAAAwZ,IAAAuvB,EAAA,SAAAK,GACA,OAAAJ,EAAAK,gBAAAD,EAAA7gC,SAEAvI,EAAAK,KAAA0oC,EAAA,SAAAK,GACA,IAAAlhC,EAAAkhC,EAAA7gC,MACA+gC,EAAA1oC,EAAAJ,OACAwoC,EAAA/qC,SAAA4J,EAAA,CACA0hC,QAAAP,EAAAK,gBAAAnhC,GACAihC,cACAK,cAAA,SAAA5+B,EAAAI,EAAAE,GACA,OAAAhD,EAAAoG,iBAAAm7B,aAAA,CAAAz+B,EAAAE,KAEAoqB,WAAA10B,EAAAmF,GACA2jC,aAAA9oC,EAAAxC,IAAA,eACAurC,YAAA1gC,EAAAtG,KAAAinC,OAAAjnC,KAAAymC,EAAAF,GACAW,aAAA5gC,EAAAtG,KAAAmnC,QAAAnnC,KAAAymC,EAAAF,GACAvH,SAAA2H,EAAA3H,SACA5I,SAAAuQ,EAAAvQ,SACAgR,kBAAA,CACA7/B,iBAAAo/B,EAAAp/B,iBACAC,gBAAAm/B,EAAAn/B,gBACAC,wBAAAk/B,EAAAl/B,4BAGOzH,OACFA,OAML4H,QAAA,WACAy+B,EAAAgB,WAAArnC,KAAAkF,IAAAlF,KAAA/B,cAAAmF,IACAkjC,EAAApG,WAAAlgC,KAAA,UAAA8pB,WACA9pB,KAAA2/B,OAAA,MAMAsH,OAAA,SAAAR,EAAAF,EAAAntB,EAAApQ,EAAAC,EAAAH,EAAAC,EAAAu+B,EAAAC,GACA,IAAA3C,EAAA5kC,KAAA2/B,OACA3lB,EAAA4qB,EAAA5nC,QAEAsE,EAAAmlC,EAAA/jC,WAAA,GAEA,GAAApB,EAAA,CAIA,IAAAkmC,EAAAC,EAAAlB,GAAA,CAAAz9B,EAAAC,GAAA,CAAAu+B,EAAAC,GAAAjmC,EAAA8X,EAAAqtB,GACAiB,EAAAF,EAAAG,QAAA3tB,EAAA,GAAAA,EAAA,IAAAwtB,EAAAI,MAAAJ,EAAAK,YAIA,OAHAzI,EAAAsI,EAAA1tB,EAAA,eACAha,KAAA2/B,OAAA3lB,EAEA4qB,EAAA,KAAA5qB,EAAA,IAAA4qB,EAAA,KAAA5qB,EAAA,GACAA,OADA,IAQAmtB,QAAA,SAAAV,EAAAF,EAAAntB,EAAAtH,EAAAg2B,EAAAC,GACA,IAAAnD,EAAA5kC,KAAA2/B,OACA3lB,EAAA4qB,EAAA5nC,QAEAsE,EAAAmlC,EAAA/jC,WAAA,GAEA,GAAApB,EAAA,CAIA,IAAAkmC,EAAAC,EAAAlB,GAAA,MAAAuB,EAAAC,GAAAzmC,EAAA8X,EAAAqtB,GACAuB,GAAAR,EAAAG,OAAA,EAAAH,EAAAS,WAAAT,EAAAK,YAAAL,EAAAI,MAAAJ,EAAAI,MAAAJ,EAAAS,YAAAT,EAAAK,aAAA7tB,EAAA,GAAAA,EAAA,IAAAA,EAAA,GACAlI,EAAA/V,KAAAO,IAAA,EAAAwV,EAAA,GACAkI,EAAA,IAAAA,EAAA,GAAAguB,GAAAl2B,EAAAk2B,EACAhuB,EAAA,IAAAA,EAAA,GAAAguB,GAAAl2B,EAAAk2B,EAEA,IAAA1K,EAAAt9B,KAAA/B,cAAAwG,8BAAAy3B,gBAIA,OAHAkD,EAAA,EAAAplB,EAAA,UAAAsjB,EAAA5gC,QAAA4gC,EAAA3gC,SACAqD,KAAA2/B,OAAA3lB,EAEA4qB,EAAA,KAAA5qB,EAAA,IAAA4qB,EAAA,KAAA5qB,EAAA,GACAA,OADA,MAKAytB,EAAA,CACAzY,KAAA,SAAAkZ,EAAAC,EAAA7mC,EAAA8X,EAAAqtB,GACA,IAAAjlC,EAAAF,EAAAE,KACA1D,EAAA,GACA6jB,EAAA8kB,EAAA7gC,MAAA+F,iBAAAykB,UAgBA,OAfA8X,KAAA,MAEA,MAAA1mC,EAAA8B,KACAxF,EAAA8pC,MAAAO,EAAA,GAAAD,EAAA,GACApqC,EAAA+pC,YAAAlmB,EAAApF,MACAze,EAAAmqC,WAAAtmB,EAAAtZ,EACAvK,EAAA6pC,OAAAnmC,EAAAigC,QAAA,OAGA3jC,EAAA8pC,MAAAO,EAAA,GAAAD,EAAA,GACApqC,EAAA+pC,YAAAlmB,EAAAnF,OACA1e,EAAAmqC,WAAAtmB,EAAApZ,EACAzK,EAAA6pC,OAAAnmC,EAAAigC,SAAA,KAGA3jC,GAEAsqC,MAAA,SAAAF,EAAAC,EAAA7mC,EAAA8X,EAAAqtB,GACA,IAAAjlC,EAAAF,EAAAE,KACA1D,EAAA,GACAsqC,EAAA3B,EAAA7gC,MAAA+F,iBACA08B,EAAAD,EAAAE,gBAAAC,YACAC,EAAAJ,EAAAK,eAAAF,YAqBA,OApBAL,IAAAE,EAAAM,aAAAR,GAAA,MACAC,EAAAC,EAAAM,aAAAP,GAEA,eAAA7mC,EAAA6B,UACArF,EAAA8pC,MAAAO,EAAA,GAAAD,EAAA,GAGApqC,EAAA+pC,YAAAQ,EAAA,GAAAA,EAAA,GACAvqC,EAAAmqC,WAAAI,EAAA,GACAvqC,EAAA6pC,OAAAnmC,EAAAigC,QAAA,OAGA3jC,EAAA8pC,MAAAO,EAAA,GAAAD,EAAA,GAGApqC,EAAA+pC,YAAAW,EAAA,GAAAA,EAAA,GACA1qC,EAAAmqC,WAAAO,EAAA,GACA1qC,EAAA6pC,OAAAnmC,EAAAigC,SAAA,KAGA3jC,GAEAuE,WAAA,SAAA6lC,EAAAC,EAAA7mC,EAAA8X,EAAAqtB,GACA,IAAAjlC,EAAAF,EAAAE,KACAmgB,EAAA8kB,EAAA7gC,MAAA+F,iBAAAykB,UACAtyB,EAAA,GAgBA,OAfAoqC,KAAA,MAEA,eAAA1mC,EAAAvC,QACAnB,EAAA8pC,MAAAO,EAAA,GAAAD,EAAA,GACApqC,EAAA+pC,YAAAlmB,EAAApF,MACAze,EAAAmqC,WAAAtmB,EAAAtZ,EACAvK,EAAA6pC,OAAAnmC,EAAAigC,QAAA,OAGA3jC,EAAA8pC,MAAAO,EAAA,GAAAD,EAAA,GACApqC,EAAA+pC,YAAAlmB,EAAAnF,OACA1e,EAAAmqC,WAAAtmB,EAAApZ,EACAzK,EAAA6pC,OAAAnmC,EAAAigC,SAAA,KAGA3jC,IAGAY,EAAA4nC,EACA/pC,EAAAlB,QAAAqD,wBCvNA,IAAArB,EAAaH,EAAQ,MAErB+I,EAAqB/I,EAAQ,MAE7ByrC,EAAmBzrC,EAAQ,MAyB3B0Z,EAAAvZ,EAAAuZ,MACAqU,EAAA,uBAuFA,SAAAuH,EAAAttB,GAGA,IAAAgB,EAAAhB,EAAA0jC,QACA,OAAA1iC,EAAA+kB,KAAA/kB,EAAA+kB,GAAA,IAUA,SAAA4d,EAAApjC,GACApI,EAAAK,KAAA+H,EAAA,SAAAqjC,EAAAlC,GACAkC,EAAA7gB,QACA6gB,EAAA1vB,WAAAxR,iBACAnC,EAAAmhC,MAKA,SAAAmC,EAAAD,EAAA9/B,EAAAC,EAAAH,EAAAC,EAAAu+B,EAAAC,GACAyB,EAAAF,EAAA,SAAArc,GACA,OAAAA,EAAAua,YAAA8B,EAAA1vB,WAAApQ,EAAAC,EAAAH,EAAAC,EAAAu+B,EAAAC,KAIA,SAAAtS,EAAA6T,EAAAh3B,EAAAg2B,EAAAC,GACAiB,EAAAF,EAAA,SAAArc,GACA,OAAAA,EAAAya,aAAA4B,EAAA1vB,WAAAtH,EAAAg2B,EAAAC,KAIA,SAAAiB,EAAAF,EAAAG,GACA,IAAAC,EAAA,GACA7rC,EAAAK,KAAAorC,EAAAK,cAAA,SAAA1c,GACA,IAAAzS,EAAAivB,EAAAxc,IACAA,EAAA2J,UAAApc,GAAAkvB,EAAArmC,KAAA,CACA8vB,WAAAlG,EAAAkG,WACArzB,MAAA0a,EAAA,GACAza,IAAAya,EAAA,OAGAkvB,EAAA9mC,QAAA0mC,EAAAvT,eAAA2T,GAOA,SAAA3T,EAAArwB,EAAAgkC,GACAhkC,EAAAqwB,eAAA,CACA32B,KAAA,WACAsqC,UAoCA7tC,EAAAC,SAlKA,SAAA4J,EAAAkkC,GACA,IAAA3jC,EAAA+sB,EAAAttB,GACAmkC,EAAAD,EAAAzW,WACA2W,EAAAF,EAAAxC,QAGAvpC,EAAAK,KAAA+H,EAAA,SAAAqjC,EAAAlC,GACA,IAAAuC,EAAAL,EAAAK,cAEAA,EAAAE,IAAAhsC,EAAAgG,QAAA+lC,EAAA5C,YAAA8C,GAAA,WACAH,EAAAE,GACAP,EAAA7gB,WAGA4gB,EAAApjC,GACA,IAAAqjC,EAAArjC,EAAA6jC,GAEAR,KACAA,EAAArjC,EAAA6jC,GAAA,CACA1C,QAAA0C,EACAH,cAAA,GACAlhB,MAAA,IAEA7O,WAuDA,SAAAlU,EAAAqkC,GACA,IAAAnwB,EAAA,IAAAnT,EAAAf,EAAA0jC,SAGA,OAFAxvB,EAAA1R,GAAA,MAAAkP,EAAAmyB,EAAAQ,IACAnwB,EAAA1R,GAAA,OAAAkP,EAAAqe,EAAAsU,IACAnwB,EA3DAowB,CAAAtkC,EAAA4jC,GACAA,EAAAvT,eAAAl4B,EAAAuZ,MAAA2e,EAAArwB,KAIA4jC,EAAAK,cAAAE,IAAAP,EAAA7gB,QACA6gB,EAAAK,cAAAE,GAAAD,EACA,IAwGAD,EACAhiC,EACA7C,EAIAmlC,EA9GAC,GAwGAP,EAxGAL,EAAAK,cA0GA7kC,EAAA,GAIAmlC,EAAA,CACAE,UAAA,EACAC,UAAA,EACAC,WAAA,EACAC,gBAAA,GAEAzsC,EAAAK,KAAAyrC,EAAA,SAAAC,GACA,IAAAW,GAAAX,EAAAhT,YAAAgT,EAAApK,UAAA,QAEAyK,EAVA,QAUAM,GAAAN,EAVA,QAUAtiC,KACAA,EAAA4iC,GAIA1sC,EAAAjB,OAAAkI,EAAA8kC,EAAAhC,qBAEA,CACAjgC,cACA7C,QA/HAwkC,EAAA1vB,WAAAlS,OAAAwiC,EAAAviC,YAAAuiC,EAAAplC,KAEAwkC,EAAA1vB,WAAAnS,kBAAAmiC,EAAAvC,eAEA8B,EAAAxI,eAAA2I,EAAA,iBAAAM,EAAArC,aAAA,YAgIA1rC,EAAAgsC,WAvHA,SAAAniC,EAAAytB,GACA,IAAAltB,EAAA+sB,EAAAttB,GACA7H,EAAAK,KAAA+H,EAAA,SAAAqjC,GACAA,EAAA1vB,WAAAxR,UACA,IAAAuhC,EAAAL,EAAAK,cAEAA,EAAAxW,YACAwW,EAAAxW,GACAmW,EAAA7gB,WAGA4gB,EAAApjC,IA6GApK,EAAAqrC,gBAtGA,SAAAnhC,GACA,OAAAA,EAAA3G,KAAA,MAAA2G,EAAAnC,0BC7GA,IAoBA1E,EApBkBxB,EAAQ,MAoB1Bd,OAAA,CACAwC,KAAA,WACAE,cAAA,CACAC,OAAA,EACAC,EAAA,EACA2U,OAAA,mBACA1D,WAAA,OAEAwW,UAAA,EACArb,QAAA,CACAhC,QAAA,QAEAqI,MAAA,CACAqnB,MAAA,EACAvlB,SAAA,OAEAhH,UAAA,CACA3N,KAAA,UAEAorC,SAAA,CACAv4B,MAAA,CACAqnB,MAAA,GAEAvsB,UAAA,CACAgQ,MAAA,IAGA0tB,gBAAA,YAIA1tC,EAAAlB,QAAAqD,wBCnDA,IAAArB,EAAaH,EAAQ,MAErBgtC,EAAWhtC,EAAQ,MAEnB0oB,EAAiB1oB,EAAQ,MAEzBitC,EAAmBjtC,EAAQ,MAE3B4O,EAAe5O,EAAQ,MAEvBktC,EAAiBltC,EAAQ,MAoBzBmtC,EAAA,SAAAtnC,EAAA2I,EAAA4+B,EAAA3kC,GACA,IAAAqZ,EAAAjc,EAAAwiB,UAEAQ,EAAApgB,EAAA/G,KAEA,IAAAvB,EAAA6S,QAAAvK,KAAA,QAAAogB,GAAA,QAAAA,GAAA,YAAAA,GAAA,WAAAA,GAIA,MAAApgB,EAAAgjB,OAAA,MAAAhjB,EAAAkjB,OAAA,CACA,IACA5B,EACA9qB,EAEA,SAAAwJ,EAAAkjB,OAAA,MAAAljB,EAAAgjB,MACA1B,EAAA,MAAAthB,EAAAkjB,MAAA,QACAnd,EAAA0b,QAAAH,GACA9qB,EAAAkB,EAAAktC,SAAA5kC,EAAAkjB,MAAAljB,EAAAgjB,WACK,CACL,IAAAD,EAAAyhB,EAAArjB,YAAAnhB,EAAAqZ,EAAAtT,EAAA3I,GACAkkB,EAAAyB,EAAAzB,aACAyB,EAAAvB,UACAhrB,EAAAguC,EAAA5jB,aAAAvH,EAAAiI,EAAAlB,GAGA,IAAAgB,EAAA,MAAAE,EAAA,IACAujB,EAAA,EAAAzjB,EACA0jB,EAAAptC,EAAAiK,MAAA3B,GACA+kC,EAAA,GACAD,EAAA7rC,KAAA,KACA6rC,EAAAjiB,MAAA,GACAkiB,EAAAliB,MAAA,GACAiiB,EAAAjiB,MAAAgiB,IAAA5Z,IACA8Z,EAAAliB,MAAAgiB,GAAA5Z,IACA,IAAAnK,EAAA6jB,EAAA7uC,IAAA,aAEAgrB,GAAA,oBAAAtqB,IACAA,KAAAwqB,QAAA5qB,KAAAM,IAAAoqB,EAAA,MAGAgkB,EAAAjiB,MAAAzB,GAAA2jB,EAAAliB,MAAAzB,GAAA5qB,EACAwJ,EAAA,CAAA8kC,EAAAC,EAAA,CAEA9rC,KAAAmnB,EACAgB,WAAAphB,EAAAohB,WAEA5qB,UAUA,OANAwJ,EAAA,CAAAwkC,EAAA9hB,cAAAtlB,EAAA4C,EAAA,IAAAwkC,EAAA9hB,cAAAtlB,EAAA4C,EAAA,IAAAtI,EAAAjB,OAAA,GAA8HuJ,EAAA,MAE9H,GAAA/G,KAAA+G,EAAA,GAAA/G,MAAA,GAEAvB,EAAAqD,MAAAiF,EAAA,GAAAA,EAAA,IACAtI,EAAAqD,MAAAiF,EAAA,GAAAA,EAAA,IACAA,GAGA,SAAAglC,EAAAziB,GACA,OAAApb,MAAAob,KAAA3S,SAAA2S,GAIA,SAAA0iB,EAAAzhB,EAAA0hB,EAAAC,EAAAp/B,GACA,IAAAq/B,EAAA,EAAA5hB,EACAhnB,EAAAuJ,EAAA4b,WAAA6B,GACA,OAAAwhB,EAAAE,EAAAE,KAAAJ,EAAAG,EAAAC,KAAAF,EAAA1hB,KAAA2hB,EAAA3hB,IAAAzd,EAAA0b,QAAAjlB,GAAA6mB,YAAA6hB,EAAA1hB,IAGA,SAAA6hB,EAAAt/B,EAAA/F,GACA,mBAAA+F,EAAA9M,KAAA,CACA,IAAAisC,EAAAllC,EAAA,GAAA6iB,MACAsiB,EAAAnlC,EAAA,GAAA6iB,MAOA,GAAAqiB,GAAAC,IAAAF,EAAA,EAAAC,EAAAC,EAAAp/B,IAAAk/B,EAAA,EAAAC,EAAAC,EAAAp/B,IACA,SAIA,OAAAy+B,EAAAphB,WAAArd,EAAA/F,EAAA,KAAAwkC,EAAAphB,WAAArd,EAAA/F,EAAA,IAGA,SAAAslC,EAAAjsB,EAAAtR,EAAAw9B,EAAAnoC,EAAAmC,GACA,IAEAyZ,EAFAjT,EAAA3I,EAAA4I,iBACAqI,EAAAgL,EAAA/K,aAAAvG,GAEAy9B,EAAAvlB,EAAAwe,aAAApwB,EAAAvY,IAAA,KAAAyJ,EAAAkd,YACAgpB,EAAAxlB,EAAAwe,aAAApwB,EAAAvY,IAAA,KAAAyJ,EAAAmd,aAEA,GAAAvV,MAAAq+B,IAAAr+B,MAAAs+B,GAEG,CAEH,GAAAroC,EAAAsoC,kBAEA1sB,EAAA5b,EAAAsoC,kBAAArsB,EAAAssB,UAAAtsB,EAAAsI,WAAA5Z,QACK,CACL,IAAA+a,EAAA/c,EAAA4b,WACAjf,EAAA2W,EAAAvjB,IAAAgtB,EAAA,GAAA/a,GACAnF,EAAAyW,EAAAvjB,IAAAgtB,EAAA,GAAA/a,GACAiR,EAAAjT,EAAA6/B,YAAA,CAAAljC,EAAAE,IAYA,mBAAAmD,EAAA9M,KAAA,CACA,IAAA+pB,EAAAjd,EAAA0b,QAAA,KACAyB,EAAAnd,EAAA0b,QAAA,KACAqB,EAAA/c,EAAA4b,WAEAqjB,EAAA3rB,EAAAvjB,IAAAgtB,EAAA,GAAA/a,IACAiR,EAAA,GAAAgK,EAAAqI,cAAArI,EAAA4f,YAAA2C,EAAA,MACOP,EAAA3rB,EAAAvjB,IAAAgtB,EAAA,GAAA/a,MACPiR,EAAA,GAAAkK,EAAAmI,cAAAnI,EAAA0f,YAAA2C,EAAA,OAKAp+B,MAAAq+B,KACAxsB,EAAA,GAAAwsB,GAGAr+B,MAAAs+B,KACAzsB,EAAA,GAAAysB,QAxCAzsB,EAAA,CAAAwsB,EAAAC,GA4CApsB,EAAAwsB,cAAA99B,EAAAiR,GAGA,IAAAjgB,EAAA0rC,EAAAhuC,OAAA,CACAwC,KAAA,WAwBA6sC,gBAAA,SAAAC,EAAA3rC,EAAAmF,GACAnF,EAAA+C,WAAA,SAAAC,GACA,IAAAunC,EAAAvnC,EAAA2oC,cAEA,GAAApB,EAAA,CACA,IAAAqB,EAAArB,EAAA/kB,UACAqmB,EAAAtB,EAAAuB,OACAC,EAAAxB,EAAAyB,KAEAH,EAAAluC,KAAA,SAAAgQ,GACAu9B,EAAAW,EAAAl+B,GAAA,EAAA3K,EAAAmC,GACA+lC,EAAAa,EAAAp+B,GAAA,EAAA3K,EAAAmC,KAGAymC,EAAAjuC,KAAA,SAAAgQ,GACAi+B,EAAAH,cAAA99B,EAAA,CAAAk+B,EAAAj+B,cAAAD,GAAAo+B,EAAAn+B,cAAAD,OAEA1N,KAAAqpB,eAAA5tB,IAAAsH,EAAAK,IAAAoL,iBAEKxO,OAELypB,aAAA,SAAA1mB,EAAAunC,EAAAvqC,EAAAmF,GACA,IAAAwG,EAAA3I,EAAA4I,iBACAqgC,EAAAjpC,EAAAK,GACAu5B,EAAA55B,EAAAwiB,UACA0mB,EAAAjsC,KAAAqpB,eACAlc,EAAA8+B,EAAAxwC,IAAAuwC,IAAAC,EAAAzc,IAAAwc,EAAA,IAAAlgC,GACA9L,KAAAgM,MAAAyB,IAAAN,EAAAnB,OACA,IAAA2/B,EAqEA,SAAAjgC,EAAA3I,EAAAunC,GACA,IAAA4B,EAGAA,EADAxgC,EACArO,EAAAwZ,IAAAnL,KAAA4b,WAAA,SAAAG,GACA,IAAAgF,EAAA1pB,EAAAwiB,UAAAiC,iBAAAzkB,EAAAwiB,UAAAuC,aAAAL,KAAA,GAEA,OAAApqB,EAAAgK,SAAA,CACA9L,KAAAksB,GACOgF,KAGP,EACAlxB,KAAA,QACAqD,KAAA,UAIA,IAAAgtC,EAAA,IAAA1B,EAAAgC,EAAA5B,GACAwB,EAAA,IAAA5B,EAAAgC,EAAA5B,GAEAj+B,EAAA,IAAA69B,EAAA,GAAAI,GACA6B,EAAA9uC,EAAAwZ,IAAAyzB,EAAA7uC,IAAA,QAAA4B,EAAAuZ,MAAAyzB,EAAAtnC,EAAA2I,EAAA4+B,IAEA5+B,IACAygC,EAAA9uC,EAAA+uC,OAAAD,EAAA9uC,EAAAuZ,MAAAo0B,EAAAt/B,KAGA,IAAAwd,EAAAxd,EAAAy+B,EAAAjhB,eAAA,SAAAvjB,GACA,OAAAA,EAAAxJ,OAYA,OAVAyvC,EAAAS,SAAAhvC,EAAAwZ,IAAAs1B,EAAA,SAAAxmC,GACA,OAAAA,EAAA,KACG,KAAAujB,GACH4iB,EAAAO,SAAAhvC,EAAAwZ,IAAAs1B,EAAA,SAAAxmC,GACA,OAAAA,EAAA,KACG,KAAAujB,GACH7c,EAAAggC,SAAAhvC,EAAAwZ,IAAAs1B,EAAA,SAAAxmC,GACA,OAAAA,EAAA,MAEA0G,EAAA0H,eAAA,EACA,CACAqsB,KAAAwL,EACApb,GAAAsb,EACA/5B,KAAA1F,GAjHAigC,CAAA5gC,EAAA3I,EAAAunC,GACAsB,EAAAD,EAAAvL,KACA0L,EAAAH,EAAAnb,GACAnkB,EAAAs/B,EAAA55B,KACAu4B,EAAAuB,OAAAD,EACAtB,EAAAyB,KAAAD,EAEAxB,EAAA3kB,QAAAtZ,GACA,IAAA2D,EAAAs6B,EAAA7uC,IAAA,UACAwU,EAAAq6B,EAAA7uC,IAAA,cAsCA,SAAA8wC,EAAAvtB,EAAAtR,EAAAw9B,GACA,IAAAl3B,EAAAgL,EAAA/K,aAAAvG,GACAu9B,EAAAjsB,EAAAtR,EAAAw9B,EAAAnoC,EAAAmC,GACA8Z,EAAAwtB,cAAA9+B,EAAA,CACAuC,WAAA+D,EAAAvY,IAAA,eAAAwU,EAAAi7B,EAAA,KACAv3B,OAAAK,EAAAvY,IAAA,cAAAuU,EAAAk7B,EAAA,KACAp7B,MAAAkE,EAAAvY,IAAA,oBAAAkhC,EAAA8P,UAAA,WA1CApvC,EAAA6S,QAAAF,KACAA,EAAA,CAAAA,MAGA,iBAAAC,IACAA,EAAA,CAAAA,MAIA07B,EAAAvL,KAAA1iC,KAAA,SAAAgQ,GACA6+B,EAAAX,EAAAl+B,GAAA,GACA6+B,EAAAT,EAAAp+B,GAAA,KAGArB,EAAA3O,KAAA,SAAAgQ,GACA,IAAAg/B,EAAArgC,EAAA4H,aAAAvG,GAAAjS,IAAA,mBACA4Q,EAAAmgC,cAAA9+B,EAAA,CACAoC,MAAA48B,GAAAd,EAAA77B,cAAArC,EAAA,WAEArB,EAAAm/B,cAAA99B,EAAA,CAAAk+B,EAAAj+B,cAAAD,GAAAo+B,EAAAn+B,cAAAD,KACArB,EAAAmgC,cAAA9+B,EAAA,CACAi/B,eAAAf,EAAA77B,cAAArC,EAAA,cACAk/B,WAAAhB,EAAA77B,cAAArC,EAAA,UACAm/B,aAAAf,EAAA/7B,cAAArC,EAAA,cACAo/B,SAAAhB,EAAA/7B,cAAArC,EAAA,cAGAP,EAAAD,WAAAb,GAGAs/B,EAAA55B,KAAAtD,kBAAA,SAAAb,EAAAF,GACAE,EAAAsB,SAAA,SAAA69B,GACAA,EAAAC,UAAA1C,MAcAn9B,EAAAoc,QAAA,EACApc,EAAAnB,MAAA2P,OAAA2uB,EAAA7uC,IAAA,WAAAsH,EAAAtH,IAAA,aA2DAc,EAAAlB,QAAAqD,wBCvVA,IAAAtB,EAAcF,EAAQ,MAEtBG,EAAaH,EAAQ,MAErB+vC,EAAqB/vC,EAAQ,MAoB7BgwC,EAAA9vC,EAAAuB,qBAAA,CACAC,KAAA,UACAw/B,WAAA,CACAx/B,KAAA,MACAuuC,YAAA,GAEAC,cAAA,WACAF,EAAAhN,WAAAlgC,KAAA,gBAAA8pB,WACAzsB,EAAAK,KAAAsC,KAAAnC,OAAAg2B,QAAA,SAAAwZ,EAAAC,GACA,IAAAC,EAAAN,EAAAxxC,IAAA6xC,GACAC,GAAAlwC,EAAAqD,MAAA2sC,EAAAE,EAAAzuC,kBAGAA,cAAA,CACAg6B,MAAA,EACA95B,EAAA,EACAD,OAAA,EACAE,OAAA,aACAqe,KAAA,QACAE,IAAA,MAGA6gB,gBAAA,cACAG,YAAA,OACA3zB,aAAA,EACAysB,YAAA,EACAgK,QAAA,EACA1N,SAAA,GACA4Z,QAAA,EACAC,WAAA,EACApW,UAAA,CACAmH,YAAA,OACA1uB,MAAA,QAEAk6B,SAAA,CACA3S,UAAA,CACAmH,YAAA,eAOA9/B,EAAAwuC,EACA3wC,EAAAlB,QAAAqD,wBCpEA,IAAAtB,EAAcF,EAAQ,MAEtBG,EAAaH,EAAQ,MAErBwwC,EAAkBxwC,EAAQ,MAE1B+vC,EAAqB/vC,EAAQ,MAE7B0O,EAAc1O,EAAQ,MAEtBywC,EAAYzwC,EAAQ,MAEpByZ,EAAiBzZ,EAAQ,MAEzB0wC,EAA0B1wC,EAAQ,MAoBlCwB,EAAAtB,EAAAgsB,oBAAA,CACAxqB,KAAA,UACAqG,OAAA,SAAA4oC,EAAA9tC,EAAAmF,EAAAC,GACA,IAAA6G,EAAAhM,KAAAgM,MAGA,GAFAA,EAAAsB,YAEAugC,EAAApyC,IAAA,SAIA,IAAAm4B,GAAAia,EAAApyC,IAAA,YACAqyC,EAAAD,EAAApyC,IAAA,eACAL,EAAA4E,KAAA+tC,YAAA/tC,KAAA+tC,UAAA,IACAC,EAAA,GACA3wC,EAAAK,KAAAowC,EAAA,SAAAxpC,EAAA/I,GACAyyC,EAAAnrC,KAAAtH,KAEA,IAAAob,EAAA3W,KAAAiuC,eAAA,GAAAD,GAAAvgC,IAAAygC,GAAAngC,OAAAmgC,GAAA7/B,OAAAhR,EAAAuZ,MAAAs3B,EAAA,OAAA3/B,UAEAvO,KAAAiuC,cAAAD,EAiIAJ,EAAAzO,OAAAnzB,EAAA6hC,EAAA3oC,GAGA8G,EAAAyB,IAAAmgC,EAAAO,eAAAniC,EAAAqkB,kBAAAwd,IAEA7hC,EAAAoiC,UAAA,SAAAC,GACA,IAAAC,EAAAD,EAAAE,QACA75B,EAAA25B,EAAA35B,WAEA,GAAAA,GAAA45B,EAAA,CACA,IAAA3sB,EAAA+rB,EAAArd,gBAAAie,EAAAZ,EAAAc,SAAA95B,IACApM,EAAA+lC,EAAA96B,SAAA,GAAAvH,EAAAuH,SAAA,GAEAk7B,GAAA,EADAJ,EAAA96B,SAAA,GAAAvH,EAAAuH,SAAA,GAAAqgB,EAGAjS,EAAAnF,OAAAtX,EAAAmd,cACA3N,EAAA9B,aAAA,MACA67B,GAAA,GAGA,IAAAC,EAAAD,GAAA,EAAA9sB,EAAAnF,OAAAoX,EAAA,EAEAtrB,EAAAqZ,EAAApF,MAAA,EAAArX,EAAAkd,YACA1N,EAAA9B,aAAA,QAAA87B,GACAh6B,EAAA7B,UAAA,SACSvK,EAAAqZ,EAAApF,MAAA,MACT7H,EAAA9B,aAAA,GAAA87B,GACAh6B,EAAA7B,UAAA,WA1JA,SAAAq7B,EAAAjtB,EAAAD,GACA,IAIA6S,EAJAyZ,EAAAU,EAAA/sB,GACA0tB,EAAAX,EAAAhtB,GACAqsB,EAAAS,EAAAR,GACAsB,EAAA,IAAAjB,EAAAN,EAAAQ,IAAA9tC,SAGA,GAAAutC,IAAAqB,EAAA,CAEA,GA6KA,SAAArB,GACA,WAAAA,EAAAjqC,QAAA,MA9KAwrC,CAAAvB,GACAzZ,EAAA,CACAjuB,MAAAgpC,EACA/M,QAAA+M,EAAA/wC,OAAAgkC,QACAyL,mBAES,CACT,IAAAC,EAAAN,EAAAxxC,IAAA6xC,GAEA,IAAAC,EACA,OAGA1Z,EAAA,IAAA0Z,EAAAqB,EAAA7uC,EAAAmF,GAGA9J,EAAAkyC,GAAAzZ,MACO,CAGP,KAFAA,EAAAz4B,EAAAuzC,IAGA,OAGA9a,EAAAjuB,MAAAgpC,EACA/a,EAAA9zB,UACA8zB,EAAA3uB,MAGAooC,IAAAqB,EAKAC,EAAAnzC,IAAA,UAAAo4B,EAAAib,WAqBA,SAAAF,EAAA/a,EAAAyZ,GACA,IAAAyB,EAAAH,EAAA7tC,SAAA,aACAiuC,EAAAJ,EAAA7tC,SAAA,sBAYAkuC,EAAApb,EAAAqb,SAAArb,EAAAqb,WAAAN,EAAAnzC,IAAA,QACA0zC,EAAAP,EAAAnzC,IAAA,aAEA,oBAAAwzC,EAAA,CACA,IAAAZ,EAAAY,EACA1b,EAAA4b,EAEAA,EAAA,IADAF,EAAA,IAEA3B,GAAAe,EACAc,EAAA7B,GAAA/Z,EAGA,IAAA6b,EAAAR,EAAAQ,UAAA,GACA/xC,EAAAK,KAAAuxC,EAAA,SAAAI,EAAAC,GACA,IAAArL,EAAAr4B,EAAAs4B,WAAAmL,EAAA,GAAiD,CACjDhnC,GAAAurB,EAAA,EACArrB,GAAAqrB,EAAA,EACArX,MAAAqX,EACApX,OAAAoX,IAEAqQ,EAAArvB,SAAAm6B,EAAA1K,gBACAJ,EAAAvvB,WAAAs6B,EAAA3K,eACAz4B,EAAAyK,cAAA4tB,GAEA4J,EAAApyC,IAAA,eACAwoC,EAAAsK,QAAAY,EAAAG,GACArL,EAAAv8B,GAAA,uBAEA,IAAAgN,EAAAs6B,EAAA3K,eACAJ,EAAArvB,SAAA,CACAiB,KAAAs5B,EAAAG,GACA18B,aAAA8B,EAAA9B,cAAA,SACAmD,SAAArB,EAAAF,MAAAE,EAAAD,QAAA,OACA5B,UAAA6B,EAAA7B,WAAA,aAEWnL,GAAA,sBACXu8B,EAAArvB,SAAA,CACAmB,SAAA,UAKAkuB,EAAA76B,QAAAwlC,EAAAnzC,IAAA,cAAA6zC,IAAA,UACAtjC,EAAAyB,IAAAw2B,GACAA,EAAAv8B,GAAA,QAAArK,EAAAiJ,KAAAutB,EAAAgO,QAAAhO,EAAA9zB,EAAAmF,EAAAoqC,IACAF,EAAAE,GAAArL,IA3EAsL,CAAAX,EAAA/a,EAAAyZ,GAEAsB,EAAAY,cAAA,SAAAF,EAAAG,GACA,IAAA5xC,EAAAmC,KAAAnC,OACAuxC,EAAApvC,KAAAovC,UACAvxC,EAAA6xC,WAAA7xC,EAAA6xC,YAAA,GACA7xC,EAAA6xC,WAAAJ,GAAAG,EAEAL,EAAAE,IAAAF,EAAAE,GAAAlmC,QAAAqmC,IAGA5b,EAAA5uB,QACA4uB,EAAA5uB,OAAA2pC,EAAA7uC,EAAAmF,EAAAC,IAhBA0uB,EAAAxlB,QAAAwlB,EAAAxlB,OAAAtO,EAAAmF,GALA2uB,EAAAjsB,SAAAisB,EAAAjsB,QAAA7H,EAAAmF,KAwHAyqC,WAAA,SAAA9B,EAAA9tC,EAAAmF,EAAAC,GACA9H,EAAAK,KAAAsC,KAAA+tC,UAAA,SAAAla,GACAA,EAAA8b,YAAA9b,EAAA8b,WAAA9b,EAAAjuB,MAAA7F,EAAAmF,EAAAC,MAQAkJ,OAAA,SAAAtO,EAAAmF,GACA7H,EAAAK,KAAAsC,KAAA+tC,UAAA,SAAAla,GACAA,EAAAxlB,QAAAwlB,EAAAxlB,OAAAtO,EAAAmF,KAEAlF,KAAAgM,MAAAsB,aAEA1F,QAAA,SAAA7H,EAAAmF,GACA7H,EAAAK,KAAAsC,KAAA+tC,UAAA,SAAAla,GACAA,EAAAjsB,SAAAisB,EAAAjsB,QAAA7H,EAAAmF,QASA3I,EAAAlB,QAAAqD,wBCjPA,IAAApB,EAAUJ,EAAQ,MAElB0yC,EAAW1yC,EAAQ,MAEnB+vC,EAAqB/vC,EAAQ,MAoB7B2yC,EAAAD,EAAAE,QAAAC,YAEA,SAAAC,EAAApqC,GACA5F,KAAA4F,QAGAoqC,EAAAlxC,cAAA,CACAg6B,MAAA,EACAuV,KAAA,mFACA9a,MAAAsc,EAAAtc,MACA30B,KAAA,MAGArD,KAAA,GACA00C,kBAAA,YACAC,WAAA,EACAN,KAAAC,EAAAD,KAAA5yC,SAEAgzC,EAAA7jC,UAAA2iC,UAAAxxC,EAAAsD,gBACAovC,EAAA7jC,UAEA01B,QAAA,SAAA9hC,EAAAmF,GACA,IAAAU,EAAA5F,KAAA4F,MACA2tB,EAAA3tB,EAAAnK,IAAA,SAAAsE,EAAAtE,IAAA,2BACA00C,EAAAC,SAAAnlC,cAAA,KACArM,EAAAgH,EAAAnK,IAAA,kBACA00C,EAAAE,SAAA9c,EAAA,IAAA30B,EACAuxC,EAAAhoC,OAAA,SACA,IAAAmoC,EAAAprC,EAAAqrC,oBAAA,CACA3xC,OACAy/B,gBAAAz4B,EAAAnK,IAAA,uBAAAsE,EAAAtE,IAAA,2BACAw0C,kBAAArqC,EAAAnK,IAAA,qBACAy0C,WAAAtqC,EAAAnK,IAAA,gBAIA,GAFA00C,EAAAK,KAAAF,EAEA,mBAAAG,YAAAnzC,EAAAozC,QAAAC,IAAArzC,EAAAozC,QAAAE,KASA,GAAAC,OAAAC,UAAAC,iBAAA,CAKA,IAJA,IAAAC,EAAAC,KAAAX,EAAArzB,MAAA,SACA1S,EAAAymC,EAAA5uC,OACA8uC,EAAA,IAAAC,WAAA5mC,GAEAA,KACA2mC,EAAA3mC,GAAAymC,EAAAI,WAAA7mC,GAGA,IAAA8mC,EAAA,IAAAC,KAAA,CAAAJ,IACAL,OAAAC,UAAAC,iBAAAM,EAAA9d,EAAA,IAAA30B,OACO,CACP,IAAAgxC,EAAAhqC,EAAAnK,IAAA,QACAgqB,EAAA,qCAA+C6qB,EAAA,qCAAoDV,KAAA,sBACnGiB,OAAAU,OACAnB,SAAAoB,MAAA/rB,OAxBA,CACA,IAAAkQ,EAAA,IAAA8a,WAAA,SACAgB,KAAAZ,OACAa,SAAA,EACAC,YAAA,IAEAxB,EAAAyB,cAAAjc,KAuBAsX,EAAA3xC,SAAA,cAAA00C,GACA,IAAAtxC,EAAAsxC,EACAzzC,EAAAlB,QAAAqD,wBC3FA,IAAAtB,EAAcF,EAAQ,MAEtBG,EAAaH,EAAQ,MAErB0yC,EAAW1yC,EAAQ,MAEnB+vC,EAAqB/vC,EAAQ,MAoB7B20C,EAAAjC,EAAAE,QAAAgC,UAEA,SAAAC,EAAAnsC,GACA5F,KAAA4F,QAGAmsC,EAAAjzC,cAAA,CACAg6B,MAAA,EACAl6B,KAAA,GAEAyvC,KAAA,CACAt8B,KAAA,+DACAigC,IAAA,kFACAC,MAAA,mYAEAC,MAAA,sGAGA3e,MAAAl2B,EAAAiK,MAAAuqC,EAAAte,OACA11B,OAAA,GACAunB,YAAA,IAEA,IAAA2H,EAAAglB,EAAA5lC,UAEA4gB,EAAAmiB,SAAA,WACA,IAAAtpC,EAAA5F,KAAA4F,MACAusC,EAAAvsC,EAAAnK,IAAA,QACAwzC,EAAA,GAMA,OALA5xC,EAAAK,KAAAkI,EAAAnK,IAAA,iBAAAmD,GACAuzC,EAAAvzC,KACAqwC,EAAArwC,GAAAuzC,EAAAvzC,MAGAqwC,GAGA,IAAAmD,EAAA,CACArgC,KAAA,SAAAsgC,EAAArG,EAAAjpC,EAAA6C,GACA,WAAAysC,EACA,OAAAh1C,EAAAqD,MAAA,CACA0C,GAAA4oC,EACAptC,KAAA,OAEAogB,KAAAjc,EAAAtH,IAAA,QACAw2C,MAAAlvC,EAAAtH,IAAA,SACA62C,UAAAvvC,EAAAtH,IAAA,aACA82B,SAAAxvB,EAAAtH,IAAA,aACOmK,EAAAnK,IAAA,oBAAgC,IAGvCu2C,IAAA,SAAAK,EAAArG,EAAAjpC,EAAA6C,GACA,YAAAysC,EACA,OAAAh1C,EAAAqD,MAAA,CACA0C,GAAA4oC,EACAptC,KAAA,MAEAogB,KAAAjc,EAAAtH,IAAA,QACAw2C,MAAAlvC,EAAAtH,IAAA,SACA62C,UAAAvvC,EAAAtH,IAAA,aACA82B,SAAAxvB,EAAAtH,IAAA,aACOmK,EAAAnK,IAAA,mBAA+B,IAGtCw2C,MAAA,SAAAI,EAAArG,EAAAjpC,EAAA6C,GACA,YAAAysC,GAAA,QAAAA,EACA,OAAAh1C,EAAAqD,MAAA,CACA0C,GAAA4oC,EACAiG,MAAA,0BACOrsC,EAAAnK,IAAA,qBAAiC,IAGxCy2C,MAAA,SAAAG,EAAArG,EAAAjpC,EAAA6C,GACA,YAAAysC,GAAA,QAAAA,EACA,OAAAh1C,EAAAqD,MAAA,CACA0C,GAAA4oC,EACAiG,MAAA,IACOrsC,EAAAnK,IAAA,qBAAiC,KAIxC82C,EAAA,mCAEAxlB,EAAA8U,QAAA,SAAA9hC,EAAAmF,EAAAtG,GACA,IAAAgH,EAAA5F,KAAA4F,MACAwf,EAAAxf,EAAAnK,IAAA,eAAAmD,GAEA,GAAAwzC,EAAAxzC,GAAA,CAIA,IAAA6B,EAAA,CACAuhC,OAAA,IAwCA3kC,EAAAK,KAAA60C,EAAA,SAAAC,GACAn1C,EAAAgG,QAAAmvC,EAAA5zC,IAAA,GACAvB,EAAAK,KAAA80C,EAAA,SAAA7sC,GACAC,EAAA4pC,cAAA7pC,EAAA,cAIAC,EAAA4pC,cAAA5wC,EAAA,YACAmB,EAAA0xB,cAAA,CACAtuB,SAAA,SACAivB,MAAA,MAAAhN,EAAA,MACAA,gBAhDA,SAAAriB,GACA,IAAAsvC,EAAAtvC,EAAA6vB,QACAoZ,EAAAjpC,EAAAK,GACAqvC,EAAAL,EAAAxzC,GAAAyzC,EAAArG,EAAAjpC,EAAA6C,GAEA6sC,IAEAp1C,EAAAgK,SAAAorC,EAAA1vC,EAAAlF,QACA4C,EAAAuhC,OAAAn/B,KAAA4vC,IAIA,IAAA/mC,EAAA3I,EAAA4I,iBAEA,GAAAD,GAAA,gBAAAA,EAAA9M,OAAA,SAAAA,GAAA,QAAAA,GAAA,CACA,IAAA8zC,EAAAhnC,EAAAinC,eAAA,cAEA,GAAAD,EAAA,CACA,IACAnvC,EADAmvC,EAAApvC,IACA,OAMAjC,EALAtB,EAAAmD,gBAAA,CACAC,SAAAI,EACAhF,MAAAwE,EAAAtH,IAAAF,KAAA,SACA6H,GAAAL,EAAAtH,IAAAF,KAAA,QACS,GACTiH,eACA/B,EAAA8C,GAAA9C,EAAA8C,IAAA,GAEA,QAAAZ,EAAA,EAAuBA,GAAAtB,EAAgBsB,IACvClC,EAAA8C,GAAAlC,GAAAZ,EAAA8C,GAAAlC,IAAA,GAGAZ,EAAA8C,GAAAlC,GAAAuxC,YAAA,QAAAh0C,MAmBAsG,EAAAqwB,eAAA,CACA32B,KAAA,kBACAi0C,YAAAj0C,EACA6B,gBAIArD,EAAA+tB,eAAA,CACAvsB,KAAA,kBACAuK,MAAA,mBACA4E,OAAA,oBACC,SAAA5I,EAAApF,GACDA,EAAAS,YAAA2E,EAAA1E,aAEAwsC,EAAA3xC,SAAA,YAAAy2C,GACA,IAAArzC,EAAAqzC,EACAx1C,EAAAlB,QAAAqD,wBC3LA,IAAAtB,EAAcF,EAAQ,MAEtBG,EAAaH,EAAQ,MAErB6I,EAAgB7I,EAAQ,MAExB0yC,EAAW1yC,EAAQ,MAEnB+vC,EAAqB/vC,EAAQ,MAoB7B41C,EAAAlD,EAAAE,QAAAiD,SACAC,EAAA,IAAA7tB,MAAA,IAAAhI,KAAA,KACA81B,EAAA,KAiGA,SAAAC,EAAAlR,GACA,OAAA3kC,EAAAwZ,IAAAmrB,EAAA,SAAAA,GACA,IAAAhjB,EAAAgjB,EAAAC,aACAkR,EAAA,CAAAnR,EAAAzmC,MACA63C,EAAA,GAYA,OAXAp0B,EAAAthB,KAAAshB,EAAAsI,WAAA,WAKA,IAJA,IAAA+rB,EAAAvpB,UAAA1nB,OACAkjB,EAAAwE,UAAAupB,EAAA,GACA93C,EAAAyjB,EAAA1J,QAAAgQ,GAEA3iB,EAAA,EAAqBA,EAAA0wC,EAAA,EAAgB1wC,IACrCywC,EAAAzwC,GAAAmnB,UAAAnnB,GAGAwwC,EAAAtwC,MAAAtH,IAAA03C,EAAA,IAAAG,EAAAj2B,KAAA81B,MAEAE,EAAAh2B,KAAA,QACGA,KAAA,OAAA61B,EAAA,QAmBH,SAAAM,EAAAC,GACA,OAAAA,EAAA1N,QAAA,aAAAA,QAAA,aAgBA,IAAA2N,EAAA,IAAAC,OAAA,IAAAR,EAAA,UAqFA,SAAAS,EAAAH,EAAAI,GACA,IAAAC,EAAAL,EAAAt2B,MAAA,IAAAw2B,OAAA,MAAAT,EAAA,YACAvyC,EAAA,CACAuhC,OAAA,IAoBA,OAlBA3kC,EAAAK,KAAAk2C,EAAA,SAAAC,EAAAnmC,GACA,GApGA,SAAAmmC,GAIA,GAFAA,EAAA72C,MAAA,EAAA62C,EAAAxwC,QAAA,OAEAA,QAAA4vC,IAAA,EACA,SA+FAa,CAAAD,GAAA,CACA,IAAArwB,EAtFA,SAAAuwB,GAWA,IAVA,IAAAC,EAAAD,EAAA92B,MAAA,QACAg3B,EAAAX,EAAAU,EAAAE,SAAAj3B,MAAAu2B,GACAW,EAAA,GACAnS,EAAA3kC,EAAAwZ,IAAAo9B,EAAA,SAAAG,GACA,OACA74C,KAAA64C,EACAp1B,KAAA,MAIArc,EAAA,EAAiBA,EAAAqxC,EAAA5xC,OAAqBO,IAAA,CACtC,IAAA0xC,EAAAf,EAAAU,EAAArxC,IAAAsa,MAAAu2B,GACAW,EAAAtxC,KAAAwxC,EAAAH,SAEA,QAAAnxB,EAAA,EAAmBA,EAAAsxB,EAAAjyC,OAAkB2gB,IACrCif,EAAAjf,KAAAif,EAAAjf,GAAA/D,KAAArc,GAAA0xC,EAAAtxB,IAIA,OACAif,SACAmS,cAgEAG,CAAAT,GACAU,EAAAZ,EAAAjmC,GACA8mC,EAAAD,EAAAvY,QAAA,OAEAuY,IACA9zC,EAAA+zC,GAAA/zC,EAAA+zC,IAAA,GACA/zC,EAAA+zC,GAAAD,EAAAlzC,WAAA,CACA2d,KAAAwE,EAAA2wB,YAEA1zC,EAAAuhC,OAAAvhC,EAAAuhC,OAAAxX,OAAAhH,EAAAwe,aAEK,CACLxe,EAlEA,SAAA+vB,GAKA,IAJA,IAAAJ,EAAAI,EAAAt2B,MAAA,QACAwb,EAAA6a,EAAAH,EAAAe,SACAl1B,EAAA,GAEArc,EAAA,EAAiBA,EAAAwwC,EAAA/wC,OAAkBO,IAAA,CACnC,IAEAxG,EAFAk4C,EAAAf,EAAAH,EAAAxwC,IAAAsa,MAAAu2B,GACAj4C,EAAA,GAEAk5C,GAAA,EAEA3nC,MAAAunC,EAAA,KAEAI,GAAA,EACAl5C,EAAA84C,EAAA,GACAA,IAAAr3C,MAAA,GACAgiB,EAAArc,GAAA,CACApH,OACAY,MAAA,IAEAA,EAAA6iB,EAAArc,GAAAxG,OAEAA,EAAA6iB,EAAArc,GAAA,GAGA,QAAAogB,EAAA,EAAmBA,EAAAsxB,EAAAjyC,OAAkB2gB,IACrC5mB,EAAA0G,MAAAwxC,EAAAtxB,IAGA,IAAA5mB,EAAAiG,SACAqyC,EAAAz1B,EAAArc,GAAAxG,QAAA,GAAA6iB,EAAArc,GAAAxG,EAAA,IAIA,OACAZ,KAAAk9B,EACAzZ,QA8BA01B,CAAAb,GACApzC,EAAAuhC,OAAAn/B,KAAA2gB,MAGA/iB,EASA,SAAAk0C,EAAA/uC,GACA5F,KAAA40C,KAAA,KACA50C,KAAA4F,QA8IA,SAAAivC,EAAAC,EAAAC,GACA,OAAA13C,EAAAwZ,IAAAi+B,EAAA,SAAAE,EAAAtnC,GACA,IAAAunC,EAAAF,KAAArnC,GAEA,OAAArQ,EAAA63C,SAAAD,KAAA53C,EAAA6S,QAAA+kC,IACA53C,EAAA63C,SAAAF,KAAA33C,EAAA6S,QAAA8kC,KACAA,IAAA74C,OAIAkB,EAAAgK,SAAA,CACAlL,MAAA64C,GACOC,IAEPD,IAzJAL,EAAA71C,cAAA,CACAg6B,MAAA,EACAqc,UAAA,EACAC,gBAAA,KACAC,gBAAA,KACAhH,KAAA,8GACA9a,MAAAl2B,EAAAiK,MAAAwrC,EAAAvf,OACAqc,KAAAvyC,EAAAiK,MAAAwrC,EAAAlD,MACAvR,gBAAA,OACAiX,UAAA,OACAC,cAAA,OACAC,oBAAA,OACAC,YAAA,UACAC,gBAAA,QAGAf,EAAAxoC,UAAA01B,QAAA,SAAA9hC,EAAAmF,GACA,IAAAywC,EAAAzwC,EAAA0wC,SACAhwC,EAAA5F,KAAA4F,MAEA5F,KAAA40C,MACAe,EAAAE,YAAA71C,KAAA40C,MAGA,IAAAkB,EAAA1F,SAAAnlC,cAAA,OACA6qC,EAAA1iC,MAAA2iC,QAAA,2DACAD,EAAA1iC,MAAAirB,gBAAAz4B,EAAAnK,IAAA,2BAEA,IAAA24C,EAAAhE,SAAAnlC,cAAA,MACA2kC,EAAAhqC,EAAAnK,IAAA,YACA24C,EAAA4B,UAAApG,EAAA,IAAAhqC,EAAAnK,IAAA,SACA24C,EAAAhhC,MAAA2iC,QAAA,qBACA3B,EAAAhhC,MAAAtD,MAAAlK,EAAAnK,IAAA,aACA,IAAAw6C,EAAA7F,SAAAnlC,cAAA,OACAirC,EAAA9F,SAAAnlC,cAAA,YACAgrC,EAAA7iC,MAAA2iC,QAAA,0CACA,IAAAX,EAAAxvC,EAAAnK,IAAA,mBACA45C,EAAAzvC,EAAAnK,IAAA,mBACA+nB,EA3LA,SAAAzjB,GACA,IAnEAiiC,EACAmU,EAkEA3yB,EAlHA,SAAAzjB,GACA,IAAAq2C,EAAA,GACAC,EAAA,GACAC,EAAA,GA8BA,OA7BAv2C,EAAAw2C,cAAA,SAAAxzC,GACA,IAAA2I,EAAA3I,EAAA4I,iBAEA,IAAAD,GAAA,gBAAAA,EAAA9M,MAAA,UAAA8M,EAAA9M,KAuBAy3C,EAAAxzC,KAAAE,OAvBA,CACA,IAAA4kB,EAAAjc,EAAAqc,cAEA,gBAAAJ,EAAA/oB,KAAA,CACA,IAAAkG,EAAA6iB,EAAArkB,IAAA,IAAAqkB,EAAAppB,MAEA63C,EAAAtxC,KACAsxC,EAAAtxC,GAAA,CACA4tC,aAAA/qB,EACAR,UAAAzb,EAAAkc,aAAAD,GACAqa,OAAA,IAEAsU,EAAAzzC,KAAA,CACAm5B,QAAArU,EAAArkB,IACAjC,UAAAsmB,EAAAppB,SAIA63C,EAAAtxC,GAAAk9B,OAAAn/B,KAAAE,QAEAszC,EAAAxzC,KAAAE,MAMA,CACAqzC,4BACAI,MAAAH,EACAC,QA8EAG,CAAA12C,GACA,OACA5D,MAAAkB,EAAA+uC,OAAA,EArEApK,EAqEAxe,EAAA4yB,0BApEAD,EAAA,GACA94C,EAAAK,KAAAskC,EAAA,SAAAh2B,EAAAlH,GACA,IAAA4tC,EAAA1mC,EAAA0mC,aAEAgE,EADA1qC,EAAAmb,UACA7jB,IACA2wC,EAAA,MAAAzpB,OAAAntB,EAAAwZ,IAAA7K,EAAAg2B,OAAA,SAAAA,GACA,OAAAA,EAAAzmC,QAEAo7C,EAAA,CAAAjE,EAAA9sC,MAAAq3B,iBACA5/B,EAAAK,KAAAsO,EAAAg2B,OAAA,SAAAA,GACA2U,EAAA9zC,KAAAm/B,EAAAC,aAAA2U,SAAAF,EAAA,SAAAxuB,GACA,OAAAA,OAMA,IAFA,IAAAirB,EAAA,CAAAc,EAAA92B,KAAA81B,IAEAtwC,EAAA,EAAmBA,EAAAg0C,EAAA,GAAAv0C,OAAuBO,IAAA,CAG1C,IAFA,IAAA0xC,EAAA,GAEAtxB,EAAA,EAAqBA,EAAA4zB,EAAAv0C,OAAoB2gB,IACzCsxB,EAAAxxC,KAAA8zC,EAAA5zB,GAAApgB,IAGAwwC,EAAAtwC,KAAAwxC,EAAAl3B,KAAA81B,IAGAkD,EAAAtzC,KAAAswC,EAAAh2B,KAAA,SAEAg5B,EAAAh5B,KAAA,OAAA61B,EAAA,SAuCAE,EAAA1vB,EAAAgzB,QAAA,SAAAjD,GACA,OAAAA,EAAA1N,QAAA,kBACK1oB,KAAA,OAAA61B,EAAA,QACLsD,KAAA9yB,EAAA8yB,MAqLAO,CAAA92C,GAEA,sBAAAq1C,EAAA,CACA,IAAA0B,EAAA1B,EAAAlwC,EAAA6xC,aAEA,iBAAAD,EACAb,EAAAD,UAAAc,EACKz5C,EAAA25C,MAAAF,IACLb,EAAAgB,YAAAH,QAIAb,EAAAgB,YAAAf,GACAA,EAAAf,SAAAvvC,EAAAnK,IAAA,YACAy6C,EAAA9iC,MAAA2iC,QAAA,kFACAG,EAAA9iC,MAAAtD,MAAAlK,EAAAnK,IAAA,aACAy6C,EAAA9iC,MAAAorB,YAAA54B,EAAAnK,IAAA,uBACAy6C,EAAA9iC,MAAAirB,gBAAAz4B,EAAAnK,IAAA,iBACAy6C,EAAA/5C,MAAAqnB,EAAArnB,MAGA,IAAAw3C,EAAAnwB,EAAA8yB,KACAY,EAAA9G,SAAAnlC,cAAA,OACAisC,EAAA9jC,MAAA2iC,QAAA,6CACA,IAAAoB,EAAA,4GACAC,EAAAhH,SAAAnlC,cAAA,OACAosC,EAAAjH,SAAAnlC,cAAA,OACAksC,GAAA,qBAAmBvxC,EAAAnK,IAAA,eACnB07C,GAAA,UAAmBvxC,EAAAnK,IAAA,mBACnB,IAAA67C,EAAAt3C,KAEA,SAAAu3C,IACA5B,EAAAE,YAAAC,GACAwB,EAAA1C,KAAA,KAGA7uC,EAAAyxC,iBAAAJ,EAAA,QAAAG,GACAxxC,EAAAyxC,iBAAAH,EAAA,mBACA,IAAA52C,EAEA,IAEAA,EADA,mBAAA40C,EACAA,EAAAY,EAAA/wC,EAAA6xC,aAEArD,EAAAwC,EAAA/5C,MAAAw3C,GAEK,MAAA1rC,GAEL,MADAsvC,IACA,IAAA7sB,MAAA,0BAAAziB,GAGAxH,GACAyE,EAAAqwB,eAAA,CACA32B,KAAA,iBACA6B,cAIA82C,MAEAH,EAAApB,UAAApG,EAAA,GACAyH,EAAArB,UAAApG,EAAA,GACAyH,EAAAjkC,MAAA2iC,QAAAoB,EACAC,EAAAhkC,MAAA2iC,QAAAoB,GACAvxC,EAAAnK,IAAA,aAAAy7C,EAAAD,YAAAI,GACAH,EAAAD,YAAAG,GAEArxC,EAAAyxC,iBAAAtB,EAAA,mBAAAjuC,GACA,QAAAA,EAAAwvC,SAAAxvC,EAAAyvC,OAAA,CAEA,IAAAxvB,EAAAloB,KAAA7D,MACAmD,EAAAU,KAAA23C,eACAp4C,EAAAS,KAAA43C,aAEA53C,KAAA7D,MAAA+rB,EAAA2vB,UAAA,EAAAv4C,GAAA2zC,EAAA/qB,EAAA2vB,UAAAt4C,GAEAS,KAAA23C,eAAA33C,KAAA43C,aAAAt4C,EAAA,EAEAyG,EAAAmD,KAAAjB,MAGA6tC,EAAAmB,YAAA7C,GACA0B,EAAAmB,YAAAhB,GACAH,EAAAmB,YAAAC,GACAjB,EAAA7iC,MAAAoJ,OAAAm5B,EAAAmC,aAAA,QACAnC,EAAAsB,YAAAnB,GACA91C,KAAA40C,KAAAkB,GAGAnB,EAAAxoC,UAAAkC,OAAA,SAAAtO,EAAAmF,GACAlF,KAAA40C,MAAA1vC,EAAA0wC,SAAAC,YAAA71C,KAAA40C,OAGAD,EAAAxoC,UAAAvE,QAAA,SAAA7H,EAAAmF,GACAlF,KAAAqO,OAAAtO,EAAAmF,IA0BA+nC,EAAA3xC,SAAA,WAAAq5C,GACAv3C,EAAA+tB,eAAA,CACAvsB,KAAA,iBACAuK,MAAA,kBACA4E,OAAA,oBACC,SAAA5I,EAAApF,GACD,IAAAg4C,EAAA,GACA16C,EAAAK,KAAAyH,EAAA1E,UAAAuhC,OAAA,SAAAgW,GACA,IAAAj1C,EAAAhD,EAAAk4C,gBAAAD,EAAAz8C,MAAA,GAEA,GAAAwH,EAOK,CACL,IAAAgyC,EAAAhyC,EAAAtH,IAAA,QACAs8C,EAAAl1C,KAAA,CACAtH,KAAAy8C,EAAAz8C,KACAyjB,KAAA61B,EAAAmD,EAAAh5B,KAAA+1B,UARAgD,EAAAl1C,KAAAxF,EAAAjB,OAAA,CAEAwC,KAAA,WACOo5C,MASPj4C,EAAAS,YAAAnD,EAAAgK,SAAA,CACA26B,OAAA+V,GACG5yC,EAAA1E,cAEH,IAAA/B,EAAAi2C,EACAp4C,EAAAlB,QAAAqD,wBC1eA,IAAAtB,EAAcF,EAAQ,MAEtBG,EAAaH,EAAQ,MAErBmb,EAAsBnb,EAAQ,MAE9BovB,EAAyBpvB,EAAQ,MAEjC63B,EAAc73B,EAAQ,MAEtBkiC,EAAiBliC,EAAQ,MAEzB0yC,EAAW1yC,EAAQ,MAEnB+vC,EAAqB/vC,EAAQ,MAE7BA,EAAQ,MAqBR,IAAAg7C,EAAAtI,EAAAE,QAAA1c,SACA11B,EAAAL,EAAAK,KAEAy6C,EAAA,4BAEA,SAAAjlB,EAAAttB,EAAA7F,EAAAmF,IAKAlF,KAAAo4C,iBAAA,IAAA//B,EAAAnT,EAAA0jC,UAAAlhC,GAAA,QAAArK,EAAAiJ,KAAAtG,KAAAq4C,SAAAr4C,OAAAogB,QAMApgB,KAAAs4C,cAGAplB,EAAAp0B,cAAA,CACAg6B,MAAA,EAEAuV,KAAA,CACA9kC,KAAA,wDACAiqB,KAAA,6DAGAD,MAAAl2B,EAAAiK,MAAA4wC,EAAA3kB,QAEA,IAAAxG,EAAAmG,EAAA/mB,UAEA4gB,EAAA9nB,OAAA,SAAA2pC,EAAA7uC,EAAAmF,EAAAC,GACAnF,KAAA4F,MAAAgpC,EACA5uC,KAAAD,UACAC,KAAAkF,MAwIA,SAAA0pC,EAAA7uC,EAAA0xC,EAAAtsC,EAAAD,GACA,IAAAqzC,EAAA9G,EAAA6G,cAEAnzC,GAAA,qBAAAA,EAAAvG,OACA25C,EAAA,mBAAApzC,EAAAL,KAAAK,EAAAqwB,sBAGAic,EAAA6G,cAAAC,EACA3J,EAAAY,cAAA,OAAA+I,EAAA,qBACA,IAAAC,EAAA,IAAAlsB,EAAAmsB,EAAA7J,EAAA/wC,QAAAkC,EAAA,CACA+sB,QAAA,WAGA2kB,EAAA2G,iBAAAl4B,UAAAs4B,EAAA/pB,cAAAvpB,EAAA,SAAA4oB,GACA,OAAAA,EAAA+B,gBAAA/B,EAAAgC,cAAA,SAAAhC,EAAA+B,eAAA/B,EAAAgC,cAAA,kBACGhQ,cAAAy4B,GAAA,CACH/+B,UAAA,OACAzB,WAAA,CAEAC,UAAA,EACAxD,KAAA,qBA3JAkkC,CAAA9J,EAAA7uC,EAAAC,KAAAmF,EAAAD,GAmIA,SAAA0pC,EAAA7uC,GACA6uC,EAAAY,cAAA,OAAAza,EAAA9M,MAAAloB,GAAA,uBAnIA44C,CAAA/J,EAAA7uC,IAGAgtB,EAAA8U,QAAA,SAAA9hC,EAAAmF,EAAAtG,GACAg6C,EAAAh6C,GAAAsF,KAAAlE,OAGA+sB,EAAA1e,OAAA,SAAAtO,EAAAmF,GACAlF,KAAAo4C,iBAAAj3B,WAGA4L,EAAAnlB,QAAA,SAAA7H,EAAAmF,GACAlF,KAAAo4C,iBAAAxwC,WAOA,IAAAgxC,EAAA,CACArvC,KAAA,WACA,IAAAsvC,GAAA74C,KAAAs4C,cACAt4C,KAAAkF,IAAAqwB,eAAA,CACA32B,KAAA,mBACAkG,IAAA,iBACA0wB,qBAAAqjB,KAGArlB,KAAA,WACAxzB,KAAAimC,oBAAAlR,EAAAlC,IAAA7yB,KAAAD,YA0FA,SAAA04C,EAAA56C,GACA,IAAAkM,EAAA,GAOA,OALA1M,EAAAK,KAAA,qCAAAnC,GACAwO,EAAAxO,GAAAsC,EAAAtC,GACA,MAAAwO,EAAAxO,KAAAwO,EAAAxO,GAAA,SACA,IAAAwO,EAAAxO,IAAA,SAAAwO,EAAAxO,MAAAwO,EAAAxO,GAAA,MAEAwO,EA3FAgjB,EAAAsrB,SAAA,SAAAp9B,EAAA3W,GACA,GAAAA,EAAA4W,OAAAD,EAAA7Y,OAAA,CAIA,IAAA2wB,EAAA,GACAhzB,EAAAC,KAAAD,QAEAC,KAAAo4C,iBAAA33B,aAAA,IAGA,IAAA6L,EAAAmsB,EAAAz4C,KAAA4F,MAAA/H,QAAAkC,EAAA,CACA+sB,QAAA,WAEAM,kBAAAnS,EAAAlb,EAAA,SAAAstB,EAAAC,EAAA5hB,GACA,mBAAAA,EAAA9M,KAAA,CAIA,IAAA4a,EAAA6T,EAAA7T,UAEA,SAAAA,GACAs/B,EAAA,IAAAptC,EAAA4hB,EAAA,IACAwrB,EAAA,IAAAptC,EAAA4hB,EAAA,KAEAwrB,EAAA,CACAt3B,MAAA,IACAE,MAAA,KACOlI,GAAA9N,EAAA4hB,MAGPyH,EAAAlyB,KAAA9C,EAAAgzB,GAEA/yB,KAAAimC,oBAAAlT,GAEA,SAAA+lB,EAAA32C,EAAAuJ,EAAAuhB,GACA,IAAAzrB,EAAAkK,EAAA0b,QAAAjlB,GACAb,EAAAE,EAAAoE,MACA3H,EAeA,SAAAkE,EAAAb,EAAAvB,GACA,IAAAg5C,EAQA,OAPAh5C,EAAA0xB,cAAA,CACAtuB,SAAA,WACAyvB,QAAA,UACK,SAAAomB,GACLA,EAAA50C,aAAAjC,EAAAb,EAAAkB,kBACAu2C,EAAAC,KAEAD,EAxBAE,CAAA92C,EAAAb,EAAAvB,GAEAu9B,EAAAr/B,EAAAwG,4BAAAnD,GAAA46B,gBAEA,MAAAoB,EAAA59B,cAAA,MAAA49B,EAAA39B,eACAstB,EAAAmS,EAAA,EAAAnS,EAAAjwB,QAAAwE,EAAAsQ,MAAAy2B,YAAA,EAAAjL,EAAA59B,aAAA49B,EAAA39B,eAGA1B,IAAA80B,EAAA90B,EAAAmF,IAAA,CACAuvB,WAAA10B,EAAAmF,GACA5D,WAAAytB,EAAA,GACAxtB,SAAAwtB,EAAA,OAqBAF,EAAAkZ,oBAAA,SAAAlT,GACA,IAAAmW,EAAA,GAEAxrC,EAAAq1B,EAAA,SAAAL,EAAAC,GACAuW,EAAArmC,KAAAxF,EAAAiK,MAAAorB,MAEAwW,EAAA9mC,QAAApC,KAAAkF,IAAAqwB,eAAA,CACA32B,KAAA,WACAwhC,KAAApgC,KAAA2xB,IACAuX,WA4CA+D,EAAA3xC,SAAA,WAAA43B,GAGA91B,EAAAk1B,qBAAA,SAAAz0B,GACA,GAAAA,EAAA,CAIA,IAAAq7C,EAAAr7C,EAAAu1B,WAAAv1B,EAAAu1B,SAAA,IAEA/1B,EAAA6S,QAAAgpC,KACAr7C,EAAAu1B,SAAA8lB,EAAA,CAAAA,IAGA,IAAAC,EAAAt7C,EAAAiyC,QAEA,GAAAqJ,IAEA97C,EAAA6S,QAAAipC,KACAA,IAAA,IAGAA,KAAAtlB,SAAA,CACA,IAAAulB,EAAAD,EAAAtlB,QAAAT,SAGAimB,EAAA,QAAAD,GACAC,EAAA,QAAAD,IAIA,SAAAC,EAAAC,EAAAF,GACA,GAAAA,EAAA,CAKA,IAAAG,EAAAD,EAAA,QACAE,EAAAJ,EAAAG,GAEA,MAAAC,GAAA,OAAAA,GAAAn8C,EAAA6S,QAAAspC,KACAA,GAAA,IAAAA,GAAA,SAAAA,EAAA,IAAAA,IAqBA,SAAAr2C,EAAAqd,GACA,IAAAi5B,EAAA57C,EAAAsF,GAEA9F,EAAA6S,QAAAupC,KACAA,IAAA,CAAAA,GAAA,IAGA/7C,EAAA+7C,EAAAj5B,GAzBAk5B,CAAAJ,EAAA,SAAAK,EAAAt4C,GACA,SAAAm4C,GAAA,OAAAA,IAAA,IAAAn8C,EAAAgG,QAAAm2C,EAAAn4C,GAAA,CAIA,IAAAyjB,EAAA,CACAlmB,KAAA,SACAg7C,cAAA,EAEAx2C,GAAA+0C,EAAAmB,EAAAj4C,GAIAyjB,EAAAy0B,GAAAl4C,EACA63C,EAAAr2C,KAAAiiB,UAcA,IAAApmB,EAAAw0B,EACA32B,EAAAlB,QAAAqD,wBCjTAxB,EAAQ,MAERA,EAAQ,MAERA,EAAQ,MAERA,EAAQ,MAERA,EAAQ,MAERA,EAAQ,MAERA,EAAQ,4BCZR,IAoBAwB,EApBoBxB,EAAQ,MAoB5Bd,OAAA,CACAwC,KAAA,oBAGArC,EAAAlB,QAAAqD,wBCxBA,IAoBAA,EApBmBxB,EAAQ,MAoB3Bd,OAAA,CACAwC,KAAA,oBAGArC,EAAAlB,QAAAqD,wBCxBA,IAAAtB,EAAcF,EAAQ,MAEtB63B,EAAc73B,EAAQ,MAEtB0yC,EAAW1yC,EAAQ,MAEnB+vC,EAAqB/vC,EAAQ,MAoB7B28C,EAAAjK,EAAAE,QAAArc,QAEA,SAAAqmB,EAAAl0C,GACA5F,KAAA4F,QAGAk0C,EAAAh7C,cAAA,CACAg6B,MAAA,EACAuV,KAAA,kLACA9a,MAAAsmB,EAAAtmB,OAEAumB,EAAA3tC,UAEA01B,QAAA,SAAA9hC,EAAAmF,EAAAtG,GACAm2B,EAAA/B,MAAAjzB,GACAmF,EAAAqwB,eAAA,CACA32B,KAAA,UACAwhC,KAAApgC,KAAA2xB,OAIAsb,EAAA3xC,SAAA,UAAAw+C,GACA18C,EAAA+tB,eAAA,CACAvsB,KAAA,UACAuK,MAAA,UACA4E,OAAA,oBACC,SAAA5I,EAAApF,GACDA,EAAAg6C,YAAA,cAEA,IAAAr7C,EAAAo7C,EACAv9C,EAAAlB,QAAAqD","file":"OrganizationEvents~OverviewDashboard.js","sourcesContent":["/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar features = {};\n\nfunction register(name, ctor) {\n  features[name] = ctor;\n}\n\nfunction get(name) {\n  return features[name];\n}\n\nexports.register = register;\nexports.get = get;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Calculate slider move result.\n * Usage:\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n *\n * @param {number} delta Move length.\n * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n *              handleEnds will be modified in this method.\n * @param {Array.<number>} extent handleEnds is restricted by extent.\n *              extent[0] should less or equals than extent[1].\n * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n *              where the input minSpan and maxSpan will not work.\n * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n *              If not set, handle0 and cross handle1. If set as a non-negative\n *              number (including `0`), handles will push each other when reaching\n *              the minSpan.\n * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n * @return {Array.<number>} The input handleEnds.\n */\nfunction _default(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n  // Normalize firstly.\n  handleEnds[0] = restrict(handleEnds[0], extent);\n  handleEnds[1] = restrict(handleEnds[1], extent);\n  delta = delta || 0;\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\n\n  if (minSpan != null) {\n    minSpan = restrict(minSpan, [0, extentSpan]);\n  }\n\n  if (maxSpan != null) {\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n  }\n\n  if (handleIndex === 'all') {\n    minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n    handleIndex = 0;\n  }\n\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\n  handleEnds[handleIndex] += delta; // Restrict in extent.\n\n  var extentMinSpan = minSpan || 0;\n  var realExtent = extent.slice();\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\n    // If minSpan exists, 'cross' is forbinden.\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n  } // Shrink span.\n\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (maxSpan != null && currDistSign.span > maxSpan) {\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n  }\n\n  return handleEnds;\n}\n\nfunction getSpanSign(handleEnds, handleIndex) {\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n  // is at left of handleEnds[1] for non-cross case.\n\n  return {\n    span: Math.abs(dist),\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\n  };\n}\n\nfunction restrict(value, extend) {\n  return Math.min(extend[1], Math.max(extend[0], value));\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar helper = require(\"./helper\");\n\nvar AxisProxy = require(\"./AxisProxy\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * 'percent' or 'value'\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var rawOption = retrieveRaw(option);\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var rawOption = retrieveRaw(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function (rawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(rawOption);\n\n    updateRangeUse(this, rawOption);\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function () {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function () {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function () {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function () {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function (rawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (rawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function () {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function (callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function (dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function (dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   * @param {boolean} [ignoreUpdateRangeUsg=false]\n   */\n  setRawRange: function (opt, ignoreUpdateRangeUsg) {\n    var option = this.option;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // If only one of 'start' and 'startValue' is not null/undefined, the other\n      // should be cleared, which enable clear the option.\n      // If both of them are not set, keep option with the original value, which\n      // enable use only set start but not set end when calling `dispatchAction`.\n      // The same as 'end' and 'endValue'.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        option[names[0]] = opt[names[0]];\n        option[names[1]] = opt[names[1]];\n      }\n    }, this);\n    !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function (axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function () {\n    return this._rangePropMode.slice();\n  }\n});\n\nfunction retrieveRaw(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, rawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = rawOption[names[0]] != null;\n    var valueSpecified = rawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;","var ComponentView = require(\"../../view/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = ComponentView.extend({\n  type: 'dataZoom',\n  render: function (dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  },\n\n  /**\n   * Find the first target coordinate system.\n   *\n   * @protected\n   * @return {Object} {\n   *                   grid: [\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n   *                       ...\n   *                   ],  // cartesians must not be null/undefined.\n   *                   polar: [\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n   *                       ...\n   *                   ],  // polars must not be null/undefined.\n   *                   singleAxis: [\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\n   *                   ]\n   */\n  getTargetCoordInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var ecModel = this.ecModel;\n    var coordSysLists = {};\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n\n      if (axisModel) {\n        var coordModel = axisModel.getCoordSysModel();\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\n      }\n    }, this);\n\n    function save(coordModel, axisModel, store, coordIndex) {\n      var item;\n\n      for (var i = 0; i < store.length; i++) {\n        if (store[i].model === coordModel) {\n          item = store[i];\n          break;\n        }\n      }\n\n      if (!item) {\n        store.push(item = {\n          model: coordModel,\n          axisModels: [],\n          coordIndex: coordIndex\n        });\n      }\n\n      item.axisModels.push(axisModel);\n    }\n\n    return coordSysLists;\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @alias module:echarts/component/helper/RoamController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\nfunction RoamController(zr) {\n  /**\n   * @type {Function}\n   */\n  this.pointerChecker;\n  /**\n   * @type {module:zrender}\n   */\n\n  this._zr = zr;\n  /**\n   * @type {Object}\n   */\n\n  this._opt = {}; // Avoid two roamController bind the same handler\n\n  var bind = zrUtil.bind;\n  var mousedownHandler = bind(mousedown, this);\n  var mousemoveHandler = bind(mousemove, this);\n  var mouseupHandler = bind(mouseup, this);\n  var mousewheelHandler = bind(mousewheel, this);\n  var pinchHandler = bind(pinch, this);\n  Eventful.call(this);\n  /**\n   * @param {Function} pointerChecker\n   *                   input: x, y\n   *                   output: boolean\n   */\n\n  this.setPointerChecker = function (pointerChecker) {\n    this.pointerChecker = pointerChecker;\n  };\n  /**\n   * Notice: only enable needed types. For example, if 'zoom'\n   * is not needed, 'zoom' should not be enabled, otherwise\n   * default mousewheel behaviour (scroll page) will be disabled.\n   *\n   * @param  {boolean|string} [controlType=true] Specify the control type,\n   *                          which can be null/undefined or true/false\n   *                          or 'pan/move' or 'zoom'/'scale'\n   * @param {Object} [opt]\n   * @param {Object} [opt.zoomOnMouseWheel=true]\n   * @param {Object} [opt.moveOnMouseMove=true]\n   * @param {Object} [opt.preventDefaultMouseMove=true] When pan.\n   */\n\n\n  this.enable = function (controlType, opt) {\n    // Disable previous first\n    this.disable();\n    this._opt = zrUtil.defaults(zrUtil.clone(opt) || {}, {\n      zoomOnMouseWheel: true,\n      moveOnMouseMove: true,\n      preventDefaultMouseMove: true\n    });\n\n    if (controlType == null) {\n      controlType = true;\n    }\n\n    if (controlType === true || controlType === 'move' || controlType === 'pan') {\n      zr.on('mousedown', mousedownHandler);\n      zr.on('mousemove', mousemoveHandler);\n      zr.on('mouseup', mouseupHandler);\n    }\n\n    if (controlType === true || controlType === 'scale' || controlType === 'zoom') {\n      zr.on('mousewheel', mousewheelHandler);\n      zr.on('pinch', pinchHandler);\n    }\n  };\n\n  this.disable = function () {\n    zr.off('mousedown', mousedownHandler);\n    zr.off('mousemove', mousemoveHandler);\n    zr.off('mouseup', mouseupHandler);\n    zr.off('mousewheel', mousewheelHandler);\n    zr.off('pinch', pinchHandler);\n  };\n\n  this.dispose = this.disable;\n\n  this.isDragging = function () {\n    return this._dragging;\n  };\n\n  this.isPinching = function () {\n    return this._pinching;\n  };\n}\n\nzrUtil.mixin(RoamController, Eventful);\n\nfunction mousedown(e) {\n  if (eventTool.notLeftMouse(e) || e.target && e.target.draggable) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY; // Only check on mosedown, but not mousemove.\n  // Mouse can be out of target when mouse moving.\n\n  if (this.pointerChecker && this.pointerChecker(e, x, y)) {\n    this._x = x;\n    this._y = y;\n    this._dragging = true;\n  }\n}\n\nfunction mousemove(e) {\n  if (eventTool.notLeftMouse(e) || !checkKeyBinding(this, 'moveOnMouseMove', e) || !this._dragging || e.gestureEvent === 'pinch' || interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY;\n  var oldX = this._x;\n  var oldY = this._y;\n  var dx = x - oldX;\n  var dy = y - oldY;\n  this._x = x;\n  this._y = y;\n  this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\n  this.trigger('pan', dx, dy, oldX, oldY, x, y);\n}\n\nfunction mouseup(e) {\n  if (!eventTool.notLeftMouse(e)) {\n    this._dragging = false;\n  }\n}\n\nfunction mousewheel(e) {\n  // wheelDelta maybe -0 in chrome mac.\n  if (!checkKeyBinding(this, 'zoomOnMouseWheel', e) || e.wheelDelta === 0) {\n    return;\n  } // Convenience:\n  // Mac and VM Windows on Mac: scroll up: zoom out.\n  // Windows: scroll up: zoom in.\n\n\n  var zoomDelta = e.wheelDelta > 0 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.offsetX, e.offsetY);\n}\n\nfunction pinch(e) {\n  if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var zoomDelta = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.pinchX, e.pinchY);\n}\n\nfunction zoom(e, zoomDelta, zoomX, zoomY) {\n  if (this.pointerChecker && this.pointerChecker(e, zoomX, zoomY)) {\n    // When mouse is out of roamController rect,\n    // default befavoius should not be be disabled, otherwise\n    // page sliding is disabled, contrary to expectation.\n    eventTool.stop(e.event);\n    this.trigger('zoom', zoomDelta, zoomX, zoomY);\n  }\n}\n\nfunction checkKeyBinding(roamController, prop, e) {\n  var setting = roamController._opt[prop];\n  return setting && (!zrUtil.isString(setting) || e.event[setting + 'Key']);\n}\n\nvar _default = RoamController;\nmodule.exports = _default;","import React from 'react';\nimport styled from 'react-emotion';\n\nconst LoadingMask = styled('div')`\n  background-color: ${p => p.theme.offWhite};\n  border-radius: ${p => p.theme.borderRadius};\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\n\nconst LoadingPanel = styled(props => (\n  <div {...props}>\n    <LoadingMask />\n  </div>\n))`\n  flex: 1;\n  flex-shrink: 0;\n  overflow: hidden;\n  height: 200px;\n  position: relative;\n  border-color: transparent;\n  margin-bottom: 0;\n`;\n\nexport default LoadingPanel;\nexport {LoadingMask};\n","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;","var graphic = require(\"../../util/graphic\");\n\nvar LineGroup = require(\"./Line\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/LineDraw\n */\n// import IncrementalDisplayable from 'zrender/src/graphic/IncrementalDisplayable';\n\n/**\n * @alias module:echarts/component/marker/LineDraw\n * @constructor\n */\nfunction LineDraw(ctor) {\n  this._ctor = ctor || LineGroup;\n  this.group = new graphic.Group();\n}\n\nvar lineDrawProto = LineDraw.prototype;\n\nlineDrawProto.isPersistent = function () {\n  return true;\n};\n/**\n * @param {module:echarts/data/List} lineData\n */\n\n\nlineDrawProto.updateData = function (lineData) {\n  var lineDraw = this;\n  var group = lineDraw.group;\n  var oldLineData = lineDraw._lineData;\n  lineDraw._lineData = lineData; // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldLineData) {\n    group.removeAll();\n  }\n\n  var seriesScope = makeSeriesScope(lineData);\n  lineData.diff(oldLineData).add(function (idx) {\n    doAdd(lineDraw, lineData, idx, seriesScope);\n  }).update(function (newIdx, oldIdx) {\n    doUpdate(lineDraw, oldLineData, lineData, oldIdx, newIdx, seriesScope);\n  }).remove(function (idx) {\n    group.remove(oldLineData.getItemGraphicEl(idx));\n  }).execute();\n};\n\nfunction doAdd(lineDraw, lineData, idx, seriesScope) {\n  var itemLayout = lineData.getItemLayout(idx);\n\n  if (!lineNeedsDraw(itemLayout)) {\n    return;\n  }\n\n  var el = new lineDraw._ctor(lineData, idx, seriesScope);\n  lineData.setItemGraphicEl(idx, el);\n  lineDraw.group.add(el);\n}\n\nfunction doUpdate(lineDraw, oldLineData, newLineData, oldIdx, newIdx, seriesScope) {\n  var itemEl = oldLineData.getItemGraphicEl(oldIdx);\n\n  if (!lineNeedsDraw(newLineData.getItemLayout(newIdx))) {\n    lineDraw.group.remove(itemEl);\n    return;\n  }\n\n  if (!itemEl) {\n    itemEl = new lineDraw._ctor(newLineData, newIdx, seriesScope);\n  } else {\n    itemEl.updateData(newLineData, newIdx, seriesScope);\n  }\n\n  newLineData.setItemGraphicEl(newIdx, itemEl);\n  lineDraw.group.add(itemEl);\n}\n\nlineDrawProto.updateLayout = function () {\n  var lineData = this._lineData; // Do not support update layout in incremental mode.\n\n  if (!lineData) {\n    return;\n  }\n\n  lineData.eachItemGraphicEl(function (el, idx) {\n    el.updateLayout(lineData, idx);\n  }, this);\n};\n\nlineDrawProto.incrementalPrepareUpdate = function (lineData) {\n  this._seriesScope = makeSeriesScope(lineData);\n  this._lineData = null;\n  this.group.removeAll();\n};\n\nlineDrawProto.incrementalUpdate = function (taskParams, lineData) {\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var itemLayout = lineData.getItemLayout(idx);\n\n    if (lineNeedsDraw(itemLayout)) {\n      var el = new this._ctor(lineData, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      this.group.add(el);\n      lineData.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction makeSeriesScope(lineData) {\n  var hostModel = lineData.hostModel;\n  return {\n    lineStyle: hostModel.getModel('lineStyle').getLineStyle(),\n    hoverLineStyle: hostModel.getModel('emphasis.lineStyle').getLineStyle(),\n    labelModel: hostModel.getModel('label'),\n    hoverLabelModel: hostModel.getModel('emphasis.label')\n  };\n}\n\nlineDrawProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlineDrawProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nfunction isPointNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]);\n}\n\nfunction lineNeedsDraw(pts) {\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n}\n\nvar _default = LineDraw;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\nvar LinePath = require(\"./LinePath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Line\n */\nvar SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\n\nfunction makeSymbolTypeKey(symbolCategory) {\n  return '_' + symbolCategory + 'Type';\n}\n/**\n * @inner\n */\n\n\nfunction createSymbol(name, lineData, idx) {\n  var color = lineData.getItemVisual(idx, 'color');\n  var symbolType = lineData.getItemVisual(idx, name);\n  var symbolSize = lineData.getItemVisual(idx, name + 'Size');\n\n  if (!symbolType || symbolType === 'none') {\n    return;\n  }\n\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [symbolSize, symbolSize];\n  }\n\n  var symbolPath = symbolUtil.createSymbol(symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2, symbolSize[0], symbolSize[1], color);\n  symbolPath.name = name;\n  return symbolPath;\n}\n\nfunction createLine(points) {\n  var line = new LinePath({\n    name: 'line'\n  });\n  setLinePoints(line.shape, points);\n  return line;\n}\n\nfunction setLinePoints(targetShape, points) {\n  var p1 = points[0];\n  var p2 = points[1];\n  var cp1 = points[2];\n  targetShape.x1 = p1[0];\n  targetShape.y1 = p1[1];\n  targetShape.x2 = p2[0];\n  targetShape.y2 = p2[1];\n  targetShape.percent = 1;\n\n  if (cp1) {\n    targetShape.cpx1 = cp1[0];\n    targetShape.cpy1 = cp1[1];\n  } else {\n    targetShape.cpx1 = NaN;\n    targetShape.cpy1 = NaN;\n  }\n}\n\nfunction updateSymbolAndLabelBeforeLineUpdate() {\n  var lineGroup = this;\n  var symbolFrom = lineGroup.childOfName('fromSymbol');\n  var symbolTo = lineGroup.childOfName('toSymbol');\n  var label = lineGroup.childOfName('label'); // Quick reject\n\n  if (!symbolFrom && !symbolTo && label.ignore) {\n    return;\n  }\n\n  var invScale = 1;\n  var parentNode = this.parent;\n\n  while (parentNode) {\n    if (parentNode.scale) {\n      invScale /= parentNode.scale[0];\n    }\n\n    parentNode = parentNode.parent;\n  }\n\n  var line = lineGroup.childOfName('line'); // If line not changed\n  // FIXME Parent scale changed\n\n  if (!this.__dirty && !line.__dirty) {\n    return;\n  }\n\n  var percent = line.shape.percent;\n  var fromPos = line.pointAt(0);\n  var toPos = line.pointAt(percent);\n  var d = vector.sub([], toPos, fromPos);\n  vector.normalize(d, d);\n\n  if (symbolFrom) {\n    symbolFrom.attr('position', fromPos);\n    var tangent = line.tangentAt(0);\n    symbolFrom.attr('rotation', Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolFrom.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (symbolTo) {\n    symbolTo.attr('position', toPos);\n    var tangent = line.tangentAt(1);\n    symbolTo.attr('rotation', -Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolTo.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (!label.ignore) {\n    label.attr('position', toPos);\n    var textPosition;\n    var textAlign;\n    var textVerticalAlign;\n    var distance = 5 * invScale; // End\n\n    if (label.__position === 'end') {\n      textPosition = [d[0] * distance + toPos[0], d[1] * distance + toPos[1]];\n      textAlign = d[0] > 0.8 ? 'left' : d[0] < -0.8 ? 'right' : 'center';\n      textVerticalAlign = d[1] > 0.8 ? 'top' : d[1] < -0.8 ? 'bottom' : 'middle';\n    } // Middle\n    else if (label.__position === 'middle') {\n        var halfPercent = percent / 2;\n        var tangent = line.tangentAt(halfPercent);\n        var n = [tangent[1], -tangent[0]];\n        var cp = line.pointAt(halfPercent);\n\n        if (n[1] > 0) {\n          n[0] = -n[0];\n          n[1] = -n[1];\n        }\n\n        textPosition = [cp[0] + n[0] * distance, cp[1] + n[1] * distance];\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        var rotation = -Math.atan2(tangent[1], tangent[0]);\n\n        if (toPos[0] < fromPos[0]) {\n          rotation = Math.PI + rotation;\n        }\n\n        label.attr('rotation', rotation);\n      } // Start\n      else {\n          textPosition = [-d[0] * distance + fromPos[0], -d[1] * distance + fromPos[1]];\n          textAlign = d[0] > 0.8 ? 'right' : d[0] < -0.8 ? 'left' : 'center';\n          textVerticalAlign = d[1] > 0.8 ? 'bottom' : d[1] < -0.8 ? 'top' : 'middle';\n        }\n\n    label.attr({\n      style: {\n        // Use the user specified text align and baseline first\n        textVerticalAlign: label.__verticalAlign || textVerticalAlign,\n        textAlign: label.__textAlign || textAlign\n      },\n      position: textPosition,\n      scale: [invScale, invScale]\n    });\n  }\n}\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\n\n\nfunction Line(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createLine(lineData, idx, seriesScope);\n}\n\nvar lineProto = Line.prototype; // Update symbol position and rotation\n\nlineProto.beforeUpdate = updateSymbolAndLabelBeforeLineUpdate;\n\nlineProto._createLine = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var linePoints = lineData.getItemLayout(idx);\n  var line = createLine(linePoints);\n  line.shape.percent = 0;\n  graphic.initProps(line, {\n    shape: {\n      percent: 1\n    }\n  }, seriesModel, idx);\n  this.add(line);\n  var label = new graphic.Text({\n    name: 'label'\n  });\n  this.add(label);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = createSymbol(symbolCategory, lineData, idx); // symbols must added after line to make sure\n    // it will be updated after line#update.\n    // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\n\n    this.add(symbol);\n    this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var linePoints = lineData.getItemLayout(idx);\n  var target = {\n    shape: {}\n  };\n  setLinePoints(target.shape, linePoints);\n  graphic.updateProps(line, target, seriesModel, idx);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbolType = lineData.getItemVisual(idx, symbolCategory);\n    var key = makeSymbolTypeKey(symbolCategory); // Symbol changed\n\n    if (this[key] !== symbolType) {\n      this.remove(this.childOfName(symbolCategory));\n      var symbol = createSymbol(symbolCategory, lineData, idx);\n      this.add(symbol);\n    }\n\n    this[key] = symbolType;\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel; // Optimization for large dataset\n\n  if (!seriesScope || lineData.hasItemOption) {\n    var itemModel = lineData.getItemModel(idx);\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n    labelModel = itemModel.getModel('label');\n    hoverLabelModel = itemModel.getModel('emphasis.label');\n  }\n\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var visualOpacity = zrUtil.retrieve3(lineData.getItemVisual(idx, 'opacity'), lineStyle.opacity, 1);\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor,\n    opacity: visualOpacity\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle; // Update symbol\n\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = this.childOfName(symbolCategory);\n\n    if (symbol) {\n      symbol.setColor(visualColor);\n      symbol.setStyle({\n        opacity: visualOpacity\n      });\n    }\n  }, this);\n  var showLabel = labelModel.getShallow('show');\n  var hoverShowLabel = hoverLabelModel.getShallow('show');\n  var label = this.childOfName('label');\n  var defaultLabelColor;\n  var baseText; // FIXME: the logic below probably should be merged to `graphic.setLabelStyle`.\n\n  if (showLabel || hoverShowLabel) {\n    defaultLabelColor = visualColor || '#000';\n    baseText = seriesModel.getFormattedLabel(idx, 'normal', lineData.dataType);\n\n    if (baseText == null) {\n      var rawVal = seriesModel.getRawValue(idx);\n      baseText = rawVal == null ? lineData.getName(idx) : isFinite(rawVal) ? round(rawVal) : rawVal;\n    }\n  }\n\n  var normalText = showLabel ? baseText : null;\n  var emphasisText = hoverShowLabel ? zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'emphasis', lineData.dataType), baseText) : null;\n  var labelStyle = label.style; // Always set `textStyle` even if `normalStyle.text` is null, because default\n  // values have to be set on `normalStyle`.\n\n  if (normalText != null || emphasisText != null) {\n    graphic.setTextStyle(label.style, labelModel, {\n      text: normalText\n    }, {\n      autoColor: defaultLabelColor\n    });\n    label.__textAlign = labelStyle.textAlign;\n    label.__verticalAlign = labelStyle.textVerticalAlign; // 'start', 'middle', 'end'\n\n    label.__position = labelModel.get('position') || 'middle';\n  }\n\n  if (emphasisText != null) {\n    // Only these properties supported in this emphasis style here.\n    label.hoverStyle = {\n      text: emphasisText,\n      textFill: hoverLabelModel.getTextColor(true),\n      // For merging hover style to normal style, do not use\n      // `hoverLabelModel.getFont()` here.\n      fontStyle: hoverLabelModel.getShallow('fontStyle'),\n      fontWeight: hoverLabelModel.getShallow('fontWeight'),\n      fontSize: hoverLabelModel.getShallow('fontSize'),\n      fontFamily: hoverLabelModel.getShallow('fontFamily')\n    };\n  } else {\n    label.hoverStyle = {\n      text: null\n    };\n  }\n\n  label.ignore = !showLabel && !hoverShowLabel;\n  graphic.setHoverStyle(this);\n};\n\nlineProto.highlight = function () {\n  this.trigger('emphasis');\n};\n\nlineProto.downplay = function () {\n  this.trigger('normal');\n};\n\nlineProto.updateLayout = function (lineData, idx) {\n  this.setLinePoints(lineData.getItemLayout(idx));\n};\n\nlineProto.setLinePoints = function (points) {\n  var linePath = this.childOfName('line');\n  setLinePoints(linePath.shape, points);\n  linePath.dirty();\n};\n\nzrUtil.inherits(Line, graphic.Group);\nvar _default = Line;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar map = zrUtil.map;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(0,0,0,0.3)',\n    fill: 'rgba(0,0,0,0.1)'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * @alias module:echarts/component/helper/BrushController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n * @event module:echarts/component/helper/BrushController#brush\n *        params:\n *            areas: Array.<Array>, coord relates to container group,\n *                                    If no container specified, to global.\n *            opt {\n *                isEnd: boolean,\n *                removeOnClick: boolean\n *            }\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\nfunction BrushController(zr) {\n  Eventful.call(this);\n  /**\n   * @type {module:zrender/zrender~ZRender}\n   * @private\n   */\n\n  this._zr = zr;\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = new graphic.Group();\n  /**\n   * Only for drawing (after enabledBrush).\n   *     'line', 'rect', 'polygon' or false\n   *     If passing false/null/undefined, disable brush.\n   *     If passing 'auto', determined by panel.defaultBrushType\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * Only for drawing (after enabledBrush).\n   *\n   * @private\n   * @type {Object}\n   */\n\n  this._brushOption;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._panels;\n  /**\n   * @private\n   * @type {Array.<nubmer>}\n   */\n\n  this._track = [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._dragging;\n  /**\n   * @private\n   * @type {Array}\n   */\n\n  this._covers = [];\n  /**\n   * @private\n   * @type {moudule:zrender/container/Group}\n   */\n\n  this._creatingCover;\n  /**\n   * `true` means global panel\n   * @private\n   * @type {module:zrender/container/Group|boolean}\n   */\n\n  this._creatingPanel;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._enableGlobalPan;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this._uid = 'brushController_' + baseUID++;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._handlers = {};\n  each(mouseHandlers, function (handler, eventName) {\n    this._handlers[eventName] = zrUtil.bind(handler, this);\n  }, this);\n}\n\nBrushController.prototype = {\n  constructor: BrushController,\n\n  /**\n   * If set to null/undefined/false, select disabled.\n   * @param {Object} brushOption\n   * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n   *                          If passing false/null/undefined, disable brush.\n   *                          If passing 'auto', determined by panel.defaultBrushType.\n   *                              ('auto' can not be used in global panel)\n   * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n   * @param {boolean} [brushOption.transformable=true]\n   * @param {boolean} [brushOption.removeOnClick=false]\n   * @param {Object} [brushOption.brushStyle]\n   * @param {number} [brushOption.brushStyle.width]\n   * @param {number} [brushOption.brushStyle.lineWidth]\n   * @param {string} [brushOption.brushStyle.stroke]\n   * @param {string} [brushOption.brushStyle.fill]\n   * @param {number} [brushOption.z]\n   */\n  enableBrush: function (brushOption) {\n    this._brushType && doDisableBrush(this);\n    brushOption.brushType && doEnableBrush(this, brushOption);\n    return this;\n  },\n\n  /**\n   * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n   *        Each items: {\n   *            panelId, // mandatory.\n   *            clipPath, // mandatory. function.\n   *            isTargetByCursor, // mandatory. function.\n   *            defaultBrushType, // optional, only used when brushType is 'auto'.\n   *            getLinearBrushOtherExtent, // optional. function.\n   *        }\n   */\n  setPanels: function (panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels = this._panels = {};\n      zrUtil.each(panelOpts, function (panelOpts) {\n        panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param {Object} [opt]\n   * @return {boolean} [opt.enableGlobalPan=false]\n   */\n  mount: function (opt) {\n    opt = opt || {};\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      position: opt.position || [0, 0],\n      rotation: opt.rotation || 0,\n      scale: opt.scale || [1, 1]\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  },\n  eachCover: function (cb, context) {\n    each(this._covers, cb, context);\n  },\n\n  /**\n   * Update covers.\n   * @param {Array.<Object>} brushOptionList Like:\n   *        [\n   *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n   *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n   *            ...\n   *        ]\n   *        `brushType` is required in each cover info. (can not be 'auto')\n   *        `id` is not mandatory.\n   *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n   *        If brushOptionList is null/undefined, all covers removed.\n   */\n  updateCovers: function (brushOptionList) {\n    brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n      return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushOption = brushOptionList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushOption, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushOption));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  },\n  unmount: function () {\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    return this;\n  },\n  dispose: function () {\n    this.unmount();\n    this.off();\n  }\n};\nzrUtil.mixin(BrushController, Eventful);\n\nfunction doEnableBrush(controller, brushOption) {\n  var zr = controller._zr; // Consider roam, which takes globalPan too.\n\n  if (!controller._enableGlobalPan) {\n    interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  }\n\n  each(controller._handlers, function (handler, eventName) {\n    zr.on(eventName, handler);\n  });\n  controller._brushType = brushOption.brushType;\n  controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n}\n\nfunction doDisableBrush(controller) {\n  var zr = controller._zr;\n  interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  each(controller._handlers, function (handler, eventName) {\n    zr.off(eventName, handler);\n  });\n  controller._brushType = controller._brushOption = null;\n}\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : true;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = zrUtil.clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', areas, {\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\nfunction createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(doDrift, controller, cover, 'nswe'),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNames, function (name) {\n    cover.add(new graphic.Rect({\n      name: name,\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(doDrift, controller, cover, name),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function (name) {\n    var el = cover.childOfName(name);\n    var globalDir = getGlobalDirection(controller, name);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return zrUtil.defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], // x range\n  [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection(controller, localDirection) {\n  if (localDirection.length > 1) {\n    localDirection = localDirection.split('');\n    var globalDir = [getGlobalDirection(controller, localDirection[0]), getGlobalDirection(controller, localDirection[1])];\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n    return globalDir.join('');\n  } else {\n    var map = {\n      w: 'left',\n      e: 'right',\n      n: 'top',\n      s: 'bottom'\n    };\n    var inverseMap = {\n      left: 'w',\n      right: 'e',\n      top: 'n',\n      bottom: 's'\n    };\n    var globalDir = graphic.transformDirection(map[localDirection], getTransform(controller));\n    return inverseMap[globalDir];\n  }\n}\n\nfunction driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n  var brushOption = cover.__brushOption;\n  var rectRange = toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(name.split(''), function (namePart) {\n    var ind = DIRECTION_MAP[namePart];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy, e) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== true ? panel.clipPath(data, controller._transform) : zrUtil.clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  // Check active\n  if (!controller._brushType) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === true || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = zrUtil.clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === true ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar mouseHandlers = {\n  mousedown: function (e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mose out side the browser.\n      handleDragEnd.call(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function (e) {\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: handleDragEnd //,\n  // FIXME\n  // in tooltip, globalout should not be triggered.\n  // globalout: handleDragEnd\n\n};\n\nfunction handleDragEnd(e) {\n  if (this._dragging) {\n    preventDefault(e);\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n    this._dragging = false;\n    this._track = [];\n    this._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(this, eventParams);\n  }\n}\n/**\n * key: brushType\n * @type {Object}\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        return range;\n      }, function (range) {\n        return range;\n      }), controller, brushOption, ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function (controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function (localTrack) {\n      return localTrack;\n    },\n    endCreating: function (controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        var rectRange = [range, [0, 100]];\n        xyIndex && rectRange.reverse();\n        return rectRange;\n      }, function (rectRange) {\n        return rectRange[xyIndex];\n      }), controller, brushOption, [['w', 'e'], ['n', 's']][xyIndex]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== true && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex, controller._transform);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nvar _default = BrushController;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"../../util/format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n\n    };\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n\n    if (!sourceNode) {\n      return result;\n    }\n\n    absorb(sourceNode, result);\n    var existsLink;\n\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n\n    return result;\n  };\n\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\n\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar dataFormatMixin = require(\"../../model/mixin/dataFormat\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar addCommas = formatUtil.addCommas;\nvar encodeHTML = formatUtil.encodeHTML;\n\nfunction fillLabel(opt) {\n  modelUtil.defaultEmphasis(opt, 'label', ['show']);\n}\n\nvar MarkerModel = echarts.extendComponentModel({\n  type: 'marker',\n  dependencies: ['series', 'grid', 'polar', 'geo'],\n\n  /**\n   * @overrite\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.mergeOption(option, ecModel, extraOpt.createdBySelf, true);\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var hostSeries = this.__hostSeries;\n    return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\n  },\n  mergeOption: function (newOpt, ecModel, createdBySelf, isInit) {\n    var MarkerModel = this.constructor;\n    var modelPropName = this.mainType + 'Model';\n\n    if (!createdBySelf) {\n      ecModel.eachSeries(function (seriesModel) {\n        var markerOpt = seriesModel.get(this.mainType, true);\n        var markerModel = seriesModel[modelPropName];\n\n        if (!markerOpt || !markerOpt.data) {\n          seriesModel[modelPropName] = null;\n          return;\n        }\n\n        if (!markerModel) {\n          if (isInit) {\n            // Default label emphasis `position` and `show`\n            fillLabel(markerOpt);\n          }\n\n          zrUtil.each(markerOpt.data, function (item) {\n            // FIXME Overwrite fillLabel method ?\n            if (item instanceof Array) {\n              fillLabel(item[0]);\n              fillLabel(item[1]);\n            } else {\n              fillLabel(item);\n            }\n          });\n          markerModel = new MarkerModel(markerOpt, this, ecModel);\n          zrUtil.extend(markerModel, {\n            mainType: this.mainType,\n            // Use the same series index and name\n            seriesIndex: seriesModel.seriesIndex,\n            name: seriesModel.name,\n            createdBySelf: true\n          });\n          markerModel.__hostSeries = seriesModel;\n        } else {\n          markerModel.mergeOption(markerOpt, ecModel, true);\n        }\n\n        seriesModel[modelPropName] = markerModel;\n      }, this);\n    }\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? zrUtil.map(value, addCommas).join(', ') : addCommas(value);\n    var name = data.getName(dataIndex);\n    var html = encodeHTML(this.name);\n\n    if (value != null || name) {\n      html += '<br />';\n    }\n\n    if (name) {\n      html += encodeHTML(name);\n\n      if (value != null) {\n        html += ' : ';\n      }\n    }\n\n    if (value != null) {\n      html += encodeHTML(formattedValue);\n    }\n\n    return html;\n  },\n  getData: function () {\n    return this._data;\n  },\n  setData: function (data) {\n    this._data = data;\n  }\n});\nzrUtil.mixin(MarkerModel, dataFormatMixin);\nvar _default = MarkerModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar indexOf = zrUtil.indexOf;\n\nfunction hasXOrY(item) {\n  return !(isNaN(parseFloat(item.x)) && isNaN(parseFloat(item.y)));\n}\n\nfunction hasXAndY(item) {\n  return !isNaN(parseFloat(item.x)) && !isNaN(parseFloat(item.y));\n} // Make it simple, do not visit all stacked value to count precision.\n// function getPrecision(data, valueAxisDim, dataIndex) {\n//     var precision = -1;\n//     var stackedDim = data.mapDimension(valueAxisDim);\n//     do {\n//         precision = Math.max(\n//             numberUtil.getPrecision(data.get(stackedDim, dataIndex)),\n//             precision\n//         );\n//         var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n//         if (stackedOnSeries) {\n//             var byValue = data.get(data.getCalculationInfo('stackedByDimension'), dataIndex);\n//             data = stackedOnSeries.getData();\n//             dataIndex = data.indexOf(data.getCalculationInfo('stackedByDimension'), byValue);\n//             stackedDim = data.getCalculationInfo('stackedDimension');\n//         }\n//         else {\n//             data = null;\n//         }\n//     } while (data);\n//     return precision;\n// }\n\n\nfunction markerTypeCalculatorWithExtent(mlType, data, otherDataDim, targetDataDim, otherCoordIndex, targetCoordIndex) {\n  var coordArr = [];\n  var stacked = isDimensionStacked(data, targetDataDim\n  /*, otherDataDim*/\n  );\n  var calcDataDim = stacked ? data.getCalculationInfo('stackResultDimension') : targetDataDim;\n  var value = numCalculate(data, calcDataDim, mlType);\n  var dataIndex = data.indicesOfNearest(calcDataDim, value)[0];\n  coordArr[otherCoordIndex] = data.get(otherDataDim, dataIndex);\n  coordArr[targetCoordIndex] = data.get(targetDataDim, dataIndex); // Make it simple, do not visit all stacked value to count precision.\n\n  var precision = numberUtil.getPrecision(data.get(targetDataDim, dataIndex));\n  precision = Math.min(precision, 20);\n\n  if (precision >= 0) {\n    coordArr[targetCoordIndex] = +coordArr[targetCoordIndex].toFixed(precision);\n  }\n\n  return coordArr;\n}\n\nvar curry = zrUtil.curry; // TODO Specified percent\n\nvar markerTypeCalculator = {\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  min: curry(markerTypeCalculatorWithExtent, 'min'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  max: curry(markerTypeCalculatorWithExtent, 'max'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  average: curry(markerTypeCalculatorWithExtent, 'average')\n};\n/**\n * Transform markPoint data item to format used in List by do the following\n * 1. Calculate statistic like `max`, `min`, `average`\n * 2. Convert `item.xAxis`, `item.yAxis` to `item.coord` array\n * @param  {module:echarts/model/Series} seriesModel\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {Object}\n */\n\nfunction dataTransform(seriesModel, item) {\n  var data = seriesModel.getData();\n  var coordSys = seriesModel.coordinateSystem; // 1. If not specify the position with pixel directly\n  // 2. If `coord` is not a data array. Which uses `xAxis`,\n  // `yAxis` to specify the coord on each dimension\n  // parseFloat first because item.x and item.y can be percent string like '20%'\n\n  if (item && !hasXAndY(item) && !zrUtil.isArray(item.coord) && coordSys) {\n    var dims = coordSys.dimensions;\n    var axisInfo = getAxisInfo(item, data, coordSys, seriesModel); // Clone the option\n    // Transform the properties xAxis, yAxis, radiusAxis, angleAxis, geoCoord to value\n\n    item = zrUtil.clone(item);\n\n    if (item.type && markerTypeCalculator[item.type] && axisInfo.baseAxis && axisInfo.valueAxis) {\n      var otherCoordIndex = indexOf(dims, axisInfo.baseAxis.dim);\n      var targetCoordIndex = indexOf(dims, axisInfo.valueAxis.dim);\n      item.coord = markerTypeCalculator[item.type](data, axisInfo.baseDataDim, axisInfo.valueDataDim, otherCoordIndex, targetCoordIndex); // Force to use the value of calculated value.\n\n      item.value = item.coord[targetCoordIndex];\n    } else {\n      // FIXME Only has one of xAxis and yAxis.\n      var coord = [item.xAxis != null ? item.xAxis : item.radiusAxis, item.yAxis != null ? item.yAxis : item.angleAxis]; // Each coord support max, min, average\n\n      for (var i = 0; i < 2; i++) {\n        if (markerTypeCalculator[coord[i]]) {\n          coord[i] = numCalculate(data, data.mapDimension(dims[i]), coord[i]);\n        }\n      }\n\n      item.coord = coord;\n    }\n  }\n\n  return item;\n}\n\nfunction getAxisInfo(item, data, coordSys, seriesModel) {\n  var ret = {};\n\n  if (item.valueIndex != null || item.valueDim != null) {\n    ret.valueDataDim = item.valueIndex != null ? data.getDimension(item.valueIndex) : item.valueDim;\n    ret.valueAxis = coordSys.getAxis(dataDimToCoordDim(seriesModel, ret.valueDataDim));\n    ret.baseAxis = coordSys.getOtherAxis(ret.valueAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n  } else {\n    ret.baseAxis = seriesModel.getBaseAxis();\n    ret.valueAxis = coordSys.getOtherAxis(ret.baseAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n    ret.valueDataDim = data.mapDimension(ret.valueAxis.dim);\n  }\n\n  return ret;\n}\n\nfunction dataDimToCoordDim(seriesModel, dataDim) {\n  var data = seriesModel.getData();\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * Filter data which is out of coordinateSystem range\n * [dataFilter description]\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {boolean}\n */\n\n\nfunction dataFilter(coordSys, item) {\n  // Alwalys return true if there is no coordSys\n  return coordSys && coordSys.containData && item.coord && !hasXOrY(item) ? coordSys.containData(item.coord) : true;\n}\n\nfunction dimValueGetter(item, dimName, dataIndex, dimIndex) {\n  // x, y, radius, angle\n  if (dimIndex < 2) {\n    return item.coord && item.coord[dimIndex];\n  }\n\n  return item.value;\n}\n\nfunction numCalculate(data, valueDataDim, type) {\n  if (type === 'average') {\n    var sum = 0;\n    var count = 0;\n    data.each(valueDataDim, function (val, idx) {\n      if (!isNaN(val)) {\n        sum += val;\n        count++;\n      }\n    });\n    return sum / count;\n  } else if (type === 'median') {\n    return data.getMedian(valueDataDim);\n  } else {\n    // max & min\n    return data.getDataExtent(valueDataDim, true)[type === 'max' ? 1 : 0];\n  }\n}\n\nexports.dataTransform = dataTransform;\nexports.getAxisInfo = getAxisInfo;\nexports.dataFilter = dataFilter;\nexports.dimValueGetter = dimValueGetter;\nexports.numCalculate = numCalculate;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'marker',\n  init: function () {\n    /**\n     * Markline grouped by series\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this.markerGroupMap = zrUtil.createHashMap();\n  },\n  render: function (markerModel, ecModel, api) {\n    var markerGroupMap = this.markerGroupMap;\n    markerGroupMap.each(function (item) {\n      item.__keep = false;\n    });\n    var markerModelKey = this.type + 'Model';\n    ecModel.eachSeries(function (seriesModel) {\n      var markerModel = seriesModel[markerModelKey];\n      markerModel && this.renderSeries(seriesModel, markerModel, ecModel, api);\n    }, this);\n    markerGroupMap.each(function (item) {\n      !item.__keep && this.group.remove(item.group);\n    }, this);\n  },\n  renderSeries: function () {}\n});\n\nmodule.exports = _default;","import moment from 'moment';\n\nimport {DEFAULT_STATS_PERIOD} from 'app/constants';\nimport {getUtcDateString} from 'app/utils/dates';\n\n/**\n * Gets the period to query with if we need to double the initial period in order\n * to get data for the previous period\n *\n * @param {Object} dateObj The date object\n * @param {String} dateObj.period Relative period string in format \"<int><unit>\" (e.g. 4d for 4 days)\n * @param {Date} dateObj.start Starting date object\n * @param {Date} dateObj.end Ending date object\n * @param {Object} options Options\n * @param {Boolean} [options.shouldDoublePeriod] Doubles the given period (useful for getting previous period data)\n * @return Object Returns an object with either a period or start/end dates ({statsPeriod: string} or {start: string, end: string})\n */\nexport const getPeriod = ({period, start, end}, {shouldDoublePeriod} = {}) => {\n  if (!period && !start && !end) {\n    period = DEFAULT_STATS_PERIOD;\n  }\n\n  // you can not specify both relative and absolute periods\n  // relative period takes precendence\n  if (period) {\n    if (!shouldDoublePeriod) {\n      return {statsPeriod: period};\n    }\n    const [, periodNumber, periodLength] = period.match(/([0-9]+)([mhdw])/);\n\n    return {statsPeriod: `${parseInt(periodNumber, 10) * 2}${periodLength}`};\n  }\n\n  if (!start || !end) {\n    throw new Error('start and end required');\n  }\n\n  const formattedStart = getUtcDateString(start);\n  const formattedEnd = getUtcDateString(end);\n\n  if (shouldDoublePeriod) {\n    // get duration of end - start and double\n    const diff = moment(end).diff(moment(start));\n\n    const previousPeriodStart = moment(start).subtract(diff);\n\n    // This is not as accurate as having 2 start/end objs\n    return {\n      start: getUtcDateString(previousPeriodStart),\n      end: formattedEnd,\n    };\n  }\n\n  return {\n    start: formattedStart,\n    end: formattedEnd,\n  };\n};\n","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _cursorHelper = require(\"./cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphicUtil = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction makeRectPanelClipPath(rect) {\n  rect = normalizeRect(rect);\n  return function (localPoints, transform) {\n    return graphicUtil.clipPointsByRect(localPoints, rect);\n  };\n}\n\nfunction makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\n  rect = normalizeRect(rect);\n  return function (xyIndex) {\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n    var brushWidth = idx ? rect.width : rect.height;\n    var base = idx ? rect.x : rect.y;\n    return [base, base + (brushWidth || 0)];\n  };\n}\n\nfunction makeRectIsTargetByCursor(rect, api, targetModel) {\n  rect = normalizeRect(rect);\n  return function (e, localCursorPoint, transform) {\n    return rect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\n  };\n} // Consider width/height is negative.\n\n\nfunction normalizeRect(rect) {\n  return BoundingRect.create(rect);\n}\n\nexports.makeRectPanelClipPath = makeRectPanelClipPath;\nexports.makeLinearBrushOtherExtent = makeLinearBrushOtherExtent;\nexports.makeRectIsTargetByCursor = makeRectIsTargetByCursor;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar brushHelper = require(\"./brushHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar indexOf = zrUtil.indexOf;\nvar curry = zrUtil.curry;\nvar COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\n// how to genarialize to more coordinate systems.\n\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\n/**\n * [option in constructor]:\n * {\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n * }\n *\n *\n * [targetInfo]:\n *\n * There can be multiple axes in a single targetInfo. Consider the case\n * of `grid` component, a targetInfo represents a grid which contains one or more\n * cartesian and one or more axes. And consider the case of parallel system,\n * which has multiple axes in a coordinate system.\n * Can be {\n *     panelId: ...,\n *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n *     coordSyses: all cartesians.\n *     gridModel: <grid component>\n *     xAxes: correspond to coordSyses on index\n *     yAxes: correspond to coordSyses on index\n * }\n * or {\n *     panelId: ...,\n *     coordSys: <geo coord sys>\n *     coordSyses: [<geo coord sys>]\n *     geoModel: <geo component>\n * }\n *\n *\n * [panelOpt]:\n *\n * Make from targetInfo. Input to BrushController.\n * {\n *     panelId: ...,\n *     rect: ...\n * }\n *\n *\n * [area]:\n *\n * Generated by BrushController or user input.\n * {\n *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n *     range: pixel range.\n *     coordRange: representitive coord range (the first one of coordRanges).\n *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n * }\n */\n\n/**\n * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} [opt]\n * @param {Array.<string>} [opt.include] include coordinate system types.\n */\n\nfunction BrushTargetManager(option, ecModel, opt) {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  var targetInfoList = this._targetInfoList = [];\n  var info = {};\n  var foundCpts = parseFinder(ecModel, option);\n  each(targetInfoBuilders, function (builder, type) {\n    if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n      builder(foundCpts, targetInfoList, info);\n    }\n  });\n}\n\nvar proto = BrushTargetManager.prototype;\n\nproto.setOutputRanges = function (areas, ecModel) {\n  this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\n\n    if (!area.coordRange) {\n      area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\n      // rebuild range by coordRange accrately, which may bring trouble when\n      // brushing only one item. So we use __rangeOffset to rebuilding range\n      // by coordRange. And this it only used in brush component so it is no\n      // need to be adapted to coordRanges.\n\n      var result = coordConvert[area.brushType](0, coordSys, coordRange);\n      area.__rangeOffset = {\n        offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n        xyMinMax: result.xyMinMax\n      };\n    }\n  });\n};\n\nproto.matchOutputRanges = function (areas, ecModel, cb) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n\n    if (targetInfo && targetInfo !== true) {\n      zrUtil.each(targetInfo.coordSyses, function (coordSys) {\n        var result = coordConvert[area.brushType](1, coordSys, area.range);\n        cb(area, result.values, coordSys, ecModel);\n      });\n    }\n  }, this);\n};\n\nproto.setInputRanges = function (areas, ecModel) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n    area.range = area.range || []; // convert coordRange to global range and set panelId.\n\n    if (targetInfo && targetInfo !== true) {\n      area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\n      // not keep its original value, for the sake of the dataZoom scenario,\n      // where area.coordRange remains unchanged but area.range may be changed.\n      // (2) Only support converting one coordRange to pixel range in brush\n      // component. So do not consider `coordRanges`.\n      // (3) About __rangeOffset, see comment above.\n\n      var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n      var rangeOffset = area.__rangeOffset;\n      area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\n    }\n  }, this);\n};\n\nproto.makePanelOpts = function (api, getDefaultBrushType) {\n  return zrUtil.map(this._targetInfoList, function (targetInfo) {\n    var rect = targetInfo.getPanelRect();\n    return {\n      panelId: targetInfo.panelId,\n      defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n    };\n  });\n};\n\nproto.controlSeries = function (area, seriesModel, ecModel) {\n  // Check whether area is bound in coord, and series do not belong to that coord.\n  // If do not do this check, some brush (like lineX) will controll all axes.\n  var targetInfo = this.findTargetInfo(area, ecModel);\n  return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\n};\n/**\n * If return Object, a coord found.\n * If reutrn true, global found.\n * Otherwise nothing found.\n *\n * @param {Object} area\n * @param {Array} targetInfoList\n * @return {Object|boolean}\n */\n\n\nproto.findTargetInfo = function (area, ecModel) {\n  var targetInfoList = this._targetInfoList;\n  var foundCpts = parseFinder(ecModel, area);\n\n  for (var i = 0; i < targetInfoList.length; i++) {\n    var targetInfo = targetInfoList[i];\n    var areaPanelId = area.panelId;\n\n    if (areaPanelId) {\n      if (targetInfo.panelId === areaPanelId) {\n        return targetInfo;\n      }\n    } else {\n      for (var i = 0; i < targetInfoMatchers.length; i++) {\n        if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n          return targetInfo;\n        }\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction formatMinMax(minMax) {\n  minMax[0] > minMax[1] && minMax.reverse();\n  return minMax;\n}\n\nfunction parseFinder(ecModel, option) {\n  return modelUtil.parseFinder(ecModel, option, {\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\n  });\n}\n\nvar targetInfoBuilders = {\n  grid: function (foundCpts, targetInfoList) {\n    var xAxisModels = foundCpts.xAxisModels;\n    var yAxisModels = foundCpts.yAxisModels;\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\n\n    var gridModelMap = zrUtil.createHashMap();\n    var xAxesHas = {};\n    var yAxesHas = {};\n\n    if (!xAxisModels && !yAxisModels && !gridModels) {\n      return;\n    }\n\n    each(xAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n    });\n    each(yAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      yAxesHas[gridModel.id] = true;\n    });\n    each(gridModels, function (gridModel) {\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n      yAxesHas[gridModel.id] = true;\n    });\n    gridModelMap.each(function (gridModel) {\n      var grid = gridModel.coordinateSystem;\n      var cartesians = [];\n      each(grid.getCartesians(), function (cartesian, index) {\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\n          cartesians.push(cartesian);\n        }\n      });\n      targetInfoList.push({\n        panelId: 'grid--' + gridModel.id,\n        gridModel: gridModel,\n        coordSysModel: gridModel,\n        // Use the first one as the representitive coordSys.\n        coordSys: cartesians[0],\n        coordSyses: cartesians,\n        getPanelRect: panelRectBuilder.grid,\n        xAxisDeclared: xAxesHas[gridModel.id],\n        yAxisDeclared: yAxesHas[gridModel.id]\n      });\n    });\n  },\n  geo: function (foundCpts, targetInfoList) {\n    each(foundCpts.geoModels, function (geoModel) {\n      var coordSys = geoModel.coordinateSystem;\n      targetInfoList.push({\n        panelId: 'geo--' + geoModel.id,\n        geoModel: geoModel,\n        coordSysModel: geoModel,\n        coordSys: coordSys,\n        coordSyses: [coordSys],\n        getPanelRect: panelRectBuilder.geo\n      });\n    });\n  }\n};\nvar targetInfoMatchers = [// grid\nfunction (foundCpts, targetInfo) {\n  var xAxisModel = foundCpts.xAxisModel;\n  var yAxisModel = foundCpts.yAxisModel;\n  var gridModel = foundCpts.gridModel;\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n  return gridModel && gridModel === targetInfo.gridModel;\n}, // geo\nfunction (foundCpts, targetInfo) {\n  var geoModel = foundCpts.geoModel;\n  return geoModel && geoModel === targetInfo.geoModel;\n}];\nvar panelRectBuilder = {\n  grid: function () {\n    // grid is not Transformable.\n    return this.coordSys.grid.getRect().clone();\n  },\n  geo: function () {\n    var coordSys = this.coordSys;\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\n\n    rect.applyTransform(graphic.getTransform(coordSys));\n    return rect;\n  }\n};\nvar coordConvert = {\n  lineX: curry(axisConvert, 0),\n  lineY: curry(axisConvert, 1),\n  rect: function (to, coordSys, rangeOrCoordRange) {\n    var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n    var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\n    return {\n      values: values,\n      xyMinMax: values\n    };\n  },\n  polygon: function (to, coordSys, rangeOrCoordRange) {\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    var values = zrUtil.map(rangeOrCoordRange, function (item) {\n      var p = coordSys[COORD_CONVERTS[to]](item);\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n      return p;\n    });\n    return {\n      values: values,\n      xyMinMax: xyMinMax\n    };\n  }\n};\n\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n  var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n  }));\n  var xyMinMax = [];\n  xyMinMax[axisNameIndex] = values;\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n  return {\n    values: values,\n    xyMinMax: xyMinMax\n  };\n}\n\nvar diffProcessor = {\n  lineX: curry(axisDiffProcessor, 0),\n  lineY: curry(axisDiffProcessor, 1),\n  rect: function (values, refer, scales) {\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\n  },\n  polygon: function (values, refer, scales) {\n    return zrUtil.map(values, function (item, idx) {\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n    });\n  }\n};\n\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\n} // We have to process scale caused by dataZoom manually,\n// although it might be not accurate.\n\n\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n  var sizeCurr = getSize(xyMinMaxCurr);\n  var sizeOrigin = getSize(xyMinMaxOrigin);\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n  isNaN(scales[0]) && (scales[0] = 1);\n  isNaN(scales[1]) && (scales[1] = 1);\n  return scales;\n}\n\nfunction getSize(xyMinMax) {\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\n}\n\nvar _default = BrushTargetManager;\nmodule.exports = _default;","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SliderZoomModel\");\n\nrequire(\"./dataZoom/SliderZoomView\");\n\nrequire(\"./dataZoom/InsideZoomModel\");\n\nrequire(\"./dataZoom/InsideZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","var Component = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nComponent.registerSubTypeDefaulter('dataZoom', function () {\n  // Default 'slider' when no type specified.\n  return 'slider';\n});","var echarts = require(\"../../echarts\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerProcessor({\n  // `dataZoomProcessor` will only be performed in needed series. Consider if\n  // there is a line series and a pie series, it is better not to update the\n  // line series if only pie series is needed to be updated.\n  getTargetSeries: function (ecModel) {\n    var seriesModelMap = createHashMap();\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        var axisProxy = dataZoomModel.getAxisProxy(dimNames.name, axisIndex);\n        each(axisProxy.getTargetSeriesModels(), function (seriesModel) {\n          seriesModelMap.set(seriesModel.uid, seriesModel);\n        });\n      });\n    });\n    return seriesModelMap;\n  },\n  modifyOutputEnd: true,\n  // Consider appendData, where filter should be performed. Because data process is\n  // in block mode currently, it is not need to worry about that the overallProgress\n  // execute every frame.\n  overallReset: function (ecModel, api) {\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // We calculate window and reset axis here but not in model\n      // init stage and not after action dispatch handler, because\n      // reset should be called after seriesData.restoreData.\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel, api);\n      }); // Caution: data zoom filtering is order sensitive when using\n      // percent range and no min/max/scale set on axis.\n      // For example, we have dataZoom definition:\n      // [\n      //      {xAxisIndex: 0, start: 30, end: 70},\n      //      {yAxisIndex: 0, start: 20, end: 80}\n      // ]\n      // In this case, [20, 80] of y-dataZoom should be based on data\n      // that have filtered by x-dataZoom using range of [30, 70],\n      // but should not be based on full raw data. Thus sliding\n      // x-dataZoom will change both ranges of xAxis and yAxis,\n      // while sliding y-dataZoom will only change the range of yAxis.\n      // So we should filter x-axis after reset x-axis immediately,\n      // and then reset y-axis and filter y-axis.\n\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel, api);\n      });\n    });\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // Fullfill all of the range props so that user\n      // is able to get them from chart.getOption().\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n      var percentRange = axisProxy.getDataPercentWindow();\n      var valueRange = axisProxy.getDataValueWindow();\n      dataZoomModel.setRawRange({\n        start: percentRange[0],\n        end: percentRange[1],\n        startValue: valueRange[0],\n        endValue: valueRange[1]\n      }, true);\n    });\n  }\n});","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerAction('dataZoom', function (payload, ecModel) {\n  var linkedNodesFinder = helper.createLinkedNodesFinder(zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'), helper.eachAxisDim, function (model, dimNames) {\n    return model.get(dimNames.axisIndex);\n  });\n  var effectedModels = [];\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (model, index) {\n    effectedModels.push.apply(effectedModels, linkedNodesFinder(model).nodes);\n  });\n  zrUtil.each(effectedModels, function (dataZoomModel, index) {\n    dataZoomModel.setRawRange({\n      start: payload.start,\n      end: payload.end,\n      startValue: payload.startValue,\n      endValue: payload.endValue\n    });\n  });\n});","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkLineModel\");\n\nrequire(\"./marker/MarkLineView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerPreprocessor(function (opt) {\n  // Make sure markLine component is enabled\n  opt.markLine = opt.markLine || {};\n});","require(\"./toolbox/ToolboxModel\");\n\nrequire(\"./toolbox/ToolboxView\");\n\nrequire(\"./toolbox/feature/SaveAsImage\");\n\nrequire(\"./toolbox/feature/MagicType\");\n\nrequire(\"./toolbox/feature/DataView\");\n\nrequire(\"./toolbox/feature/DataZoom\");\n\nrequire(\"./toolbox/feature/Restore\");","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar ATTR = '\\0_ec_hist_store';\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n */\n\nfunction push(ecModel, newSnapshot) {\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\n  // complete an range with current range.\n\n  each(newSnapshot, function (batchItem, dataZoomId) {\n    var i = store.length - 1;\n\n    for (; i >= 0; i--) {\n      var snapshot = store[i];\n\n      if (snapshot[dataZoomId]) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      // No origin range set, create one by current range.\n      var dataZoomModel = ecModel.queryComponents({\n        mainType: 'dataZoom',\n        subType: 'select',\n        id: dataZoomId\n      })[0];\n\n      if (dataZoomModel) {\n        var percentRange = dataZoomModel.getPercentRange();\n        store[0][dataZoomId] = {\n          dataZoomId: dataZoomId,\n          start: percentRange[0],\n          end: percentRange[1]\n        };\n      }\n    }\n  });\n  store.push(newSnapshot);\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} snapshot\n */\n\n\nfunction pop(ecModel) {\n  var store = giveStore(ecModel);\n  var head = store[store.length - 1];\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\n\n  var snapshot = {};\n  each(head, function (batchItem, dataZoomId) {\n    for (var i = store.length - 1; i >= 0; i--) {\n      var batchItem = store[i][dataZoomId];\n\n      if (batchItem) {\n        snapshot[dataZoomId] = batchItem;\n        break;\n      }\n    }\n  });\n  return snapshot;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction clear(ecModel) {\n  ecModel[ATTR] = null;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {number} records. always >= 1.\n */\n\n\nfunction count(ecModel) {\n  return giveStore(ecModel).length;\n}\n/**\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n * History length of each dataZoom may be different.\n * this._history[0] is used to store origin range.\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(ecModel) {\n  var store = ecModel[ATTR];\n\n  if (!store) {\n    store = ecModel[ATTR] = [{}];\n  }\n\n  return store;\n}\n\nexports.push = push;\nexports.pop = pop;\nexports.clear = clear;\nexports.count = count;","import 'echarts/lib/component/dataZoom';\n\nconst DEFAULT = {\n  type: 'inside',\n  zoomOnMouseWheel: 'shift',\n  throttle: 50,\n};\n\nexport default function DataZoom(props) {\n  // `props` can be boolean, if so return default\n  if (!props || !Array.isArray(props)) {\n    return [DEFAULT];\n  }\n\n  return props;\n}\n","import 'echarts/lib/component/toolbox';\n\nfunction getFeatures({dataZoom, ...features} = {}) {\n  return {\n    ...(dataZoom\n      ? {\n          dataZoom: {\n            yAxisIndex: 'none',\n            title: {\n              zoom: 'zoom',\n              back: 'undo',\n              restore: 'reset',\n            },\n            ...dataZoom,\n          },\n        }\n      : {}),\n    ...features,\n  };\n}\n\nexport default function ToolBox(options, features = {}) {\n  return {\n    right: 0,\n    top: 0,\n    itemSize: 16,\n\n    feature: getFeatures(features),\n    ...options,\n  };\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport moment from 'moment';\n\nimport {callIfFunction} from 'app/utils/callIfFunction';\nimport {getFormattedDate} from 'app/utils/dates';\nimport {useShortInterval} from 'app/components/charts/utils';\nimport {updateParams} from 'app/actionCreators/globalSelection';\nimport DataZoom from 'app/components/charts/components/dataZoom';\nimport SentryTypes from 'app/sentryTypes';\nimport ToolBox from 'app/components/charts/components/toolBox';\n\nconst getDate = date =>\n  date ? moment.utc(date).format(moment.HTML5_FMT.DATETIME_LOCAL_SECONDS) : null;\n\n/**\n * This is a very opinionated component that takes a render prop through `children`. It\n * will provide props to be passed to `BaseChart` to enable support of zooming without\n * eCharts' clunky zoom toolboxes.\n *\n * This also is very tightly coupled with the Global Selection Header. We can make it more\n * generic if need be in the future.\n *\n * TODO(billy): If this sees extended uses, this would be better as a child of LineChart so\n * you can enable it via a prop to `<LineChart>`\n */\nclass ChartZoom extends React.Component {\n  static propTypes = {\n    router: PropTypes.object,\n    period: PropTypes.string,\n    start: PropTypes.instanceOf(Date),\n    end: PropTypes.instanceOf(Date),\n    utc: PropTypes.bool,\n    disabled: PropTypes.bool,\n    // Use short date formatting for xAxis\n    useShortDate: PropTypes.bool,\n\n    xAxis: SentryTypes.EChartsXAxis,\n\n    // Callback for when chart has been zoomed\n    onZoom: PropTypes.func,\n    // Callbacks for eCharts events\n    onRestore: PropTypes.func,\n    onChartReady: PropTypes.func,\n    onDataZoom: PropTypes.func,\n    onFinished: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    // Zoom history\n    this.history = [];\n\n    // Initialize current period instance state for zoom history\n    this.saveCurrentPeriod(props);\n  }\n\n  componentDidUpdate() {\n    if (this.props.disabled) {\n      return;\n    }\n\n    // When component updates, make sure we sync current period state\n    // for use in zoom history\n    this.saveCurrentPeriod(this.props);\n  }\n\n  /**\n   * Save current period state from period in props to be used\n   * in handling chart's zoom history state\n   */\n  saveCurrentPeriod = props => {\n    this.currentPeriod = {\n      period: props.period,\n      start: getDate(props.start),\n      end: getDate(props.end),\n    };\n  };\n\n  /**\n   * Sets the new period due to a zoom related action\n   *\n   * Saves the current period to an instance property so that we\n   * can control URL state when zoom history is being manipulated\n   * by the chart controls.\n   *\n   * Saves a callback function to be called after chart animation is completed\n   */\n  setPeriod = ({period, start, end}, saveHistory) => {\n    const startFormatted = getDate(start);\n    const endFormatted = getDate(end);\n\n    // Save period so that we can revert back to it when using echarts \"back\" navigation\n    if (saveHistory) {\n      this.history.push(this.currentPeriod);\n    }\n\n    // Callback to let parent component know zoom has changed\n    // This is required for some more perceived responsiveness since\n    // we delay updating URL state so that chart animation can finish\n    //\n    // Parent container can use this to change into a loading state before\n    // URL parameters are changed\n    callIfFunction(this.props.onZoom, {\n      period,\n      start: startFormatted,\n      end: endFormatted,\n    });\n\n    this.zooming = () => {\n      updateParams(\n        {\n          period,\n          start: startFormatted,\n          end: endFormatted,\n        },\n        this.props.router\n      );\n\n      this.saveCurrentPeriod({period, start, end});\n    };\n  };\n\n  /**\n   * Enable zoom immediately instead of having to toggle to zoom\n   */\n  handleChartReady = chart => {\n    chart.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: true,\n    });\n\n    callIfFunction(this.props.onChartReady, chart);\n  };\n\n  /**\n   * Restores the chart to initial viewport/zoom level\n   *\n   * Updates URL state to reflect initial params\n   */\n  handleZoomRestore = (evt, chart) => {\n    if (!this.history.length) {\n      return;\n    }\n\n    this.setPeriod(this.history[0]);\n\n    // reset history\n    this.history = [];\n\n    callIfFunction(this.props.onRestore, evt, chart);\n  };\n\n  handleDataZoom = (evt, chart) => {\n    const model = chart.getModel();\n    const {xAxis} = model.option;\n    const axis = xAxis[0];\n\n    // if `rangeStart` and `rangeEnd` are null, then we are going back\n    if (axis.rangeStart === null && axis.rangeEnd === null) {\n      const previousPeriod = this.history.pop();\n\n      if (!previousPeriod) {\n        return;\n      }\n\n      this.setPeriod(previousPeriod);\n    } else {\n      const start = moment.utc(axis.rangeStart);\n\n      // Add a day so we go until the end of the day (e.g. next day at midnight)\n      const end = moment.utc(axis.rangeEnd);\n\n      this.setPeriod({period: null, start, end}, true);\n    }\n\n    callIfFunction(this.props.onDataZoom, evt, chart);\n  };\n\n  /**\n   * Chart event when *any* rendering+animation finishes\n   *\n   * `this.zooming` acts as a callback function so that\n   * we can let the native zoom animation on the chart complete\n   * before we update URL state and re-render\n   */\n  handleChartFinished = () => {\n    if (typeof this.zooming === 'function') {\n      this.zooming();\n      this.zooming = null;\n    }\n    callIfFunction(this.props.onFinished);\n  };\n\n  render() {\n    const {\n      utc,\n      xAxis,\n      disabled,\n      children,\n      useShortDate,\n\n      onZoom, // eslint-disable-line no-unused-vars\n      onRestore, // eslint-disable-line no-unused-vars\n      onChartReady, // eslint-disable-line no-unused-vars\n      onDataZoom, // eslint-disable-line no-unused-vars\n      onFinished, // eslint-disable-line no-unused-vars\n      ...props\n    } = this.props;\n\n    if (disabled) {\n      return children(props);\n    }\n\n    const dateFormat = useShortDate ? 'MMM Do' : 'lll';\n    const hasShortInterval = useShortInterval(this.props);\n    const xAxisOptions = {\n      axisLabel: {\n        formatter: (value, index) => {\n          const firstItem = index === 0;\n          const format = hasShortInterval && !firstItem ? 'LT' : dateFormat;\n          return getFormattedDate(value, format, {local: !utc});\n        },\n      },\n      ...xAxis,\n    };\n\n    const tooltip = {\n      formatAxisLabel: (value, isTimestamp, isUtc) => {\n        if (!isTimestamp) {\n          return value;\n        }\n        return getFormattedDate(value, 'lll', {local: !isUtc});\n      },\n    };\n\n    const renderProps = {\n      // Zooming only works when grouped by date\n      isGroupedByDate: true,\n      onChartReady: this.handleChartReady,\n      utc,\n      dataZoom: DataZoom(),\n      tooltip,\n      toolBox: ToolBox(\n        {},\n        {\n          dataZoom: {\n            title: {\n              zoom: '',\n              back: '',\n            },\n            iconStyle: {\n              borderWidth: 0,\n              color: 'transparent',\n              opacity: 0,\n            },\n          },\n        }\n      ),\n      onDataZoom: this.handleDataZoom,\n      onRestore: this.handleZoomRestore,\n      onFinished: this.handleChartFinished,\n      ...props,\n      xAxis: xAxisOptions,\n    };\n\n    return children(renderProps);\n  }\n}\n\nexport default ChartZoom;\n","import {withRouter} from 'react-router';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport moment from 'moment';\n\nimport {addErrorMessage} from 'app/actionCreators/indicator';\nimport {getUserTimezone} from 'app/utils/dates';\nimport {t} from 'app/locale';\nimport MarkLine from 'app/components/charts/components/markLine';\nimport SentryTypes from 'app/sentryTypes';\nimport theme from 'app/utils/theme';\nimport withApi from 'app/utils/withApi';\nimport withOrganization from 'app/utils/withOrganization';\n\n// This is not an exported action/function because releases list uses AsyncComponent\n// and this is not re-used anywhere else afaict\nfunction getOrganizationReleases(api, organization) {\n  return api.requestPromise(`/organizations/${organization.slug}/releases/`);\n}\n\nclass ReleaseSeries extends React.Component {\n  static propTypes = {\n    api: PropTypes.object,\n    router: PropTypes.object,\n    organization: SentryTypes.Organization,\n\n    utc: PropTypes.bool,\n    // Array of releases, if empty, component will fetch releases itself\n    releases: PropTypes.arrayOf(SentryTypes.Release),\n  };\n\n  state = {\n    releases: null,\n    releaseSeries: [],\n  };\n\n  componentDidMount() {\n    if (this.props.releases) {\n      // No need to fetch releases if passed in from props\n      return;\n    }\n\n    const {api, organization} = this.props;\n\n    getOrganizationReleases(api, organization)\n      .then(releases => {\n        this.setState({\n          releases,\n          releaseSeries: [this.getReleaseSeries(releases)],\n        });\n      })\n      .catch(() => {\n        addErrorMessage(t('Error fetching releases'));\n      });\n  }\n\n  getReleaseSeries = releases => {\n    const {utc, organization, router} = this.props;\n\n    return {\n      seriesName: 'Releases',\n      data: [],\n      markLine: MarkLine({\n        lineStyle: {\n          normal: {\n            color: theme.purpleLight,\n            opacity: 0.3,\n            type: 'solid',\n          },\n        },\n        tooltip: {\n          formatter: ({data}) => {\n            return `<div>${moment\n              .tz(data.value, utc ? 'UTC' : getUserTimezone())\n              .format('MMM D, YYYY LT')} <br />\n            Release: ${data.name}<br />\n            </div>`;\n          },\n        },\n        label: {\n          show: false,\n        },\n        data: releases.map(release => ({\n          xAxis: +new Date(release.dateCreated),\n          name: release.shortVersion,\n          value: release.shortVersion,\n          onClick: () => {\n            if (organization.features.includes('sentry10')) {\n              router.push(\n                `/organizations/${organization.slug}/releases/${release.version}/`\n              );\n            }\n          },\n          label: {\n            formatter: () => release.shortVersion,\n          },\n        })),\n      }),\n    };\n  };\n\n  render() {\n    const {children} = this.props;\n\n    return children({\n      releases: this.state.releases,\n      releaseSeries: this.state.releaseSeries,\n    });\n  }\n}\n\nexport default withRouter(withOrganization(withApi(ReleaseSeries)));\n","import 'echarts/lib/component/markLine';\n\n/**\n * eCharts markLine\n *\n * See https://ecomfe.github.io/echarts-doc/public/en/option.html#series-line.markLine\n */\nexport default function MarkLine(props) {\n  return {\n    // The second symbol is a very ugly arrow, we don't want it\n    symbol: ['none', 'none'],\n    ...props,\n  };\n}\n","var graphic = require(\"../../util/graphic\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Line path for bezier and straight line draw\n */\nvar straightLineProto = graphic.Line.prototype;\nvar bezierCurveProto = graphic.BezierCurve.prototype;\n\nfunction isLine(shape) {\n  return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\n}\n\nvar _default = graphic.extendShape({\n  type: 'ec-line',\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    percent: 1,\n    cpx1: null,\n    cpy1: null\n  },\n  buildPath: function (ctx, shape) {\n    (isLine(shape) ? straightLineProto : bezierCurveProto).buildPath(ctx, shape);\n  },\n  pointAt: function (t) {\n    return isLine(this.shape) ? straightLineProto.pointAt.call(this, t) : bezierCurveProto.pointAt.call(this, t);\n  },\n  tangentAt: function (t) {\n    var shape = this.shape;\n    var p = isLine(shape) ? [shape.x2 - shape.x1, shape.y2 - shape.y1] : bezierCurveProto.tangentAt.call(this, t);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\n/**\n * Operate single axis.\n * One axis can only operated by one axis operator.\n * Different dataZoomModels may be defined to operate the same axis.\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\n * So dataZoomModels share one axisProxy in that case.\n *\n * @class\n */\n\nvar AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this._dimName = dimName;\n  /**\n   * @private\n   */\n\n  this._axisIndex = axisIndex;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._valueWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._percentWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._dataExtent;\n  /**\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n   * @private\n   * @type {Object}\n   */\n\n  this._minMaxSpan;\n  /**\n   * @readOnly\n   * @type {module: echarts/model/Global}\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @private\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\n   */\n\n  this._dataZoomModel = dataZoomModel; // /**\n  //  * @readOnly\n  //  * @private\n  //  */\n  // this.hasSeriesStacked;\n};\n\nAxisProxy.prototype = {\n  constructor: AxisProxy,\n\n  /**\n   * Whether the axisProxy is hosted by dataZoomModel.\n   *\n   * @public\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   * @return {boolean}\n   */\n  hostedBy: function (dataZoomModel) {\n    return this._dataZoomModel === dataZoomModel;\n  },\n\n  /**\n   * @return {Array.<number>} Value can only be NaN or finite value.\n   */\n  getDataValueWindow: function () {\n    return this._valueWindow.slice();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getDataPercentWindow: function () {\n    return this._percentWindow.slice();\n  },\n\n  /**\n   * @public\n   * @param {number} axisIndex\n   * @return {Array} seriesModels\n   */\n  getTargetSeriesModels: function () {\n    var seriesModels = [];\n    var ecModel = this.ecModel;\n    ecModel.eachSeries(function (seriesModel) {\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n        var dimName = this._dimName;\n        var axisModel = ecModel.queryComponents({\n          mainType: dimName + 'Axis',\n          index: seriesModel.get(dimName + 'AxisIndex'),\n          id: seriesModel.get(dimName + 'AxisId')\n        })[0];\n\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n          seriesModels.push(seriesModel);\n        }\n      }\n    }, this);\n    return seriesModels;\n  },\n  getAxisModel: function () {\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n  },\n  getOtherAxisModel: function () {\n    var axisDim = this._dimName;\n    var ecModel = this.ecModel;\n    var axisModel = this.getAxisModel();\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\n    var otherAxisDim;\n    var coordSysIndexName;\n\n    if (isCartesian) {\n      coordSysIndexName = 'gridIndex';\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n    } else {\n      coordSysIndexName = 'polarIndex';\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n    }\n\n    var foundOtherAxisModel;\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\n        foundOtherAxisModel = otherAxisModel;\n      }\n    });\n    return foundOtherAxisModel;\n  },\n  getMinMaxSpan: function () {\n    return zrUtil.clone(this._minMaxSpan);\n  },\n\n  /**\n   * Only calculate by given range and this._dataExtent, do not change anything.\n   *\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  calculateDataWindow: function (opt) {\n    var dataExtent = this._dataExtent;\n    var axisModel = this.getAxisModel();\n    var scale = axisModel.axis.scale;\n\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\n\n    var percentExtent = [0, 100];\n    var percentWindow = [opt.start, opt.end];\n    var valueWindow = [];\n    each(['startValue', 'endValue'], function (prop) {\n      valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n    }); // Normalize bound.\n\n    each([0, 1], function (idx) {\n      var boundValue = valueWindow[idx];\n      var boundPercent = percentWindow[idx]; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n      // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n      // for cases that a dataZoom component controls multiple axes with different\n      // unit or extent, and the latter one is suitable for accurate zoom by pixel\n      // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n      // but it is awkward that `percentProp` can not be obtained from `valueProp`\n      // accurately (because all of values that are overflow the `dataExtent` will\n      // be calculated to percent '100%'). So we have to use\n      // `dataZoom.getRangePropMode()` to mark which prop is used.\n      // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n      // it remains its original value.\n\n      if (rangePropMode[idx] === 'percent') {\n        if (boundPercent == null) {\n          boundPercent = percentExtent[idx];\n        } // Use scale.parse to math round for category or time axis.\n\n\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent, true));\n      } else {\n        // Calculating `percent` from `value` may be not accurate, because\n        // This calculation can not be inversed, because all of values that\n        // are overflow the `dataExtent` will be calculated to percent '100%'\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent, true);\n      } // valueWindow[idx] = round(boundValue);\n      // percentWindow[idx] = round(boundPercent);\n\n\n      valueWindow[idx] = boundValue;\n      percentWindow[idx] = boundPercent;\n    });\n    return {\n      valueWindow: asc(valueWindow),\n      percentWindow: asc(percentWindow)\n    };\n  },\n\n  /**\n   * Notice: reset should not be called before series.restoreData() called,\n   * so it is recommanded to be called in \"process stage\" but not \"model init\n   * stage\".\n   *\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  reset: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var targetSeries = this.getTargetSeriesModels(); // Culculate data window and data extent, and record them.\n\n    this._dataExtent = calculateDataExtent(this, this._dimName, targetSeries); // this.hasSeriesStacked = false;\n    // each(targetSeries, function (series) {\n    // var data = series.getData();\n    // var dataDim = data.mapDimension(this._dimName);\n    // var stackedDimension = data.getCalculationInfo('stackedDimension');\n    // if (stackedDimension && stackedDimension === dataDim) {\n    // this.hasSeriesStacked = true;\n    // }\n    // }, this);\n\n    var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n    this._valueWindow = dataWindow.valueWindow;\n    this._percentWindow = dataWindow.percentWindow;\n    setMinMaxSpan(this); // Update axis setting then.\n\n    setAxisModel(this);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  restore: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    this._valueWindow = this._percentWindow = null;\n    setAxisModel(this, true);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  filterData: function (dataZoomModel, api) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var axisDim = this._dimName;\n    var seriesModels = this.getTargetSeriesModels();\n    var filterMode = dataZoomModel.get('filterMode');\n    var valueWindow = this._valueWindow;\n\n    if (filterMode === 'none') {\n      return;\n    } // FIXME\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\n    // with NaN data, NaN will be filtered and stack will be wrong.\n    // So we need to force the mode to be set empty.\n    // In fect, it is not a big deal that do not support filterMode-'filter'\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n    // selection\" some day, which might need \"adapt to data extent on the\n    // otherAxis\", which is disabled by filterMode-'empty'.\n    // But currently, stack has been fixed to based on value but not index,\n    // so this is not an issue any more.\n    // var otherAxisModel = this.getOtherAxisModel();\n    // if (dataZoomModel.get('$fromToolbox')\n    //     && otherAxisModel\n    //     && otherAxisModel.hasSeriesStacked\n    // ) {\n    //     filterMode = 'empty';\n    // }\n    // TODO\n    // filterMode 'weakFilter' and 'empty' is not optimized for huge data yet.\n    // Process series data\n\n\n    each(seriesModels, function (seriesModel) {\n      var seriesData = seriesModel.getData();\n      var dataDims = seriesData.mapDimension(axisDim, true);\n\n      if (filterMode === 'weakFilter') {\n        seriesData.filterSelf(function (dataIndex) {\n          var leftOut;\n          var rightOut;\n          var hasValue;\n\n          for (var i = 0; i < dataDims.length; i++) {\n            var value = seriesData.get(dataDims[i], dataIndex);\n            var thisHasValue = !isNaN(value);\n            var thisLeftOut = value < valueWindow[0];\n            var thisRightOut = value > valueWindow[1];\n\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n              return true;\n            }\n\n            thisHasValue && (hasValue = true);\n            thisLeftOut && (leftOut = true);\n            thisRightOut && (rightOut = true);\n          } // If both left out and right out, do not filter.\n\n\n          return hasValue && leftOut && rightOut;\n        });\n      } else {\n        each(dataDims, function (dim) {\n          if (filterMode === 'empty') {\n            seriesModel.setData(seriesData.map(dim, function (value) {\n              return !isInWindow(value) ? NaN : value;\n            }));\n          } else {\n            var range = {};\n            range[dim] = valueWindow; // console.time('select');\n\n            seriesData.selectRange(range); // console.timeEnd('select');\n          }\n        });\n      }\n\n      each(dataDims, function (dim) {\n        seriesData.setApproximateExtent(valueWindow, dim);\n      });\n    });\n\n    function isInWindow(value) {\n      return value >= valueWindow[0] && value <= valueWindow[1];\n    }\n  }\n};\n\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\n  var dataExtent = [Infinity, -Infinity];\n  each(seriesModels, function (seriesModel) {\n    var seriesData = seriesModel.getData();\n\n    if (seriesData) {\n      each(seriesData.mapDimension(axisDim, true), function (dim) {\n        var seriesExtent = seriesData.getApproximateExtent(dim);\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n      });\n    }\n  });\n\n  if (dataExtent[1] < dataExtent[0]) {\n    dataExtent = [NaN, NaN];\n  } // It is important to get \"consistent\" extent when more then one axes is\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n  // when zooming. But it is difficult to know what is \"consistent\", considering\n  // axes have different type or even different meanings (For example, two\n  // time axes are used to compare data of the same date in different years).\n  // So basically dataZoom just obtains extent by series.data (in category axis\n  // extent can be obtained from axis.data).\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\n  // consistent.\n\n\n  fixExtentByAxis(axisProxy, dataExtent);\n  return dataExtent;\n}\n\nfunction fixExtentByAxis(axisProxy, dataExtent) {\n  var axisModel = axisProxy.getAxisModel();\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\n  // by axis.data by default.\n\n  var isCategoryAxis = axisModel.get('type') === 'category';\n  var axisDataLen = isCategoryAxis && axisModel.getCategories().length;\n\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n    dataExtent[0] = min;\n  } else if (isCategoryAxis) {\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n  }\n\n  var max = axisModel.getMax(true);\n\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n    dataExtent[1] = max;\n  } else if (isCategoryAxis) {\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n  }\n\n  if (!axisModel.get('scale', true)) {\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\n  // by series data, which may be a little different from the extent calculated by\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\n  // little when zooming. So it will not be fixed until some users require it strongly.\n\n\n  return dataExtent;\n}\n\nfunction setAxisModel(axisProxy, isRestore) {\n  var axisModel = axisProxy.getAxisModel();\n  var percentWindow = axisProxy._percentWindow;\n  var valueWindow = axisProxy._valueWindow;\n\n  if (!percentWindow) {\n    return;\n  } // [0, 500]: arbitrary value, guess axis extent.\n\n\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n  precision = Math.min(precision, 20); // isRestore or isFull\n\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\n}\n\nfunction setMinMaxSpan(axisProxy) {\n  var minMaxSpan = axisProxy._minMaxSpan = {};\n  var dataZoomModel = axisProxy._dataZoomModel;\n  each(['min', 'max'], function (minMax) {\n    minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span'); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n\n    if (valueSpan != null) {\n      minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n      valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n\n      if (valueSpan != null) {\n        var dataExtent = axisProxy._dataExtent;\n        minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\n      }\n    }\n  });\n}\n\nvar _default = AxisProxy;\nmodule.exports = _default;","var DataZoomModel = require(\"./DataZoomModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar SliderZoomModel = DataZoomModel.extend({\n  type: 'dataZoom.slider',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    // ph => placeholder. Using placehoder here because\n    // deault value can only be drived in view stage.\n    right: 'ph',\n    // Default align to grid rect.\n    top: 'ph',\n    // Default align to grid rect.\n    width: 'ph',\n    // Default align to grid rect.\n    height: 'ph',\n    // Default align to grid rect.\n    left: null,\n    // Default align to grid rect.\n    bottom: null,\n    // Default align to grid rect.\n    backgroundColor: 'rgba(47,69,84,0)',\n    // Background of slider zoom component.\n    // dataBackgroundColor: '#ddd',         // Background coor of data shadow and border of box,\n    // highest priority, remain for compatibility of\n    // previous version, but not recommended any more.\n    dataBackground: {\n      lineStyle: {\n        color: '#2f4554',\n        width: 0.5,\n        opacity: 0.3\n      },\n      areaStyle: {\n        color: 'rgba(47,69,84,0.3)',\n        opacity: 0.3\n      }\n    },\n    borderColor: '#ddd',\n    // border color of the box. For compatibility,\n    // if dataBackgroundColor is set, borderColor\n    // is ignored.\n    fillerColor: 'rgba(167,183,204,0.4)',\n    // Color of selected area.\n    // handleColor: 'rgba(89,170,216,0.95)',     // Color of handle.\n    // handleIcon: 'path://M4.9,17.8c0-1.4,4.5-10.5,5.5-12.4c0-0.1,0.6-1.1,0.9-1.1c0.4,0,0.9,1,0.9,1.1c1.1,2.2,5.4,11,5.4,12.4v17.8c0,1.5-0.6,2.1-1.3,2.1H6.1c-0.7,0-1.3-0.6-1.3-2.1V17.8z',\n    handleIcon: 'M8.2,13.6V3.9H6.3v9.7H3.1v14.9h3.3v9.7h1.8v-9.7h3.3V13.6H8.2z M9.7,24.4H4.8v-1.4h4.9V24.4z M9.7,19.1H4.8v-1.4h4.9V19.1z',\n    // Percent of the slider height\n    handleSize: '100%',\n    handleStyle: {\n      color: '#a7b7cc'\n    },\n    labelPrecision: null,\n    labelFormatter: null,\n    showDetail: true,\n    showDataShadow: 'auto',\n    // Default auto decision.\n    realtime: true,\n    zoomLock: false,\n    // Whether disable zoom.\n    textStyle: {\n      color: '#333'\n    }\n  }\n});\nvar _default = SliderZoomModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar throttle = require(\"../../util/throttle\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar layout = require(\"../../util/layout\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Rect = graphic.Rect;\nvar linearMap = numberUtil.linearMap;\nvar asc = numberUtil.asc;\nvar bind = zrUtil.bind;\nvar each = zrUtil.each; // Constants\n\nvar DEFAULT_LOCATION_EDGE_GAP = 7;\nvar DEFAULT_FRAME_BORDER_WIDTH = 1;\nvar DEFAULT_FILLER_SIZE = 30;\nvar HORIZONTAL = 'horizontal';\nvar VERTICAL = 'vertical';\nvar LABEL_GAP = 5;\nvar SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\nvar SliderZoomView = DataZoomView.extend({\n  type: 'dataZoom.slider',\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {Object}\n     */\n    this._displayables = {};\n    /**\n     * @private\n     * @type {string}\n     */\n\n    this._orient;\n    /**\n     * [0, 100]\n     * @private\n     */\n\n    this._range;\n    /**\n     * [coord of the first handle, coord of the second handle]\n     * @private\n     */\n\n    this._handleEnds;\n    /**\n     * [length, thick]\n     * @private\n     * @type {Array.<number>}\n     */\n\n    this._size;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleWidth;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleHeight;\n    /**\n     * @private\n     */\n\n    this._location;\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._dataShadowInfo;\n    this.api = api;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    SliderZoomView.superApply(this, 'render', arguments);\n    throttle.createOrUpdate(this, '_dispatchZoomAction', this.dataZoomModel.get('throttle'), 'fixRate');\n    this._orient = dataZoomModel.get('orient');\n\n    if (this.dataZoomModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    } // Notice: this._resetInterval() should not be executed when payload.type\n    // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\n    // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\n\n\n    if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\n      this._buildView();\n    }\n\n    this._updateView();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    SliderZoomView.superApply(this, 'remove', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    SliderZoomView.superApply(this, 'dispose', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n  _buildView: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    this._resetLocation();\n\n    this._resetInterval();\n\n    var barGroup = this._displayables.barGroup = new graphic.Group();\n\n    this._renderBackground();\n\n    this._renderHandle();\n\n    this._renderDataShadow();\n\n    thisGroup.add(barGroup);\n\n    this._positionGroup();\n  },\n\n  /**\n   * @private\n   */\n  _resetLocation: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var api = this.api; // If some of x/y/width/height are not specified,\n    // auto-adapt according to target grid.\n\n    var coordRect = this._findCoordRect();\n\n    var ecSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }; // Default align by coordinate system rect.\n\n    var positionInfo = this._orient === HORIZONTAL ? {\n      // Why using 'right', because right should be used in vertical,\n      // and it is better to be consistent for dealing with position param merge.\n      right: ecSize.width - coordRect.x - coordRect.width,\n      top: ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP,\n      width: coordRect.width,\n      height: DEFAULT_FILLER_SIZE\n    } : {\n      // vertical\n      right: DEFAULT_LOCATION_EDGE_GAP,\n      top: coordRect.y,\n      width: DEFAULT_FILLER_SIZE,\n      height: coordRect.height\n    }; // Do not write back to option and replace value 'ph', because\n    // the 'ph' value should be recalculated when resize.\n\n    var layoutParams = layout.getLayoutParams(dataZoomModel.option); // Replace the placeholder value.\n\n    zrUtil.each(['right', 'top', 'width', 'height'], function (name) {\n      if (layoutParams[name] === 'ph') {\n        layoutParams[name] = positionInfo[name];\n      }\n    });\n    var layoutRect = layout.getLayoutRect(layoutParams, ecSize, dataZoomModel.padding);\n    this._location = {\n      x: layoutRect.x,\n      y: layoutRect.y\n    };\n    this._size = [layoutRect.width, layoutRect.height];\n    this._orient === VERTICAL && this._size.reverse();\n  },\n\n  /**\n   * @private\n   */\n  _positionGroup: function () {\n    var thisGroup = this.group;\n    var location = this._location;\n    var orient = this._orient; // Just use the first axis to determine mapping.\n\n    var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\n    var inverse = targetAxisModel && targetAxisModel.get('inverse');\n    var barGroup = this._displayables.barGroup;\n    var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse; // Transform barGroup.\n\n    barGroup.attr(orient === HORIZONTAL && !inverse ? {\n      scale: otherAxisInverse ? [1, 1] : [1, -1]\n    } : orient === HORIZONTAL && inverse ? {\n      scale: otherAxisInverse ? [-1, 1] : [-1, -1]\n    } : orient === VERTICAL && !inverse ? {\n      scale: otherAxisInverse ? [1, -1] : [1, 1],\n      rotation: Math.PI / 2 // Dont use Math.PI, considering shadow direction.\n\n    } : {\n      scale: otherAxisInverse ? [-1, -1] : [-1, 1],\n      rotation: Math.PI / 2\n    }); // Position barGroup\n\n    var rect = thisGroup.getBoundingRect([barGroup]);\n    thisGroup.attr('position', [location.x - rect.x, location.y - rect.y]);\n  },\n\n  /**\n   * @private\n   */\n  _getViewExtent: function () {\n    return [0, this._size[0]];\n  },\n  _renderBackground: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var size = this._size;\n    var barGroup = this._displayables.barGroup;\n    barGroup.add(new Rect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: dataZoomModel.get('backgroundColor')\n      },\n      z2: -40\n    })); // Click panel, over shadow, below handles.\n\n    barGroup.add(new Rect({\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: 'transparent'\n      },\n      z2: 0,\n      onclick: zrUtil.bind(this._onClickPanelClick, this)\n    }));\n  },\n  _renderDataShadow: function () {\n    var info = this._dataShadowInfo = this._prepareDataShadowInfo();\n\n    if (!info) {\n      return;\n    }\n\n    var size = this._size;\n    var seriesModel = info.series;\n    var data = seriesModel.getRawData();\n    var otherDim = seriesModel.getShadowDim ? seriesModel.getShadowDim() // @see candlestick\n    : info.otherDim;\n\n    if (otherDim == null) {\n      return;\n    }\n\n    var otherDataExtent = data.getDataExtent(otherDim); // Nice extent.\n\n    var otherOffset = (otherDataExtent[1] - otherDataExtent[0]) * 0.3;\n    otherDataExtent = [otherDataExtent[0] - otherOffset, otherDataExtent[1] + otherOffset];\n    var otherShadowExtent = [0, size[1]];\n    var thisShadowExtent = [0, size[0]];\n    var areaPoints = [[size[0], 0], [0, 0]];\n    var linePoints = [];\n    var step = thisShadowExtent[1] / (data.count() - 1);\n    var thisCoord = 0; // Optimize for large data shadow\n\n    var stride = Math.round(data.count() / size[0]);\n    var lastIsEmpty;\n    data.each([otherDim], function (value, index) {\n      if (stride > 0 && index % stride) {\n        thisCoord += step;\n        return;\n      } // FIXME\n      // Should consider axis.min/axis.max when drawing dataShadow.\n      // FIXME\n      // 应该使用统一的空判断？还是在list里进行空判断？\n\n\n      var isEmpty = value == null || isNaN(value) || value === ''; // See #4235.\n\n      var otherCoord = isEmpty ? 0 : linearMap(value, otherDataExtent, otherShadowExtent, true); // Attempt to draw data shadow precisely when there are empty value.\n\n      if (isEmpty && !lastIsEmpty && index) {\n        areaPoints.push([areaPoints[areaPoints.length - 1][0], 0]);\n        linePoints.push([linePoints[linePoints.length - 1][0], 0]);\n      } else if (!isEmpty && lastIsEmpty) {\n        areaPoints.push([thisCoord, 0]);\n        linePoints.push([thisCoord, 0]);\n      }\n\n      areaPoints.push([thisCoord, otherCoord]);\n      linePoints.push([thisCoord, otherCoord]);\n      thisCoord += step;\n      lastIsEmpty = isEmpty;\n    });\n    var dataZoomModel = this.dataZoomModel; // var dataBackgroundModel = dataZoomModel.getModel('dataBackground');\n\n    this._displayables.barGroup.add(new graphic.Polygon({\n      shape: {\n        points: areaPoints\n      },\n      style: zrUtil.defaults({\n        fill: dataZoomModel.get('dataBackgroundColor')\n      }, dataZoomModel.getModel('dataBackground.areaStyle').getAreaStyle()),\n      silent: true,\n      z2: -20\n    }));\n\n    this._displayables.barGroup.add(new graphic.Polyline({\n      shape: {\n        points: linePoints\n      },\n      style: dataZoomModel.getModel('dataBackground.lineStyle').getLineStyle(),\n      silent: true,\n      z2: -19\n    }));\n  },\n  _prepareDataShadowInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var showDataShadow = dataZoomModel.get('showDataShadow');\n\n    if (showDataShadow === false) {\n      return;\n    } // Find a representative series.\n\n\n    var result;\n    var ecModel = this.ecModel;\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var seriesModels = dataZoomModel.getAxisProxy(dimNames.name, axisIndex).getTargetSeriesModels();\n      zrUtil.each(seriesModels, function (seriesModel) {\n        if (result) {\n          return;\n        }\n\n        if (showDataShadow !== true && zrUtil.indexOf(SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')) < 0) {\n          return;\n        }\n\n        var thisAxis = ecModel.getComponent(dimNames.axis, axisIndex).axis;\n        var otherDim = getOtherDim(dimNames.name);\n        var otherAxisInverse;\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (otherDim != null && coordSys.getOtherAxis) {\n          otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\n        }\n\n        otherDim = seriesModel.getData().mapDimension(otherDim);\n        result = {\n          thisAxis: thisAxis,\n          series: seriesModel,\n          thisDim: dimNames.name,\n          otherDim: otherDim,\n          otherAxisInverse: otherAxisInverse\n        };\n      }, this);\n    }, this);\n    return result;\n  },\n  _renderHandle: function () {\n    var displaybles = this._displayables;\n    var handles = displaybles.handles = [];\n    var handleLabels = displaybles.handleLabels = [];\n    var barGroup = this._displayables.barGroup;\n    var size = this._size;\n    var dataZoomModel = this.dataZoomModel;\n    barGroup.add(displaybles.filler = new Rect({\n      draggable: true,\n      cursor: getCursor(this._orient),\n      drift: bind(this._onDragMove, this, 'all'),\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragstart: bind(this._showDataInfo, this, true),\n      ondragend: bind(this._onDragEnd, this),\n      onmouseover: bind(this._showDataInfo, this, true),\n      onmouseout: bind(this._showDataInfo, this, false),\n      style: {\n        fill: dataZoomModel.get('fillerColor'),\n        textPosition: 'inside'\n      }\n    })); // Frame border.\n\n    barGroup.add(new Rect(graphic.subPixelOptimizeRect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        stroke: dataZoomModel.get('dataBackgroundColor') || dataZoomModel.get('borderColor'),\n        lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\n        fill: 'rgba(0,0,0,0)'\n      }\n    })));\n    each([0, 1], function (handleIndex) {\n      var path = graphic.createIcon(dataZoomModel.get('handleIcon'), {\n        cursor: getCursor(this._orient),\n        draggable: true,\n        drift: bind(this._onDragMove, this, handleIndex),\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        ondragend: bind(this._onDragEnd, this),\n        onmouseover: bind(this._showDataInfo, this, true),\n        onmouseout: bind(this._showDataInfo, this, false)\n      }, {\n        x: -1,\n        y: 0,\n        width: 2,\n        height: 2\n      });\n      var bRect = path.getBoundingRect();\n      this._handleHeight = numberUtil.parsePercent(dataZoomModel.get('handleSize'), this._size[1]);\n      this._handleWidth = bRect.width / bRect.height * this._handleHeight;\n      path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\n      var handleColor = dataZoomModel.get('handleColor'); // Compatitable with previous version\n\n      if (handleColor != null) {\n        path.style.fill = handleColor;\n      }\n\n      barGroup.add(handles[handleIndex] = path);\n      var textStyleModel = dataZoomModel.textStyleModel;\n      this.group.add(handleLabels[handleIndex] = new graphic.Text({\n        silent: true,\n        invisible: true,\n        style: {\n          x: 0,\n          y: 0,\n          text: '',\n          textVerticalAlign: 'middle',\n          textAlign: 'center',\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        },\n        z2: 10\n      }));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var range = this._range = this.dataZoomModel.getPercentRange();\n\n    var viewExtent = this._getViewExtent();\n\n    this._handleEnds = [linearMap(range[0], [0, 100], viewExtent, true), linearMap(range[1], [0, 100], viewExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} delta\n   * @return {boolean} changed\n   */\n  _updateInterval: function (handleIndex, delta) {\n    var dataZoomModel = this.dataZoomModel;\n    var handleEnds = this._handleEnds;\n\n    var viewExtend = this._getViewExtent();\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    var percentExtent = [0, 100];\n    sliderMove(delta, handleEnds, viewExtend, dataZoomModel.get('zoomLock') ? 'all' : handleIndex, minMaxSpan.minSpan != null ? linearMap(minMaxSpan.minSpan, percentExtent, viewExtend, true) : null, minMaxSpan.maxSpan != null ? linearMap(minMaxSpan.maxSpan, percentExtent, viewExtend, true) : null);\n    var lastRange = this._range;\n    var range = this._range = asc([linearMap(handleEnds[0], viewExtend, percentExtent, true), linearMap(handleEnds[1], viewExtend, percentExtent, true)]);\n    return !lastRange || lastRange[0] !== range[0] || lastRange[1] !== range[1];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (nonRealtime) {\n    var displaybles = this._displayables;\n    var handleEnds = this._handleEnds;\n    var handleInterval = asc(handleEnds.slice());\n    var size = this._size;\n    each([0, 1], function (handleIndex) {\n      // Handles\n      var handle = displaybles.handles[handleIndex];\n      var handleHeight = this._handleHeight;\n      handle.attr({\n        scale: [handleHeight / 2, handleHeight / 2],\n        position: [handleEnds[handleIndex], size[1] / 2 - handleHeight / 2]\n      });\n    }, this); // Filler\n\n    displaybles.filler.setShape({\n      x: handleInterval[0],\n      y: 0,\n      width: handleInterval[1] - handleInterval[0],\n      height: size[1]\n    });\n\n    this._updateDataInfo(nonRealtime);\n  },\n\n  /**\n   * @private\n   */\n  _updateDataInfo: function (nonRealtime) {\n    var dataZoomModel = this.dataZoomModel;\n    var displaybles = this._displayables;\n    var handleLabels = displaybles.handleLabels;\n    var orient = this._orient;\n    var labelTexts = ['', '']; // FIXME\n    // date型，支持formatter，autoformatter（ec2 date.getAutoFormatter）\n\n    if (dataZoomModel.get('showDetail')) {\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        var axis = axisProxy.getAxisModel().axis;\n        var range = this._range;\n        var dataInterval = nonRealtime // See #4434, data and axis are not processed and reset yet in non-realtime mode.\n        ? axisProxy.calculateDataWindow({\n          start: range[0],\n          end: range[1]\n        }).valueWindow : axisProxy.getDataValueWindow();\n        labelTexts = [this._formatLabel(dataInterval[0], axis), this._formatLabel(dataInterval[1], axis)];\n      }\n    }\n\n    var orderedHandleEnds = asc(this._handleEnds.slice());\n    setLabel.call(this, 0);\n    setLabel.call(this, 1);\n\n    function setLabel(handleIndex) {\n      // Label\n      // Text should not transform by barGroup.\n      // Ignore handlers transform\n      var barTransform = graphic.getTransform(displaybles.handles[handleIndex].parent, this.group);\n      var direction = graphic.transformDirection(handleIndex === 0 ? 'right' : 'left', barTransform);\n      var offset = this._handleWidth / 2 + LABEL_GAP;\n      var textPoint = graphic.applyTransform([orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset), this._size[1] / 2], barTransform);\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        textVerticalAlign: orient === HORIZONTAL ? 'middle' : direction,\n        textAlign: orient === HORIZONTAL ? direction : 'center',\n        text: labelTexts[handleIndex]\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _formatLabel: function (value, axis) {\n    var dataZoomModel = this.dataZoomModel;\n    var labelFormatter = dataZoomModel.get('labelFormatter');\n    var labelPrecision = dataZoomModel.get('labelPrecision');\n\n    if (labelPrecision == null || labelPrecision === 'auto') {\n      labelPrecision = axis.getPixelPrecision();\n    }\n\n    var valueStr = value == null || isNaN(value) ? '' // FIXME Glue code\n    : axis.type === 'category' || axis.type === 'time' ? axis.scale.getLabel(Math.round(value)) // param of toFixed should less then 20.\n    : value.toFixed(Math.min(labelPrecision, 20));\n    return zrUtil.isFunction(labelFormatter) ? labelFormatter(value, valueStr) : zrUtil.isString(labelFormatter) ? labelFormatter.replace('{value}', valueStr) : valueStr;\n  },\n\n  /**\n   * @private\n   * @param {boolean} showOrHide true: show, false: hide\n   */\n  _showDataInfo: function (showOrHide) {\n    // Always show when drgging.\n    showOrHide = this._dragging || showOrHide;\n    var handleLabels = this._displayables.handleLabels;\n    handleLabels[0].attr('invisible', !showOrHide);\n    handleLabels[1].attr('invisible', !showOrHide);\n  },\n  _onDragMove: function (handleIndex, dx, dy) {\n    this._dragging = true; // Transform dx, dy to bar coordination.\n\n    var barTransform = this._displayables.barGroup.getLocalTransform();\n\n    var vertex = graphic.applyTransform([dx, dy], barTransform, true);\n\n    var changed = this._updateInterval(handleIndex, vertex[0]);\n\n    var realtime = this.dataZoomModel.get('realtime');\n\n    this._updateView(!realtime); // Avoid dispatch dataZoom repeatly but range not changed,\n    // which cause bad visual effect when progressive enabled.\n\n\n    changed && realtime && this._dispatchZoomAction();\n  },\n  _onDragEnd: function () {\n    this._dragging = false;\n\n    this._showDataInfo(false); // While in realtime mode and stream mode, dispatch action when\n    // drag end will cause the whole view rerender, which is unnecessary.\n\n\n    var realtime = this.dataZoomModel.get('realtime');\n    !realtime && this._dispatchZoomAction();\n  },\n  _onClickPanelClick: function (e) {\n    var size = this._size;\n\n    var localPoint = this._displayables.barGroup.transformCoordToLocal(e.offsetX, e.offsetY);\n\n    if (localPoint[0] < 0 || localPoint[0] > size[0] || localPoint[1] < 0 || localPoint[1] > size[1]) {\n      return;\n    }\n\n    var handleEnds = this._handleEnds;\n    var center = (handleEnds[0] + handleEnds[1]) / 2;\n\n    var changed = this._updateInterval('all', localPoint[0] - center);\n\n    this._updateView();\n\n    changed && this._dispatchZoomAction();\n  },\n\n  /**\n   * This action will be throttled.\n   * @private\n   */\n  _dispatchZoomAction: function () {\n    var range = this._range;\n    this.api.dispatchAction({\n      type: 'dataZoom',\n      from: this.uid,\n      dataZoomId: this.dataZoomModel.id,\n      start: range[0],\n      end: range[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _findCoordRect: function () {\n    // Find the grid coresponding to the first axis referred by dataZoom.\n    var rect;\n    each(this.getTargetCoordInfo(), function (coordInfoList) {\n      if (!rect && coordInfoList.length) {\n        var coordSys = coordInfoList[0].model.coordinateSystem;\n        rect = coordSys.getRect && coordSys.getRect();\n      }\n    });\n\n    if (!rect) {\n      var width = this.api.getWidth();\n      var height = this.api.getHeight();\n      rect = {\n        x: width * 0.2,\n        y: height * 0.2,\n        width: width * 0.6,\n        height: height * 0.6\n      };\n    }\n\n    return rect;\n  }\n});\n\nfunction getOtherDim(thisDim) {\n  // FIXME\n  // 这个逻辑和getOtherAxis里一致，但是写在这里是否不好\n  var map = {\n    x: 'y',\n    y: 'x',\n    radius: 'angle',\n    angle: 'radius'\n  };\n  return map[thisDim];\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = SliderZoomView;\nmodule.exports = _default;","var DataZoomModel = require(\"./DataZoomModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    disabled: false,\n    // Whether disable this inside zoom.\n    zoomLock: false,\n    // Whether disable zoom but only pan.\n    zoomOnMouseWheel: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    moveOnMouseMove: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    preventDefaultMouseMove: true\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar roams = require(\"./roams\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar InsideZoomView = DataZoomView.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * 'throttle' is used in this.dispatchAction, so we save range\n     * to avoid missing some 'pan' info.\n     * @private\n     * @type {Array.<number>}\n     */\n    this._range;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    InsideZoomView.superApply(this, 'render', arguments); // Hance the `throttle` util ensures to preserve command order,\n    // here simply updating range all the time will not cause missing\n    // any of the the roam change.\n\n    this._range = dataZoomModel.getPercentRange(); // Reset controllers.\n\n    zrUtil.each(this.getTargetCoordInfo(), function (coordInfoList, coordSysName) {\n      var allCoordIds = zrUtil.map(coordInfoList, function (coordInfo) {\n        return roams.generateCoordId(coordInfo.model);\n      });\n      zrUtil.each(coordInfoList, function (coordInfo) {\n        var coordModel = coordInfo.model;\n        var dataZoomOption = dataZoomModel.option;\n        roams.register(api, {\n          coordId: roams.generateCoordId(coordModel),\n          allCoordIds: allCoordIds,\n          containsPoint: function (e, x, y) {\n            return coordModel.coordinateSystem.containPoint([x, y]);\n          },\n          dataZoomId: dataZoomModel.id,\n          throttleRate: dataZoomModel.get('throttle', true),\n          panGetRange: bind(this._onPan, this, coordInfo, coordSysName),\n          zoomGetRange: bind(this._onZoom, this, coordInfo, coordSysName),\n          zoomLock: dataZoomOption.zoomLock,\n          disabled: dataZoomOption.disabled,\n          roamControllerOpt: {\n            zoomOnMouseWheel: dataZoomOption.zoomOnMouseWheel,\n            moveOnMouseMove: dataZoomOption.moveOnMouseMove,\n            preventDefaultMouseMove: dataZoomOption.preventDefaultMouseMove\n          }\n        });\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    roams.unregister(this.api, this.dataZoomModel.id);\n    InsideZoomView.superApply(this, 'dispose', arguments);\n    this._range = null;\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (coordInfo, coordSysName, controller, dx, dy, oldX, oldY, newX, newY) {\n    var lastRange = this._range;\n    var range = lastRange.slice(); // Calculate transform by the first axis.\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName]([oldX, oldY], [newX, newY], axisModel, controller, coordInfo);\n    var percentDelta = directionInfo.signal * (range[1] - range[0]) * directionInfo.pixel / directionInfo.pixelLength;\n    sliderMove(percentDelta, range, [0, 100], 'all');\n    this._range = range;\n\n    if (lastRange[0] !== range[0] || lastRange[1] !== range[1]) {\n      return range;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (coordInfo, coordSysName, controller, scale, mouseX, mouseY) {\n    var lastRange = this._range;\n    var range = lastRange.slice(); // Calculate transform by the first axis.\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName](null, [mouseX, mouseY], axisModel, controller, coordInfo);\n    var percentPoint = (directionInfo.signal > 0 ? directionInfo.pixelStart + directionInfo.pixelLength - directionInfo.pixel : directionInfo.pixel - directionInfo.pixelStart) / directionInfo.pixelLength * (range[1] - range[0]) + range[0];\n    scale = Math.max(1 / scale, 0);\n    range[0] = (range[0] - percentPoint) * scale + percentPoint;\n    range[1] = (range[1] - percentPoint) * scale + percentPoint; // Restrict range.\n\n    var minMaxSpan = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    sliderMove(0, range, [0, 100], 0, minMaxSpan.minSpan, minMaxSpan.maxSpan);\n    this._range = range;\n\n    if (lastRange[0] !== range[0] || lastRange[1] !== range[1]) {\n      return range;\n    }\n  }\n});\nvar getDirectionInfo = {\n  grid: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.dim === 'x') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // axis.dim === 'y'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  polar: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var polar = coordInfo.model.coordinateSystem;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var angleExtent = polar.getAngleAxis().getExtent();\n    oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\n    newPoint = polar.pointToCoord(newPoint);\n\n    if (axisModel.mainType === 'radiusAxis') {\n      ret.pixel = newPoint[0] - oldPoint[0]; // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\n      // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\n\n      ret.pixelLength = radiusExtent[1] - radiusExtent[0];\n      ret.pixelStart = radiusExtent[0];\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'angleAxis'\n      ret.pixel = newPoint[1] - oldPoint[1]; // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\n      // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\n\n      ret.pixelLength = angleExtent[1] - angleExtent[0];\n      ret.pixelStart = angleExtent[0];\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  singleAxis: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    var ret = {};\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.orient === 'horizontal') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'vertical'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  }\n};\nvar _default = InsideZoomView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Only create one roam controller for each coordinate system.\n// one roam controller might be refered by two inside data zoom\n// components (for example, one for x and one for y). When user\n// pan or zoom, only dispatch one action for those data zoom\n// components.\nvar curry = zrUtil.curry;\nvar ATTR = '\\0_ec_dataZoom_roams';\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} dataZoomInfo\n * @param {string} dataZoomInfo.coordId\n * @param {Function} dataZoomInfo.containsPoint\n * @param {Array.<string>} dataZoomInfo.allCoordIds\n * @param {string} dataZoomInfo.dataZoomId\n * @param {number} dataZoomInfo.throttleRate\n * @param {Function} dataZoomInfo.panGetRange\n * @param {Function} dataZoomInfo.zoomGetRange\n * @param {boolean} [dataZoomInfo.zoomLock]\n * @param {boolean} [dataZoomInfo.disabled]\n */\n\nfunction register(api, dataZoomInfo) {\n  var store = giveStore(api);\n  var theDataZoomId = dataZoomInfo.dataZoomId;\n  var theCoordId = dataZoomInfo.coordId; // Do clean when a dataZoom changes its target coordnate system.\n  // Avoid memory leak, dispose all not-used-registered.\n\n  zrUtil.each(store, function (record, coordId) {\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[theDataZoomId] && zrUtil.indexOf(dataZoomInfo.allCoordIds, theCoordId) < 0) {\n      delete dataZoomInfos[theDataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n  var record = store[theCoordId]; // Create if needed.\n\n  if (!record) {\n    record = store[theCoordId] = {\n      coordId: theCoordId,\n      dataZoomInfos: {},\n      count: 0\n    };\n    record.controller = createController(api, record);\n    record.dispatchAction = zrUtil.curry(dispatchAction, api);\n  } // Update reference of dataZoom.\n\n\n  !record.dataZoomInfos[theDataZoomId] && record.count++;\n  record.dataZoomInfos[theDataZoomId] = dataZoomInfo;\n  var controllerParams = mergeControllerParams(record.dataZoomInfos);\n  record.controller.enable(controllerParams.controlType, controllerParams.opt); // Consider resize, area should be always updated.\n\n  record.controller.setPointerChecker(dataZoomInfo.containsPoint); // Update throttle.\n\n  throttleUtil.createOrUpdate(record, 'dispatchAction', dataZoomInfo.throttleRate, 'fixRate');\n}\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {string} dataZoomId\n */\n\n\nfunction unregister(api, dataZoomId) {\n  var store = giveStore(api);\n  zrUtil.each(store, function (record) {\n    record.controller.dispose();\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[dataZoomId]) {\n      delete dataZoomInfos[dataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n}\n/**\n * @public\n */\n\n\nfunction generateCoordId(coordModel) {\n  return coordModel.type + '\\0_' + coordModel.id;\n}\n/**\n * Key: coordId, value: {dataZoomInfos: [], count, controller}\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(api) {\n  // Mount store on zrender instance, so that we do not\n  // need to worry about dispose.\n  var zr = api.getZr();\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n\nfunction createController(api, newRecord) {\n  var controller = new RoamController(api.getZr());\n  controller.on('pan', curry(onPan, newRecord));\n  controller.on('zoom', curry(onZoom, newRecord));\n  return controller;\n}\n\nfunction cleanStore(store) {\n  zrUtil.each(store, function (record, coordId) {\n    if (!record.count) {\n      record.controller.dispose();\n      delete store[coordId];\n    }\n  });\n}\n\nfunction onPan(record, dx, dy, oldX, oldY, newX, newY) {\n  wrapAndDispatch(record, function (info) {\n    return info.panGetRange(record.controller, dx, dy, oldX, oldY, newX, newY);\n  });\n}\n\nfunction onZoom(record, scale, mouseX, mouseY) {\n  wrapAndDispatch(record, function (info) {\n    return info.zoomGetRange(record.controller, scale, mouseX, mouseY);\n  });\n}\n\nfunction wrapAndDispatch(record, getRange) {\n  var batch = [];\n  zrUtil.each(record.dataZoomInfos, function (info) {\n    var range = getRange(info);\n    !info.disabled && range && batch.push({\n      dataZoomId: info.dataZoomId,\n      start: range[0],\n      end: range[1]\n    });\n  });\n  batch.length && record.dispatchAction(batch);\n}\n/**\n * This action will be throttled.\n */\n\n\nfunction dispatchAction(api, batch) {\n  api.dispatchAction({\n    type: 'dataZoom',\n    batch: batch\n  });\n}\n/**\n * Merge roamController settings when multiple dataZooms share one roamController.\n */\n\n\nfunction mergeControllerParams(dataZoomInfos) {\n  var controlType;\n  var opt = {}; // DO NOT use reserved word (true, false, undefined) as key literally. Even if encapsulated\n  // as string, it is probably revert to reserved word by compress tool. See #7411.\n\n  var prefix = 'type_';\n  var typePriority = {\n    'type_true': 2,\n    'type_move': 1,\n    'type_false': 0,\n    'type_undefined': -1\n  };\n  zrUtil.each(dataZoomInfos, function (dataZoomInfo) {\n    var oneType = dataZoomInfo.disabled ? false : dataZoomInfo.zoomLock ? 'move' : true;\n\n    if (typePriority[prefix + oneType] > typePriority[prefix + controlType]) {\n      controlType = oneType;\n    } // Do not support that different 'shift'/'ctrl'/'alt' setting used in one coord sys.\n\n\n    zrUtil.extend(opt, dataZoomInfo.roamControllerOpt);\n  });\n  return {\n    controlType: controlType,\n    opt: opt\n  };\n}\n\nexports.register = register;\nexports.unregister = unregister;\nexports.generateCoordId = generateCoordId;","var MarkerModel = require(\"./MarkerModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = MarkerModel.extend({\n  type: 'markLine',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: ['circle', 'arrow'],\n    symbolSize: [8, 16],\n    //symbolRotate: 0,\n    precision: 2,\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      show: true,\n      position: 'end'\n    },\n    lineStyle: {\n      type: 'dashed'\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        width: 3\n      }\n    },\n    animationEasing: 'linear'\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar LineDraw = require(\"../../chart/helper/LineDraw\");\n\nvar MarkerView = require(\"./MarkerView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar markLineTransform = function (seriesModel, coordSys, mlModel, item) {\n  var data = seriesModel.getData(); // Special type markLine like 'min', 'max', 'average', 'median'\n\n  var mlType = item.type;\n\n  if (!zrUtil.isArray(item) && (mlType === 'min' || mlType === 'max' || mlType === 'average' || mlType === 'median' // In case\n  // data: [{\n  //   yAxis: 10\n  // }]\n  || item.xAxis != null || item.yAxis != null)) {\n    var valueAxis;\n    var valueDataDim;\n    var value;\n\n    if (item.yAxis != null || item.xAxis != null) {\n      valueDataDim = item.yAxis != null ? 'y' : 'x';\n      valueAxis = coordSys.getAxis(valueDataDim);\n      value = zrUtil.retrieve(item.yAxis, item.xAxis);\n    } else {\n      var axisInfo = markerHelper.getAxisInfo(item, data, coordSys, seriesModel);\n      valueDataDim = axisInfo.valueDataDim;\n      valueAxis = axisInfo.valueAxis;\n      value = markerHelper.numCalculate(data, valueDataDim, mlType);\n    }\n\n    var valueIndex = valueDataDim === 'x' ? 0 : 1;\n    var baseIndex = 1 - valueIndex;\n    var mlFrom = zrUtil.clone(item);\n    var mlTo = {};\n    mlFrom.type = null;\n    mlFrom.coord = [];\n    mlTo.coord = [];\n    mlFrom.coord[baseIndex] = -Infinity;\n    mlTo.coord[baseIndex] = Infinity;\n    var precision = mlModel.get('precision');\n\n    if (precision >= 0 && typeof value === 'number') {\n      value = +value.toFixed(Math.min(precision, 20));\n    }\n\n    mlFrom.coord[valueIndex] = mlTo.coord[valueIndex] = value;\n    item = [mlFrom, mlTo, {\n      // Extra option for tooltip and label\n      type: mlType,\n      valueIndex: item.valueIndex,\n      // Force to use the value of calculated value.\n      value: value\n    }];\n  }\n\n  item = [markerHelper.dataTransform(seriesModel, item[0]), markerHelper.dataTransform(seriesModel, item[1]), zrUtil.extend({}, item[2])]; // Avoid line data type is extended by from(to) data type\n\n  item[2].type = item[2].type || ''; // Merge from option and to option into line option\n\n  zrUtil.merge(item[2], item[0]);\n  zrUtil.merge(item[2], item[1]);\n  return item;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markLine has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  var dimName = coordSys.dimensions[dimIndex];\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]) && fromCoord[dimIndex] === toCoord[dimIndex] && coordSys.getAxis(dimName).containData(fromCoord[dimIndex]);\n}\n\nfunction markLineFilter(coordSys, item) {\n  if (coordSys.type === 'cartesian2d') {\n    var fromCoord = item[0].coord;\n    var toCoord = item[1].coord; // In case\n    // {\n    //  markLine: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, item[0]) && markerHelper.dataFilter(coordSys, item[1]);\n}\n\nfunction updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(data.dimensions, idx));\n    } else {\n      var dims = coordSys.dimensions;\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      point = coordSys.dataToPoint([x, y]);\n    } // Expand line to the edge of grid if value on one axis is Inifnity\n    // In case\n    //  markLine: {\n    //    data: [{\n    //      yAxis: 2\n    //      // or\n    //      type: 'average'\n    //    }]\n    //  }\n\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var dims = coordSys.dimensions;\n\n      if (isInifinity(data.get(dims[0], idx))) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[isFrom ? 0 : 1]);\n      } else if (isInifinity(data.get(dims[1], idx))) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[isFrom ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  data.setItemLayout(idx, point);\n}\n\nvar _default = MarkerView.extend({\n  type: 'markLine',\n  // updateLayout: function (markLineModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mlModel = seriesModel.markLineModel;\n  //         if (mlModel) {\n  //             var mlData = mlModel.getData();\n  //             var fromData = mlModel.__from;\n  //             var toData = mlModel.__to;\n  //             // Update visual and layout of from symbol and to symbol\n  //             fromData.each(function (idx) {\n  //                 updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n  //                 updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n  //             });\n  //             // Update layout of line\n  //             mlData.each(function (idx) {\n  //                 mlData.setItemLayout(idx, [\n  //                     fromData.getItemLayout(idx),\n  //                     toData.getItemLayout(idx)\n  //                 ]);\n  //             });\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout();\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markLineModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mlModel = seriesModel.markLineModel;\n\n      if (mlModel) {\n        var mlData = mlModel.getData();\n        var fromData = mlModel.__from;\n        var toData = mlModel.__to; // Update visual and layout of from symbol and to symbol\n\n        fromData.each(function (idx) {\n          updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n          updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n        }); // Update layout of line\n\n        mlData.each(function (idx) {\n          mlData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n        });\n        this.markerGroupMap.get(seriesModel.id).updateLayout();\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mlModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var lineDrawMap = this.markerGroupMap;\n    var lineDraw = lineDrawMap.get(seriesId) || lineDrawMap.set(seriesId, new LineDraw());\n    this.group.add(lineDraw.group);\n    var mlData = createList(coordSys, seriesModel, mlModel);\n    var fromData = mlData.from;\n    var toData = mlData.to;\n    var lineData = mlData.line;\n    mlModel.__from = fromData;\n    mlModel.__to = toData; // Line data for tooltip and formatter\n\n    mlModel.setData(lineData);\n    var symbolType = mlModel.get('symbol');\n    var symbolSize = mlModel.get('symbolSize');\n\n    if (!zrUtil.isArray(symbolType)) {\n      symbolType = [symbolType, symbolType];\n    }\n\n    if (typeof symbolSize === 'number') {\n      symbolSize = [symbolSize, symbolSize];\n    } // Update visual and layout of from symbol and to symbol\n\n\n    mlData.from.each(function (idx) {\n      updateDataVisualAndLayout(fromData, idx, true);\n      updateDataVisualAndLayout(toData, idx, false);\n    }); // Update visual and layout of line\n\n    lineData.each(function (idx) {\n      var lineColor = lineData.getItemModel(idx).get('lineStyle.color');\n      lineData.setItemVisual(idx, {\n        color: lineColor || fromData.getItemVisual(idx, 'color')\n      });\n      lineData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n      lineData.setItemVisual(idx, {\n        'fromSymbolSize': fromData.getItemVisual(idx, 'symbolSize'),\n        'fromSymbol': fromData.getItemVisual(idx, 'symbol'),\n        'toSymbolSize': toData.getItemVisual(idx, 'symbolSize'),\n        'toSymbol': toData.getItemVisual(idx, 'symbol')\n      });\n    });\n    lineDraw.updateData(lineData); // Set host model for tooltip\n    // FIXME\n\n    mlData.line.eachItemGraphicEl(function (el, idx) {\n      el.traverse(function (child) {\n        child.dataModel = mlModel;\n      });\n    });\n\n    function updateDataVisualAndLayout(data, idx, isFrom) {\n      var itemModel = data.getItemModel(idx);\n      updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api);\n      data.setItemVisual(idx, {\n        symbolSize: itemModel.get('symbolSize') || symbolSize[isFrom ? 0 : 1],\n        symbol: itemModel.get('symbol', true) || symbolType[isFrom ? 0 : 1],\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color')\n      });\n    }\n\n    lineDraw.__keep = true;\n    lineDraw.group.silent = mlModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mlModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var fromData = new List(coordDimsInfos, mlModel);\n  var toData = new List(coordDimsInfos, mlModel); // No dimensions\n\n  var lineData = new List([], mlModel);\n  var optData = zrUtil.map(mlModel.get('data'), zrUtil.curry(markLineTransform, seriesModel, coordSys, mlModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markLineFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  };\n  fromData.initData(zrUtil.map(optData, function (item) {\n    return item[0];\n  }), null, dimValueGetter);\n  toData.initData(zrUtil.map(optData, function (item) {\n    return item[1];\n  }), null, dimValueGetter);\n  lineData.initData(zrUtil.map(optData, function (item) {\n    return item[2];\n  }));\n  lineData.hasItemOption = true;\n  return {\n    from: fromData,\n    to: toData,\n    line: lineData\n  };\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"./featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ToolboxModel = echarts.extendComponentModel({\n  type: 'toolbox',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  optionUpdated: function () {\n    ToolboxModel.superApply(this, 'optionUpdated', arguments);\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n      var Feature = featureManager.get(featureName);\n      Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n    });\n  },\n  defaultOption: {\n    show: true,\n    z: 6,\n    zlevel: 0,\n    orient: 'horizontal',\n    left: 'right',\n    top: 'top',\n    // right\n    // bottom\n    backgroundColor: 'transparent',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemSize: 15,\n    itemGap: 8,\n    showTitle: true,\n    iconStyle: {\n      borderColor: '#666',\n      color: 'none'\n    },\n    emphasis: {\n      iconStyle: {\n        borderColor: '#3E98C5'\n      } // textStyle: {},\n      // feature\n\n    }\n  }\n});\nvar _default = ToolboxModel;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar listComponentHelper = require(\"../helper/listComponent\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'toolbox',\n  render: function (toolboxModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n\n    if (!toolboxModel.get('show')) {\n      return;\n    }\n\n    var itemSize = +toolboxModel.get('itemSize');\n    var featureOpts = toolboxModel.get('feature') || {};\n    var features = this._features || (this._features = {});\n    var featureNames = [];\n    zrUtil.each(featureOpts, function (opt, name) {\n      featureNames.push(name);\n    });\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\n\n    this._featureNames = featureNames;\n\n    function processFeature(newIndex, oldIndex) {\n      var featureName = featureNames[newIndex];\n      var oldName = featureNames[oldIndex];\n      var featureOpt = featureOpts[featureName];\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n      var feature;\n\n      if (featureName && !oldName) {\n        // Create\n        if (isUserFeatureName(featureName)) {\n          feature = {\n            model: featureModel,\n            onclick: featureModel.option.onclick,\n            featureName: featureName\n          };\n        } else {\n          var Feature = featureManager.get(featureName);\n\n          if (!Feature) {\n            return;\n          }\n\n          feature = new Feature(featureModel, ecModel, api);\n        }\n\n        features[featureName] = feature;\n      } else {\n        feature = features[oldName]; // If feature does not exsit.\n\n        if (!feature) {\n          return;\n        }\n\n        feature.model = featureModel;\n        feature.ecModel = ecModel;\n        feature.api = api;\n      }\n\n      if (!featureName && oldName) {\n        feature.dispose && feature.dispose(ecModel, api);\n        return;\n      }\n\n      if (!featureModel.get('show') || feature.unusable) {\n        feature.remove && feature.remove(ecModel, api);\n        return;\n      }\n\n      createIconPaths(featureModel, feature, featureName);\n\n      featureModel.setIconStatus = function (iconName, status) {\n        var option = this.option;\n        var iconPaths = this.iconPaths;\n        option.iconStatus = option.iconStatus || {};\n        option.iconStatus[iconName] = status; // FIXME\n\n        iconPaths[iconName] && iconPaths[iconName].trigger(status);\n      };\n\n      if (feature.render) {\n        feature.render(featureModel, ecModel, api, payload);\n      }\n    }\n\n    function createIconPaths(featureModel, feature, featureName) {\n      var iconStyleModel = featureModel.getModel('iconStyle');\n      var iconStyleEmphasisModel = featureModel.getModel('emphasis.iconStyle'); // If one feature has mutiple icon. they are orginaized as\n      // {\n      //     icon: {\n      //         foo: '',\n      //         bar: ''\n      //     },\n      //     title: {\n      //         foo: '',\n      //         bar: ''\n      //     }\n      // }\n\n      var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n      var titles = featureModel.get('title') || {};\n\n      if (typeof icons === 'string') {\n        var icon = icons;\n        var title = titles;\n        icons = {};\n        titles = {};\n        icons[featureName] = icon;\n        titles[featureName] = title;\n      }\n\n      var iconPaths = featureModel.iconPaths = {};\n      zrUtil.each(icons, function (iconStr, iconName) {\n        var path = graphic.createIcon(iconStr, {}, {\n          x: -itemSize / 2,\n          y: -itemSize / 2,\n          width: itemSize,\n          height: itemSize\n        });\n        path.setStyle(iconStyleModel.getItemStyle());\n        path.hoverStyle = iconStyleEmphasisModel.getItemStyle();\n        graphic.setHoverStyle(path);\n\n        if (toolboxModel.get('showTitle')) {\n          path.__title = titles[iconName];\n          path.on('mouseover', function () {\n            // Should not reuse above hoverStyle, which might be modified.\n            var hoverStyle = iconStyleEmphasisModel.getItemStyle();\n            path.setStyle({\n              text: titles[iconName],\n              textPosition: hoverStyle.textPosition || 'bottom',\n              textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n              textAlign: hoverStyle.textAlign || 'center'\n            });\n          }).on('mouseout', function () {\n            path.setStyle({\n              textFill: null\n            });\n          });\n        }\n\n        path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n        group.add(path);\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\n        iconPaths[iconName] = path;\n      });\n    }\n\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\n    // FIXME\n\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\n\n    group.eachChild(function (icon) {\n      var titleText = icon.__title;\n      var hoverStyle = icon.hoverStyle; // May be background element\n\n      if (hoverStyle && titleText) {\n        var rect = textContain.getBoundingRect(titleText, textContain.makeFont(hoverStyle));\n        var offsetX = icon.position[0] + group.position[0];\n        var offsetY = icon.position[1] + group.position[1] + itemSize;\n        var needPutOnTop = false;\n\n        if (offsetY + rect.height > api.getHeight()) {\n          hoverStyle.textPosition = 'top';\n          needPutOnTop = true;\n        }\n\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\n\n        if (offsetX + rect.width / 2 > api.getWidth()) {\n          hoverStyle.textPosition = ['100%', topOffset];\n          hoverStyle.textAlign = 'right';\n        } else if (offsetX - rect.width / 2 < 0) {\n          hoverStyle.textPosition = [0, topOffset];\n          hoverStyle.textAlign = 'left';\n        }\n      }\n    });\n  },\n  updateView: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n    });\n  },\n  // updateLayout: function (toolboxModel, ecModel, api, payload) {\n  //     zrUtil.each(this._features, function (feature) {\n  //         feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n  //     });\n  // },\n  remove: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.remove && feature.remove(ecModel, api);\n    });\n    this.group.removeAll();\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.dispose && feature.dispose(ecModel, api);\n    });\n  }\n});\n\nfunction isUserFeatureName(featureName) {\n  return featureName.indexOf('my') === 0;\n}\n\nmodule.exports = _default;","var env = require(\"zrender/lib/core/env\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar saveAsImageLang = lang.toolbox.saveAsImage;\n\nfunction SaveAsImage(model) {\n  this.model = model;\n}\n\nSaveAsImage.defaultOption = {\n  show: true,\n  icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n  title: saveAsImageLang.title,\n  type: 'png',\n  // Default use option.backgroundColor\n  // backgroundColor: '#fff',\n  name: '',\n  excludeComponents: ['toolbox'],\n  pixelRatio: 1,\n  lang: saveAsImageLang.lang.slice()\n};\nSaveAsImage.prototype.unusable = !env.canvasSupported;\nvar proto = SaveAsImage.prototype;\n\nproto.onclick = function (ecModel, api) {\n  var model = this.model;\n  var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n  var $a = document.createElement('a');\n  var type = model.get('type', true) || 'png';\n  $a.download = title + '.' + type;\n  $a.target = '_blank';\n  var url = api.getConnectedDataURL({\n    type: type,\n    backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\n    excludeComponents: model.get('excludeComponents'),\n    pixelRatio: model.get('pixelRatio')\n  });\n  $a.href = url; // Chrome and Firefox\n\n  if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n    var evt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: false\n    });\n    $a.dispatchEvent(evt);\n  } // IE\n  else {\n      if (window.navigator.msSaveOrOpenBlob) {\n        var bstr = atob(url.split(',')[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        var blob = new Blob([u8arr]);\n        window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n      } else {\n        var lang = model.get('lang');\n        var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\n        var tab = window.open();\n        tab.document.write(html);\n      }\n    }\n};\n\nfeatureManager.register('saveAsImage', SaveAsImage);\nvar _default = SaveAsImage;\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar magicTypeLang = lang.toolbox.magicType;\n\nfunction MagicType(model) {\n  this.model = model;\n}\n\nMagicType.defaultOption = {\n  show: true,\n  type: [],\n  // Icon group\n  icon: {\n    line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n    bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n    stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z',\n    // jshint ignore:line\n    tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n  },\n  // `line`, `bar`, `stack`, `tiled`\n  title: zrUtil.clone(magicTypeLang.title),\n  option: {},\n  seriesIndex: {}\n};\nvar proto = MagicType.prototype;\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon');\n  var icons = {};\n  zrUtil.each(model.get('type'), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nvar seriesOptGenreator = {\n  'line': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'line',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.line') || {}, true);\n    }\n  },\n  'bar': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'bar',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.bar') || {}, true);\n    }\n  },\n  'stack': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: '__ec_magicType_stack__'\n      }, model.get('option.stack') || {}, true);\n    }\n  },\n  'tiled': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: ''\n      }, model.get('option.tiled') || {}, true);\n    }\n  }\n};\nvar radioTypes = [['line', 'bar'], ['stack', 'tiled']];\n\nproto.onclick = function (ecModel, api, type) {\n  var model = this.model;\n  var seriesIndex = model.get('seriesIndex.' + type); // Not supported magicType\n\n  if (!seriesOptGenreator[type]) {\n    return;\n  }\n\n  var newOption = {\n    series: []\n  };\n\n  var generateNewSeriesTypes = function (seriesModel) {\n    var seriesType = seriesModel.subType;\n    var seriesId = seriesModel.id;\n    var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\n\n    if (newSeriesOpt) {\n      // PENDING If merge original option?\n      zrUtil.defaults(newSeriesOpt, seriesModel.option);\n      newOption.series.push(newSeriesOpt);\n    } // Modify boundaryGap\n\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n      var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n      if (categoryAxis) {\n        var axisDim = categoryAxis.dim;\n        var axisType = axisDim + 'Axis';\n        var axisModel = ecModel.queryComponents({\n          mainType: axisType,\n          index: seriesModel.get(name + 'Index'),\n          id: seriesModel.get(name + 'Id')\n        })[0];\n        var axisIndex = axisModel.componentIndex;\n        newOption[axisType] = newOption[axisType] || [];\n\n        for (var i = 0; i <= axisIndex; i++) {\n          newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n        }\n\n        newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n      }\n    }\n  };\n\n  zrUtil.each(radioTypes, function (radio) {\n    if (zrUtil.indexOf(radio, type) >= 0) {\n      zrUtil.each(radio, function (item) {\n        model.setIconStatus(item, 'normal');\n      });\n    }\n  });\n  model.setIconStatus(type, 'emphasis');\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: seriesIndex == null ? null : {\n      seriesIndex: seriesIndex\n    }\n  }, generateNewSeriesTypes);\n  api.dispatchAction({\n    type: 'changeMagicType',\n    currentType: type,\n    newOption: newOption\n  });\n};\n\necharts.registerAction({\n  type: 'changeMagicType',\n  event: 'magicTypeChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.mergeOption(payload.newOption);\n});\nfeatureManager.register('magicType', MagicType);\nvar _default = MagicType;\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton); // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n\n  eventTool.addEventListener(textarea, 'keydown', function (e) {\n    if ((e.keyCode || e.which) === 9) {\n      // get caret position/selection\n      var val = this.value;\n      var start = this.selectionStart;\n      var end = this.selectionEnd; // set textarea value to: text before caret + tab + text after caret\n\n      this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end); // put caret at right position again\n\n      this.selectionStart = this.selectionEnd = start + 1; // prevent the focus lose\n\n      eventTool.stop(e);\n    }\n  });\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../../helper/BrushController\");\n\nvar BrushTargetManager = require(\"../../helper/BrushTargetManager\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar sliderMove = require(\"../../helper/sliderMove\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nrequire(\"../../dataZoomSelect\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Use dataZoomSelect\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title)\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function () {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function () {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: {\n      // FIXME user customized?\n      lineWidth: 0,\n      fill: 'rgba(0,0,0,0.2)'\n    }\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n// FIXME consider the case of merge option, where axes options are not exists.\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom; // FIXME: If add dataZoom when setOption in merge mode,\n      // no axis info to be added. See `test/dataZoom-extreme.html`\n\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices != 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices != 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SelectZoomModel\");\n\nrequire(\"./dataZoom/SelectZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","var DataZoomModel = require(\"./DataZoomModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;","var DataZoomView = require(\"./DataZoomView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = DataZoomView.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar restoreLang = lang.toolbox.restore;\n\nfunction Restore(model) {\n  this.model = model;\n}\n\nRestore.defaultOption = {\n  show: true,\n  icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n  title: restoreLang.title\n};\nvar proto = Restore.prototype;\n\nproto.onclick = function (ecModel, api, type) {\n  history.clear(ecModel);\n  api.dispatchAction({\n    type: 'restore',\n    from: this.uid\n  });\n};\n\nfeatureManager.register('restore', Restore);\necharts.registerAction({\n  type: 'restore',\n  event: 'restore',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.resetOption('recreate');\n});\nvar _default = Restore;\nmodule.exports = _default;"],"sourceRoot":""}