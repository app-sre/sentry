{"version":3,"sources":["webpack:///./app/components/betaTag.jsx","webpack:////usr/src/sentry/node_modules/lodash/throttle.js","webpack:///./app/views/organizationDiscover/styles.jsx","webpack:///./app/views/organizationDiscover/conditions/utils.jsx","webpack:///./app/views/organizationDiscover/aggregations/aggregation.jsx","webpack:///./app/views/organizationDiscover/aggregations/index.jsx","webpack:///./app/views/organizationDiscover/conditions/condition.jsx","webpack:///./app/views/organizationDiscover/conditions/index.jsx","webpack:///./app/views/organizationDiscover/sidebar/orderby.jsx","webpack:///./app/views/organizationDiscover/sidebar/queryFields.jsx","webpack:///./app/views/organizationDiscover/sidebar/editSavedQuery.jsx","webpack:///./app/views/organizationDiscover/intro.jsx","webpack:///./app/views/organizationDiscover/sidebar/newQuery.jsx","webpack:///./app/views/organizationDiscover/sidebar/queryPanel.jsx","webpack:///./app/views/organizationDiscover/result/table.jsx","webpack:///./app/views/organizationDiscover/result/pagination.jsx","webpack:///./app/views/organizationDiscover/result/visualizationsToggle.jsx","webpack:///./app/views/organizationDiscover/result/index.jsx","webpack:///./app/views/organizationDiscover/result/loading.jsx","webpack:///./app/views/organizationDiscover/sidebar/savedQueryList.jsx","webpack:///./app/views/organizationDiscover/discover.jsx","webpack:///./app/views/organizationDiscover/analytics.jsx","webpack:///./app/views/organizationDiscover/resultManager.jsx","webpack:///./app/views/organizationDiscover/index.jsx"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_emotion__WEBPACK_IMPORTED_MODULE_1__","app_views_settings_components_tag__WEBPACK_IMPORTED_MODULE_2__","app_components_tooltip__WEBPACK_IMPORTED_MODULE_3__","app_styles_space__WEBPACK_IMPORTED_MODULE_4__","app_locale__WEBPACK_IMPORTED_MODULE_5__","StyledTag","styled","Tag","target","p","theme","fontSizeSmall","space","BetaTag","a","createElement","title","t","tooltipOptions","placement","priority","size","debounce","isObject","FUNC_ERROR_TEXT","module","exports","func","wait","options","leading","trailing","TypeError","maxWait","DiscoverWrapper","Flex","DiscoverContainer","DiscoverGlobalSelectionHeader","GlobalSelectionHeader","ResultViewActions","borderLight","breakpoints","ResultViewButtons","NavTabs","ResultViewDropdownButtons","DownloadCsvButton","Button","Sidebar","props","react_default","index_es","extends_default","direction","w","borderDark","QueryFieldsSidebar","DocsSeparator","DocsLink","ExternalLink","gray4","blue","StyledInlineSvg","InlineSvg","DiscoverDocs","DocsLabel","DocsIcon","Body","BodyContent","whiteDark","LoadingContainer","SidebarTabs","navTabs","underlined","PlaceholderText","gray6","HeadingContainer","Fieldset","SelectListItem","SidebarLabel","gray3","QueryFieldsContainer","AddText","gray1","spin","keyframes","ButtonSpinner","purple","ResultSummary","Box","ResultSummaryAndButtons","ResultContainer","ResultInnerContainer","ChartWrapper","Panel","ChartNote","fontSizeMedium","SavedQueryAction","Link","SavedQueryWrapper","SavedQueryList","SavedQueryListItem","_ref","isActive","objectWithoutProperties_default","panels","white","SavedQueryLink","SavedQueryUpdated","QueryPanelContainer","slideInLeft","QueryPanelTitle","QueryPanelCloseLink","specialConditions","Set","isValidCondition","condition","cols","allOperators","CONDITION_OPERATORS","isColValid","map","name","has","isOperatorValid","colType","find","col","type","isValueValid","typeof_default","getInternal","external","join","trim","getExternal","internal","columns","colValue","split","_ref2","remaining","replace","forEach","operator","startsWith","strStart","concat","_ref3","num","parseInt","isNaN","date","moment","utc","isValid","format","ignoreCase","input","arguments","length","undefined","colName","match","i","toUpperCase","slice","Aggregation","_this","classCallCheck_default","this","possibleConstructorReturn_default","getPrototypeOf_default","call","filterOptions","state","inputValue","optionList","value","label","filter","ARRAY_FIELD_PREFIXES","some","prefix","_ref4","_ref5","includes","handleChange","option","setState","focus","isOpen","onChange","handleOpen","inputRenderer","evt","style","width","border","backgroundColor","valueComponent","react_select_es","handleInputChange","currentValue","select","_this2","selectControl","innerRef","ref","placeholder","getOptions","onOpen","closeOnSelect","openOnFocus","autoBlur","clearable","backspaceRemoves","deleteRemoves","onInputChange","disabled","React","Component","propTypes","PropTypes","array","isRequired","bool","Aggregations","toConsumableArray_default","idx","aggregations","splice","val","_this$props","components_link","onClick","addRow","aggregation","key","aggregation_Aggregation","ml","removeRow","inlineSvg","src","height","Condition","hasSelectedColumn","hasSelectedOperator","selectedColumn","getConditionsForColumn","op","isValidNewOption","zIndex","shouldKeyDownEventCreateNewOption","keyCode","handleBlur","newOptionCreator","labelKey","valueKey","defineProperty_default","column","_ref6","numberOnlyOperators","stringOnlyOperators","onBlur","creatable","promptTextCreator","text","arrayOf","shape","string","Conditions","conditions","condition_Condition","Orderby","field","orderby","_this$getInternal","Fragment","className","OrderbyField","updateField","OrderbyValue","updateDirection","QueryFields","getSummarizePlaceholder","queryBuilder","optionRenderer","isTag","align","badge","onUpdateField","actions","isLoading","savedQuery","savedQueryName","onUpdateName","currentQuery","getColumns","columnsForConditions","NON_CONDITIONS_FIELDS","fieldOptions","htmlFor","textField","getDynamicText","fixed","multiple","fields","aggregations_Aggregations","conditions_Conditions","orderby_Orderby","getOrderbyFields","numberField","limit","href","object","node","SentryTypes","DiscoverSavedQuery","EditSavedQuery","isEqual_default","parseSavedQuery","_this$props2","isFetchingQuery","onRunQuery","onDeleteQuery","onSaveQuery","queryFields_QueryFields","handleUpdateName","justify","mr","components_button","busy","hasChanges","data-test-id","Intro","description","query","IntroContainer","Heading","TextBlock","tct","docs","externalLink","getExampleQueries","ExampleQuery","ExampleQueryDescription","updateQuery","fontSizeLarge","gray5","fontSizeExtraLarge","NewQuery","organization","generateQueryName","data","objectSpread_default","createSavedQuery","then","addSuccessMessage","browserHistory","push","pathname","slug","id","editing","catch","err","message","detail","addErrorMessage","onReset","saveQuery","Organization","QueryPanel","onClose","pageHeading","children","TABLE_ROW_HEIGHT","TABLE_ROW_BORDER","TABLE_ROW_HEIGHT_WITH_BORDER","MIN_COL_WIDTH","MAX_COL_WIDTH","CELL_PADDING","MIN_VISIBLE_ROWS","MAX_VISIBLE_ROWS","OTHER_ELEMENTS_HEIGHT","ResultTable","getCellRenderer","rowIndex","columnIndex","_this$props$data","meta","isSpacingCol","TableHeader","getDisplayValue","getEventLink","getIssueLink","Cell","isOddRow","hasSentry10","features","event","_this$props$organizat","projectSlug","projects","project","basePath","tooltip","_this$props$organizat2","to","getColumnWidths","tableWidth","getColumnList","widths","sizes","measureText","row","colData","getDisplayText","sort","b","Math","max","min","apply","sumOfWidths","reduce","sum","getRowHeight","columnsToCheck","colWidths","maxColWidth","rows","ceil","agg","isHeader","canvas","document","context","getContext","font","getMaxVisibleRows","elementHeight","visibleRows","floor","prevProps","grid","recomputeGridSize","forceUpdate","_this3","colCount","cellRenderer","panel","Grid","dist_es","columnWidths","acc","colWidth","rowCount","columnCount","fixedRowCount","rowHeight","index","columnWidth","overscanByPixels","emptyStateWarning","small","error","renderTable","number","withOrganization","offWhite","Pagination","getPreviousPage","getNextPage","previous","next","PaginationButtons","icon","VisualizationsToggle","getMenuItem","opt","menuItem","onSelect","eventKey","visualization","getButtonItems","active","classNames","getDownloadCsvButton","handleCsvDownload","dropdownTitle","dropdownLink","Result","setDimensions","container","updateDimensions","clientHeight","clientWidth","throttledUpdateDimensions","throttle_default","handleToggleVisualizations","location","view","search","getQueryStringFromQuery","getQueryFromQueryString","getVisualization","window","addEventListener","nextProps","queryHasChanged","nextState","removeEventListener","baseQuery","byDayQuery","visualizationsToggle","downloadAsCsv","_this$props$data2","summaryData","summary","timing","duration_ms","getRowsPageRange","NUMBER_OF_SERIES_BY_DAY","onToggleEdit","_this$props$data3","onFetchPage","basicChartData","getChartData","byDayChartData","getChartDataByDay","legendData","entry","seriesName","truncate","renderSavedQueryHeader","renderQueryResultHeader","renderToggle","table","lineChart","series","legend","xAxis","renderer","barChart","isGroupedByDate","renderNote","stacked","renderSummary","pagination_Pagination","Loading","Background","loadingIndicator","SavedQueries","topSavedQuery","fetchAll","fetchSavedQueries","mini","dateUpdated","_this$state","savedQueryId","renderListItem","renderEmpty","_this$state2","renderLoading","renderList","OrganizationDiscover","updateProjects","getDateTimeFields","period","start","end","range","getUtcDateString","changeTime","datetime","updateFields","updateDateTime","_this$getDateTimeFiel","updateDateTimeAndRun","runQuery","Object","entries","slicedToArray_default","updateAndRunQuery","resultManager","org_id","analytics","trackQuery","_queryBuilder$getInte","filteredConditions","filteredAggregations","isValidAggregation","params","nextOrPrev","fetchPage","toggleSidebar","loadSavedQueries","reset","isEditingSavedQuery","deleteSavedQuery","_this$props3","updateSavedQuery","_this$props4","toggleEditMode","resp","updateSavedQueryData","current","getAll","getQueryByType","promises","fetch","hasAggregations","Promise","all","updatePageLinks","pageLinks","shouldDisplayResult","pageToFetch","cursor","reject","Error","links","parseLinkHeader","results","createResultManager","newQuery","hasChange","Date","local","views","_this$props5","toDate","renderSidebarNav","savedQueryList_SavedQueries","newQuery_NewQuery","queryPanel_QueryPanel","editSavedQuery_EditSavedQuery","hasCustomRouting","relative","showEnvironmentSelector","onChangeProjects","onUpdateProjects","onChangeTime","onUpdateTime","result","betaTag","intro_Intro","loading_Loading","oneOf","defaultProps","OrganizationDiscoverContainer","loadTags","load","setLoadedState","fetchSavedQuery","createQueryBuilder","reload","getView","hasOwnProperty","selection","timezone","getUserTimezone","getUtcToLocalDateObject","body","classList","add","cancelRequests","remove","components_alert","react_document_title_default","feature","hookName","renderDisabled","renderNoAccess","discover_OrganizationDiscover","contextTypes","withGlobalSelection"],"mappings":"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","file":"OrganizationDiscover.js","sourcesContent":["import React from 'react';\nimport styled from 'react-emotion';\nimport Tag from 'app/views/settings/components/tag';\nimport Tooltip from 'app/components/tooltip';\nimport space from 'app/styles/space';\nimport {t} from 'app/locale';\n\nconst BetaTag = () => (\n  <Tooltip\n    title={t('This feature is in beta and may change in the future.')}\n    tooltipOptions={{\n      placement: 'right',\n    }}\n  >\n    <StyledTag priority=\"beta\" size=\"small\">\n      beta\n    </StyledTag>\n  </Tooltip>\n);\n\nconst StyledTag = styled(Tag)`\n  position: relative;\n  top: -1px;\n  font-size: ${p => p.theme.fontSizeSmall};\n  font-weight: normal;\n  padding: 3px 6px;\n  margin-left: ${space(0.5)};\n  border-radius: 20px;\n`;\n\nexport default BetaTag;\n","var debounce = require('./debounce'),\n    isObject = require('./isObject');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nmodule.exports = throttle;\n","import {Flex, Box} from 'grid-emotion';\nimport {keyframes} from 'emotion';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport {Panel, PanelItem} from 'app/components/panels';\nimport {slideInLeft} from 'app/styles/animations';\nimport Button from 'app/components/button';\nimport GlobalSelectionHeader from 'app/components/organizations/globalSelectionHeader';\nimport Link from 'app/components/link';\nimport NavTabs from 'app/components/navTabs';\nimport space from 'app/styles/space';\nimport theme from 'app/utils/theme';\nimport InlineSvg from 'app/components/inlineSvg';\nimport ExternalLink from 'app/components/externalLink';\n\nconst HEADER_HEIGHT = 60;\n\nexport const DiscoverWrapper = styled(Flex)`\n  flex: 1;\n`;\n\nexport const DiscoverContainer = styled(Flex)`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n\n  margin-bottom: -20px;\n\n  .control-group {\n    margin-bottom: 0; /* Do not want the global control-group margins  */\n  }\n`;\n\nexport const DiscoverGlobalSelectionHeader = styled(GlobalSelectionHeader)`\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\n\nexport const PageTitle = styled.h2`\n  display: flex;\n  font-size: 20px;\n  font-weight: normal;\n  color: ${p => p.theme.gray4};\n  margin: 0;\n  align-items: center;\n  padding-left: ${space(4)};\n  height: ${HEADER_HEIGHT}px;\n`;\n\nexport const ResultViewActions = styled('div')`\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n  border-bottom: 1px solid ${p => p.theme.borderLight};\n  margin-bottom: ${space(3)};\n\n  @media (max-width: ${theme.breakpoints[1]}) {\n    justify-content: flex-start;\n  }\n`;\n\nexport const ResultViewButtons = styled(NavTabs)`\n  margin-bottom: 0;\n\n  @media (max-width: ${theme.breakpoints[1]}) {\n    display: none;\n  }\n`;\n\nexport const ResultViewDropdownButtons = styled('div')`\n  display: none;\n  @media (max-width: ${theme.breakpoints[1]}) {\n    display: flex;\n    margin-bottom: ${space(2)};\n  }\n`;\n\nexport const DownloadCsvButton = styled(Button)`\n  @media (max-width: ${theme.breakpoints[1]}) {\n    margin-left: ${space(0.5)};\n    top: 0;\n  }\n`;\n\nexport const Sidebar = styled(props => (\n  <Flex {...props} direction=\"column\" w={[300, 300, 300, 360]} />\n))`\n  border-right: 1px solid ${p => p.theme.borderDark};\n  background: #fff;\n  min-width: 320px;\n  position: relative;\n  padding-top: ${HEADER_HEIGHT}px;\n`;\n\nexport const QueryFieldsSidebar = styled(Flex)`\n  height: 100%;\n  flex-direction: column;\n  justify-content: flex-start;\n`;\n\nexport const DocsSeparator = styled('div')`\n  flex-grow: 1;\n  margin: ${space(3)} ${space(3)} 0;\n  border-bottom: 1px solid ${p => p.theme.borderLight};\n`;\n\nexport const DocsLink = styled(ExternalLink)`\n  color: ${p => p.theme.gray4};\n  &:hover {\n    color: ${p => p.theme.blue};\n  }\n`;\n\nexport const StyledInlineSvg = styled(InlineSvg)`\n  justify-content: flex-end;\n`;\n\nexport const DiscoverDocs = styled('span')`\n  align-items: center;\n  display: flex;\n  margin: 25px ${space(3)};\n  justify-content: space-between;\n`;\n\nexport const DocsLabel = styled('span')`\n  font-size: 15px;\n  flex-grow: 1;\n`;\n\nexport const DocsIcon = styled(InlineSvg)`\n  width: 20px;\n  height: 20px;\n  margin-right: 8px;\n`;\n\nexport const Body = styled(Flex)`\n  flex: 1;\n  flex-direction: column;\n  overflow: hidden;\n  padding-top: ${HEADER_HEIGHT}px;\n`;\n\nexport const BodyContent = styled(Flex)`\n  flex: 1;\n  flex-direction: column;\n  padding: ${space(3)} ${space(4)} ${space(4)} ${space(4)};\n  overflow-y: scroll;\n  position: relative;\n  background: ${p => p.theme.whiteDark};\n`;\n\nexport const LoadingContainer = styled(Flex)`\n  flex: 1;\n  align-items: center;\n  height: 100%;\n`;\n\nexport const SidebarTabs = styled(props => <NavTabs {...props} underlined={true} />)`\n  padding: ${space(3)} ${space(3)} 0;\n  margin: 0;\n`;\n\nexport const PlaceholderText = styled.div`\n  color: ${p => p.theme.gray6};\n  font-size: 15px;\n`;\n\nexport const HeadingContainer = styled(Flex)`\n  min-width: 70px;\n  margin: ${space(1)} 0 ${space(2)};\n  align-items: center;\n`;\n\nexport const Fieldset = styled.fieldset`\n  margin: ${space(2)} ${space(3)};\n`;\n\nexport const SelectListItem = styled(Flex)`\n  margin-top: ${space(0.5)};\n`;\n\nexport const SidebarLabel = styled.label`\n  text-transform: uppercase;\n  font-size: ${p => p.theme.fontSizeSmall};\n  color: ${p => p.theme.gray3};\n`;\n\nexport const QueryFieldsContainer = styled('div')`\n  flex: 1;\n  overflow-y: scroll;\n`;\n\nexport const AddText = styled.span`\n  font-style: italic;\n  text-decoration: underline;\n  margin-left: 4px;\n  font-size: 13px;\n  line-height: 16px;\n  color: ${p => p.theme.gray1};\n`;\n\nconst spin = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const ButtonSpinner = styled.div`\n  animation: ${spin} 0.4s linear infinite;\n  width: 14px;\n  height: 14px;\n  border-radius: 14px;\n  border-top: 2px solid ${p => p.theme.borderLight};\n  border-right: 2px solid ${p => p.theme.borderLight};\n  border-bottom: 2px solid ${p => p.theme.borderLight};\n  border-left: 2px solid ${p => p.theme.purple};\n  margin-left: 4px;\n`;\n\nexport const ResultSummary = styled(Box)`\n  color: ${p => p.theme.gray6};\n  font-size: ${p => p.theme.fontSizeSmall};\n`;\n\nexport const ResultSummaryAndButtons = styled(Flex)`\n  justify-content: space-between;\n`;\n\nexport const ResultContainer = styled('div')`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  margin-bottom: ${space(3)};\n`;\n\nexport const ResultInnerContainer = styled('div')`\n  flex: 1;\n`;\n\nexport const ChartWrapper = styled(Panel)`\n  padding: ${space(3)} ${space(2)};\n`;\n\nexport const ChartNote = styled(Box)`\n  text-align: center;\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.gray3};\n  margin-bottom: ${space(3)};\n`;\n\nexport const SavedQueryAction = styled(Link)`\n  color: ${p => p.theme.gray6};\n  margin-left: ${space(2)};\n  display: flex;\n`;\n\nexport const SavedQueryWrapper = styled('div')`\n  flex: 1;\n  overflow-y: scroll;\n`;\n\nexport const SavedQueryList = styled(Panel)`\n  margin: 0;\n  border: 0;\n  overflow: hidden;\n`;\n\nexport const SavedQueryListItem = styled(({isActive, ...props}) => (\n  <PanelItem {...props} />\n))`\n  flex-direction: column;\n  padding: 0;\n  background-color: ${p => (p.isActive ? p.theme.whiteDark : p.theme.white)};\n`;\n\nexport const SavedQueryLink = styled(Link)`\n  font-weight: 600;\n  padding: ${space(2)} ${space(4)};\n`;\n\nexport const SavedQueryUpdated = styled('div')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  color: ${p => p.theme.gray6};\n`;\n\nexport const QueryPanelContainer = styled('div')`\n  position: absolute;\n  width: calc(100% + 1px); /* Add 1px for border */\n  height: calc(100% - ${HEADER_HEIGHT}px);\n  background-color: white;\n  top: ${HEADER_HEIGHT}px;\n  border-right: 1px solid ${p => p.theme.borderLight};\n  animation: ${slideInLeft} 0.2s ease-in;\n  overflow-y: scroll;\n`;\n\nexport const QueryPanelTitle = styled(Flex)`\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 ${space(4)};\n  height: ${HEADER_HEIGHT}px;\n  border-bottom: 1px solid ${p => p.theme.borderLight};\n`;\n\nexport const QueryPanelCloseLink = styled(Link)`\n  color: ${p => p.theme.gray6};\n`;\n","import moment from 'moment';\n\nimport {CONDITION_OPERATORS} from '../data';\n\nconst specialConditions = new Set(['IS NULL', 'IS NOT NULL']);\n\n/**\n * Returns true if a condition is valid and false if not\n *\n * @param {Array} condition Condition in external Snuba format\n * @param {Object} cols List of column objects\n * @param {String} cols.name Column name\n * @param {String} cols.type Type of column\n * @returns {Boolean} True if valid condition, false if not\n */\nexport function isValidCondition(condition, cols) {\n  const allOperators = new Set(CONDITION_OPERATORS);\n  const columns = new Set(cols.map(({name}) => name));\n\n  const isColValid = columns.has(condition[0]);\n  const isOperatorValid = allOperators.has(condition[1]);\n\n  const colType = (cols.find(col => col.name === condition[0]) || {}).type;\n\n  const isValueValid =\n    specialConditions.has(condition[1]) ||\n    (colType === 'datetime' && condition[2] !== null) ||\n    colType === typeof condition[2];\n\n  return isColValid && isOperatorValid && isValueValid;\n}\n\n/***\n* Converts external Snuba format to internal format for dropdown\n*\n* @param {Array} condition Condition in external Snuba format\n* @param {Array} cols List of columns with name and type e.g. {name: 'message', type: 'string}\n* @returns {String}\n*/\nexport function getInternal(external) {\n  return external.join(' ').trim();\n}\n\n/***\n* Converts internal dropdown format to external Snuba format\n*\n* @param {String} internal Condition in internal format\n* @param {Array} {Array} cols List of columns with name and type e.g. {name: 'message', type: 'string}\n* @returns {Array} condition Condition in external Snuba format\n*/\nexport function getExternal(internal, columns) {\n  internal = internal || '';\n  const external = [null, null, null];\n\n  // Validate column\n  const colValue = internal.split(' ')[0];\n  if (new Set(columns.map(({name}) => name)).has(colValue)) {\n    external[0] = colValue;\n  }\n\n  // Validate operator\n  const remaining = (external[0] !== null\n    ? internal.replace(external[0], '')\n    : internal\n  ).trim();\n\n  // Check IS NULL and IS NOT NULL first\n  if (specialConditions.has(remaining)) {\n    external[1] = remaining;\n  } else {\n    CONDITION_OPERATORS.forEach(operator => {\n      if (remaining.startsWith(operator)) {\n        external[1] = operator;\n      }\n    });\n  }\n\n  // Validate value and convert to correct type\n  if (external[0] && external[1] && !specialConditions.has(external[1])) {\n    const strStart = `${external[0]} ${external[1]} `;\n\n    if (internal.startsWith(strStart)) {\n      external[2] = internal.replace(strStart, '');\n    }\n\n    const type = columns.find(({name}) => name === colValue).type;\n\n    if (type === 'number') {\n      const num = parseInt(external[2], 10);\n      external[2] = !isNaN(num) ? num : null;\n    }\n\n    if (type === 'boolean') {\n      if (external[2] === 'true') {\n        external[2] = true;\n      }\n      if (external[2] === 'false') {\n        external[2] = false;\n      }\n    }\n\n    if (type === 'datetime') {\n      const date = moment.utc(external[2]);\n      external[2] = date.isValid() ? date.format('YYYY-MM-DDTHH:mm:ss') : null;\n    }\n  }\n\n  return external;\n}\n\n/**\n* Transform casing of condition operators to uppercase. Applies to the operators\n* IS NULL, IS NOT NULL, LIKE and NOT LIKE\n*\n* @param {String} input Condition string as input by user\n* @returns {String}\n*/\n\nexport function ignoreCase(input = '') {\n  const colName = input.split(' ')[0];\n\n  // Strip column name from the start\n  const match = input.match(/^[\\w._]+\\s(.*)/);\n  const remaining = match ? match[1] : null;\n\n  if (!remaining) {\n    return input;\n  }\n\n  for (let i = 0; i < CONDITION_OPERATORS.length; i++) {\n    const operator = CONDITION_OPERATORS[i];\n\n    if (operator.startsWith(remaining.toUpperCase())) {\n      return `${colName} ${remaining.toUpperCase()}`;\n    } else if (remaining.toUpperCase().startsWith(operator)) {\n      return `${colName} ${operator} ${remaining.slice(operator.length + 1)}`;\n    }\n  }\n\n  return input;\n}\n","import React from 'react';\n\nimport {Value} from 'react-select';\nimport PropTypes from 'prop-types';\nimport {Box} from 'grid-emotion';\nimport SelectControl from 'app/components/forms/selectControl';\nimport {t} from 'app/locale';\n\nimport {getInternal, getExternal} from './utils';\nimport {PlaceholderText} from '../styles';\nimport {ARRAY_FIELD_PREFIXES} from '../data';\n\nexport default class Aggregation extends React.Component {\n  static propTypes = {\n    value: PropTypes.array.isRequired,\n    onChange: PropTypes.func.isRequired,\n    columns: PropTypes.array.isRequired,\n    disabled: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: '',\n      isOpen: false,\n    };\n  }\n\n  getOptions() {\n    const currentValue = getInternal(this.props.value);\n    const shouldDisplayValue = currentValue || this.state.inputValue;\n    return shouldDisplayValue ? [{label: currentValue, value: currentValue}] : [];\n  }\n\n  filterOptions = () => {\n    const input = this.state.inputValue;\n\n    let optionList = [\n      {value: 'count', label: 'count'},\n      {value: 'uniq', label: 'uniq(...)'},\n      {value: 'avg', label: 'avg(...)'},\n    ];\n\n    if (input.startsWith('uniq')) {\n      optionList = this.props.columns\n        .filter(({name}) => !ARRAY_FIELD_PREFIXES.some(prefix => name.startsWith(prefix)))\n        .map(({name}) => ({\n          value: `uniq(${name})`,\n          label: `uniq(${name})`,\n        }));\n    }\n\n    if (input.startsWith('avg')) {\n      optionList = this.props.columns\n        .filter(({type}) => type === 'number')\n        .map(({name}) => ({\n          value: `avg(${name})`,\n          label: `avg(${name})`,\n        }));\n    }\n\n    return optionList.filter(({label}) => label.includes(input));\n  };\n\n  focus() {\n    this.select.focus();\n  }\n\n  handleChange = option => {\n    if (option.value === 'uniq' || option.value === 'avg') {\n      this.setState({inputValue: option.value}, this.focus);\n    } else {\n      this.setState({inputValue: option.value, isOpen: false});\n      this.props.onChange(getExternal(option.value));\n    }\n  };\n\n  handleOpen = () => {\n    if (this.state.inputValue === '') {\n      this.setState({\n        inputValue: getInternal(this.props.value),\n        isOpen: true,\n      });\n    }\n  };\n\n  inputRenderer = props => {\n    const onChange = evt => {\n      if (evt.target.value === '') {\n        // React select won't trigger an onChange event when a value is completely\n        // cleared, so we'll force this before calling onChange\n        this.setState({inputValue: evt.target.value}, props.onChange(evt));\n      } else {\n        props.onChange(evt);\n      }\n    };\n\n    return (\n      <input\n        type=\"text\"\n        {...props}\n        onChange={onChange}\n        value={this.state.inputValue}\n        style={{width: '100%', border: 0, backgroundColor: 'transparent'}}\n      />\n    );\n  };\n\n  valueComponent = props => {\n    if (this.state.isOpen) {\n      return null;\n    }\n\n    return <Value {...props} />;\n  };\n\n  handleInputChange = value => {\n    this.setState({\n      inputValue: value,\n    });\n  };\n\n  render() {\n    return (\n      <Box w={1}>\n        <SelectControl\n          innerRef={ref => (this.select = ref)}\n          value={getInternal(this.props.value)}\n          placeholder={\n            <PlaceholderText>{t('Add aggregation function...')}</PlaceholderText>\n          }\n          options={this.getOptions()}\n          filterOptions={this.filterOptions}\n          onChange={this.handleChange}\n          onOpen={this.handleOpen}\n          closeOnSelect={true}\n          openOnFocus={true}\n          autoBlur={true}\n          clearable={false}\n          backspaceRemoves={false}\n          deleteRemoves={false}\n          inputRenderer={this.inputRenderer}\n          valueComponent={this.valueComponent}\n          onInputChange={this.handleInputChange}\n          disabled={this.props.disabled}\n        />\n      </Box>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Box} from 'grid-emotion';\n\nimport Link from 'app/components/link';\nimport InlineSvg from 'app/components/inlineSvg';\nimport {t} from 'app/locale';\n\nimport Aggregation from './aggregation';\nimport {PlaceholderText, SelectListItem, AddText, SidebarLabel} from '../styles';\n\nexport default class Aggregations extends React.Component {\n  static propTypes = {\n    value: PropTypes.array.isRequired,\n    onChange: PropTypes.func.isRequired,\n    columns: PropTypes.array,\n    disabled: PropTypes.bool,\n  };\n\n  addRow() {\n    this.props.onChange([...this.props.value, [null, null, null]]);\n  }\n\n  removeRow(idx) {\n    const aggregations = this.props.value.slice();\n    aggregations.splice(idx, 1);\n    this.props.onChange(aggregations);\n  }\n\n  handleChange(val, idx) {\n    const aggregations = this.props.value.slice();\n\n    aggregations[idx] = val;\n\n    this.props.onChange(aggregations);\n  }\n\n  render() {\n    const {value, columns, disabled} = this.props;\n\n    return (\n      <div>\n        <div>\n          <SidebarLabel>{t('Aggregation')}</SidebarLabel>\n          {!disabled && (\n            <AddText>\n              (<Link onClick={() => this.addRow()}>{t('Add')}</Link>)\n            </AddText>\n          )}\n        </div>\n        {!value.length && (\n          <PlaceholderText>{t('None, showing raw event data')}</PlaceholderText>\n        )}\n        {value.map((aggregation, idx) => (\n          <SelectListItem key={`${idx}_${aggregation[2]}`}>\n            <Aggregation\n              value={aggregation}\n              onChange={val => this.handleChange(val, idx)}\n              columns={columns}\n              disabled={disabled}\n            />\n            <Box ml={1}>\n              <a onClick={() => this.removeRow(idx)}>\n                <InlineSvg src=\"icon-circle-close\" height=\"38px\" />\n              </a>\n            </Box>\n          </SelectListItem>\n        ))}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport {Value} from 'react-select';\nimport PropTypes from 'prop-types';\nimport {Box} from 'grid-emotion';\nimport {t} from 'app/locale';\nimport SelectControl from 'app/components/forms/selectControl';\n\nimport {getInternal, getExternal, isValidCondition, ignoreCase} from './utils';\nimport {CONDITION_OPERATORS, ARRAY_FIELD_PREFIXES} from '../data';\nimport {PlaceholderText} from '../styles';\n\nexport default class Condition extends React.Component {\n  static propTypes = {\n    value: PropTypes.array.isRequired,\n    onChange: PropTypes.func.isRequired,\n    columns: PropTypes.arrayOf(\n      PropTypes.shape({name: PropTypes.string, type: PropTypes.string})\n    ).isRequired,\n    disabled: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: '',\n      isOpen: false,\n    };\n  }\n\n  focus() {\n    this.select.focus();\n  }\n\n  handleChange = option => {\n    const external = getExternal(option.value, this.props.columns);\n\n    if (isValidCondition(external, this.props.columns)) {\n      this.setState(\n        {\n          inputValue: '',\n          isOpen: false,\n        },\n        this.props.onChange(external)\n      );\n\n      return;\n    }\n\n    this.setState(\n      {\n        inputValue: option.value,\n      },\n      this.focus\n    );\n  };\n\n  handleOpen = () => {\n    if (this.state.inputValue === '') {\n      this.setState({\n        inputValue: getInternal(this.props.value),\n        isOpen: true,\n      });\n    }\n  };\n\n  getOptions() {\n    const currentValue = getInternal(this.props.value);\n    const shouldDisplayValue = currentValue || this.state.inputValue;\n    return shouldDisplayValue ? [{label: currentValue, value: currentValue}] : [];\n  }\n\n  getConditionsForColumn(colName) {\n    const column = this.props.columns.find(({name}) => name === colName);\n    const colType = column ? column.type : 'string';\n    const numberOnlyOperators = new Set(['>', '<', '>=', '<=']);\n    const stringOnlyOperators = new Set(['LIKE', 'NOT LIKE']);\n\n    return CONDITION_OPERATORS.filter(operator => {\n      if (colType === 'number' || colType === 'datetime') {\n        return !stringOnlyOperators.has(operator);\n      }\n\n      // We currently only support =, !=, LIKE and NOT LIKE on array fields\n      if (ARRAY_FIELD_PREFIXES.some(prefix => colName.startsWith(prefix))) {\n        return ['=', '!=', 'LIKE', 'NOT LIKE'].includes(operator);\n      }\n\n      // Treat everything else like a string\n      return !numberOnlyOperators.has(operator);\n    });\n  }\n\n  filterOptions = options => {\n    const input = this.state.inputValue;\n\n    let optionList = options;\n    const external = getExternal(input, this.props.columns);\n    const isValid = isValidCondition(external, this.props.columns);\n\n    if (isValid) {\n      return [];\n    }\n\n    const hasSelectedColumn = external[0] !== null;\n    const hasSelectedOperator = external[1] !== null;\n\n    if (!hasSelectedColumn) {\n      optionList = this.props.columns.map(({name}) => ({\n        value: `${name}`,\n        label: `${name}...`,\n      }));\n    }\n\n    if (hasSelectedColumn && !hasSelectedOperator) {\n      const selectedColumn = external[0];\n      optionList = this.getConditionsForColumn(selectedColumn).map(op => {\n        const value = `${selectedColumn} ${op}`;\n        return {\n          value,\n          label: value,\n        };\n      });\n    }\n\n    return optionList.filter(({label}) => label.includes(input));\n  };\n\n  isValidNewOption = ({label}) => {\n    label = ignoreCase(label);\n    return isValidCondition(getExternal(label, this.props.columns), this.props.columns);\n  };\n\n  inputRenderer = props => {\n    const onChange = evt => {\n      if (evt.target.value === '') {\n        // React select won't trigger an onChange event when a value is completely\n        // cleared, so we'll force this before calling onChange\n        this.setState({inputValue: evt.target.value}, props.onChange(evt));\n      } else {\n        props.onChange(evt);\n      }\n    };\n\n    return (\n      <input\n        type=\"text\"\n        {...props}\n        onChange={onChange}\n        value={this.state.inputValue}\n        style={{width: '100%', border: 0, zIndex: 1000, backgroundColor: 'transparent'}}\n      />\n    );\n  };\n\n  valueComponent = props => {\n    if (this.state.inputValue) {\n      return null;\n    }\n\n    return <Value {...props} />;\n  };\n\n  shouldKeyDownEventCreateNewOption = keyCode => {\n    const createKeyCodes = new Set([13, 9]); // ENTER, TAB\n    return createKeyCodes.has(keyCode);\n  };\n\n  handleInputChange = value => {\n    this.setState({\n      inputValue: ignoreCase(value),\n    });\n\n    return value;\n  };\n\n  handleBlur = evt => {\n    const external = getExternal(evt.target.value, this.props.columns);\n    const isValid = isValidCondition(external, this.props.columns);\n    if (isValid) {\n      this.setState(\n        {\n          inputValue: '',\n        },\n        this.props.onChange(external)\n      );\n    }\n  };\n\n  newOptionCreator = ({label, labelKey, valueKey}) => {\n    label = ignoreCase(label);\n    return {\n      [valueKey]: label,\n      [labelKey]: label,\n    };\n  };\n\n  render() {\n    return (\n      <Box w={1}>\n        <SelectControl\n          innerRef={ref => (this.select = ref)}\n          value={getInternal(this.props.value)}\n          placeholder={<PlaceholderText>{t('Add condition...')}</PlaceholderText>}\n          options={this.getOptions()}\n          filterOptions={this.filterOptions}\n          onChange={this.handleChange}\n          onOpen={this.handleOpen}\n          closeOnSelect={true}\n          openOnFocus={true}\n          autoBlur={true}\n          clearable={false}\n          backspaceRemoves={false}\n          deleteRemoves={false}\n          isValidNewOption={this.isValidNewOption}\n          inputRenderer={this.inputRenderer}\n          valueComponent={this.valueComponent}\n          onInputChange={this.handleInputChange}\n          onBlur={this.handleBlur}\n          creatable={true}\n          promptTextCreator={text => text}\n          shouldKeyDownEventCreateNewOption={this.shouldKeyDownEventCreateNewOption}\n          disabled={this.props.disabled}\n          newOptionCreator={this.newOptionCreator}\n        />\n      </Box>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Box} from 'grid-emotion';\n\nimport Link from 'app/components/link';\nimport InlineSvg from 'app/components/inlineSvg';\nimport {t} from 'app/locale';\n\nimport Condition from './condition';\nimport {PlaceholderText, SelectListItem, AddText, SidebarLabel} from '../styles';\n\nexport default class Conditions extends React.Component {\n  static propTypes = {\n    value: PropTypes.arrayOf(PropTypes.array).isRequired,\n    onChange: PropTypes.func.isRequired,\n    columns: PropTypes.array.isRequired,\n    disabled: PropTypes.bool,\n  };\n\n  addRow() {\n    this.props.onChange([...this.props.value, [null, null, null]]);\n  }\n\n  removeRow(idx) {\n    const conditions = this.props.value.slice();\n    conditions.splice(idx, 1);\n    this.props.onChange(conditions);\n  }\n\n  handleChange(val, idx) {\n    const conditions = this.props.value.slice();\n\n    conditions[idx] = val;\n\n    this.props.onChange(conditions);\n  }\n\n  render() {\n    const {value, columns, disabled} = this.props;\n\n    return (\n      <div>\n        <div>\n          <SidebarLabel>{t('Conditions')}</SidebarLabel>\n          {!disabled && (\n            <AddText>\n              (<Link onClick={() => this.addRow()}>{t('Add')}</Link>)\n            </AddText>\n          )}\n        </div>\n        {!value.length && (\n          <PlaceholderText>{t('None, showing all events')}</PlaceholderText>\n        )}\n        {value.map((condition, idx) => (\n          <SelectListItem key={`${idx}_${condition[2]}`}>\n            <Condition\n              value={condition}\n              onChange={val => this.handleChange(val, idx)}\n              columns={columns}\n              disabled={disabled}\n            />\n            <Box ml={1}>\n              <a onClick={() => this.removeRow(idx)}>\n                <InlineSvg src=\"icon-circle-close\" height=\"38px\" />\n              </a>\n            </Box>\n          </SelectListItem>\n        ))}\n      </div>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'react-emotion';\nimport {Flex} from 'grid-emotion';\n\nimport {t} from 'app/locale';\nimport SelectControl from 'app/components/forms/selectControl';\nimport space from 'app/styles/space';\nimport {SidebarLabel} from '../styles';\n\nexport default class Orderby extends React.Component {\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    columns: PropTypes.array.isRequired,\n    onChange: PropTypes.func.isRequired,\n    disabled: PropTypes.bool,\n  };\n\n  updateField(field) {\n    const orderby = this.getInternal(this.props.value);\n    orderby.field = field;\n    this.props.onChange(this.getExternal(orderby));\n  }\n\n  updateDirection(direction) {\n    const orderby = this.getInternal(this.props.value);\n    orderby.direction = direction;\n    this.props.onChange(this.getExternal(orderby));\n  }\n\n  /**\n   * @param {Object} value Object containing orderby information\n   * @returns {String}\n   */\n  getExternal(value) {\n    return `${value.direction === 'desc' ? '-' : ''}${value.field}`;\n  }\n\n  /**\n   * @param {String} value String containing orderby information\n   * @returns {Object}\n   */\n  getInternal(value) {\n    const direction = value.startsWith('-') ? 'desc' : 'asc';\n    const field = value.replace(/^-/, '');\n    return {\n      direction,\n      field,\n    };\n  }\n\n  render() {\n    const {disabled, columns, value} = this.props;\n\n    const {direction, field} = this.getInternal(value);\n\n    return (\n      <React.Fragment>\n        <SidebarLabel className=\"control-label\">{t('Order by')}</SidebarLabel>\n        <Flex>\n          <OrderbyField>\n            <SelectControl\n              name=\"orderbyField\"\n              options={columns}\n              value={field}\n              onChange={val => this.updateField(val.value)}\n              disabled={disabled}\n            />\n          </OrderbyField>\n          <OrderbyValue>\n            <SelectControl\n              name=\"orderbyDirection\"\n              options={[{value: 'asc', label: 'asc'}, {value: 'desc', label: 'desc'}]}\n              value={direction}\n              onChange={val => this.updateDirection(val.value)}\n              disabled={disabled}\n            />\n          </OrderbyValue>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n}\n\nconst OrderbyField = styled('div')`\n  width: calc(100% / 3 * 2);\n  padding-right: ${space(1)};\n`;\n\nconst OrderbyValue = styled('div')`\n  width: calc(100% / 3);\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {Flex} from 'grid-emotion';\n\nimport SentryTypes from 'app/sentryTypes';\nimport {t} from 'app/locale';\nimport TextField from 'app/components/forms/textField';\nimport NumberField from 'app/components/forms/numberField';\nimport SelectControl from 'app/components/forms/selectControl';\nimport Badge from 'app/components/badge';\nimport getDynamicText from 'app/utils/getDynamicText';\n\nimport Aggregations from '../aggregations';\nimport Conditions from '../conditions';\nimport {\n  Fieldset,\n  PlaceholderText,\n  SidebarLabel,\n  QueryFieldsSidebar,\n  DocsSeparator,\n  StyledInlineSvg,\n  DiscoverDocs,\n  DocsLabel,\n  DocsIcon,\n  DocsLink,\n} from '../styles';\nimport Orderby from './orderby';\nimport {NON_CONDITIONS_FIELDS} from '../data';\nimport {getOrderbyFields} from '../utils';\n\nexport default class QueryFields extends React.Component {\n  static propTypes = {\n    queryBuilder: PropTypes.object.isRequired,\n    onUpdateField: PropTypes.func.isRequired,\n    actions: PropTypes.node.isRequired,\n    isLoading: PropTypes.bool.isRequired,\n    // savedQuery, savedQueryName, and onUpdateName are provided only when it's a saved search\n    savedQuery: SentryTypes.DiscoverSavedQuery,\n    savedQueryName: PropTypes.string,\n    onUpdateName: PropTypes.func,\n  };\n\n  getSummarizePlaceholder = () => {\n    const {queryBuilder} = this.props;\n    const query = queryBuilder.getInternal();\n    const text =\n      query.aggregations.length > 0\n        ? t('Select fields')\n        : t('No fields selected, showing all');\n    return <PlaceholderText>{text}</PlaceholderText>;\n  };\n\n  optionRenderer = ({label, isTag}) => {\n    return (\n      <Flex align=\"center\">\n        {label}\n        {isTag && <Badge text=\"tag\" />}\n      </Flex>\n    );\n  };\n\n  render() {\n    const {\n      queryBuilder,\n      onUpdateField,\n      actions,\n      isLoading,\n      savedQuery,\n      savedQueryName,\n      onUpdateName,\n    } = this.props;\n\n    const currentQuery = queryBuilder.getInternal();\n    const columns = queryBuilder.getColumns();\n    // Do not allow conditions on certain fields\n    const columnsForConditions = columns.filter(\n      ({name}) => !NON_CONDITIONS_FIELDS.includes(name)\n    );\n\n    const fieldOptions = columns.map(({name, isTag}) => ({\n      value: name,\n      label: name,\n      isTag,\n    }));\n\n    return (\n      <QueryFieldsSidebar>\n        {savedQuery && (\n          <Fieldset>\n            <React.Fragment>\n              <SidebarLabel htmlFor=\"name\" className=\"control-label\">\n                {t('Name')}\n              </SidebarLabel>\n              <TextField\n                name=\"name\"\n                value={getDynamicText({value: savedQueryName, fixed: 'query name'})}\n                placeholder={t('Saved search name')}\n                onChange={val => onUpdateName(val)}\n              />\n            </React.Fragment>\n          </Fieldset>\n        )}\n        <Fieldset>\n          <SidebarLabel htmlFor=\"fields\" className=\"control-label\">\n            {t('Summarize')}\n          </SidebarLabel>\n          <SelectControl\n            name=\"fields\"\n            multiple={true}\n            placeholder={this.getSummarizePlaceholder()}\n            options={fieldOptions}\n            optionRenderer={this.optionRenderer}\n            value={currentQuery.fields}\n            onChange={val => onUpdateField('fields', val.map(({value}) => value))}\n            clearable={true}\n            disabled={isLoading}\n          />\n        </Fieldset>\n        <Fieldset>\n          <Aggregations\n            value={currentQuery.aggregations}\n            columns={columns}\n            onChange={val => onUpdateField('aggregations', val)}\n            disabled={isLoading}\n          />\n        </Fieldset>\n        <Fieldset>\n          <Conditions\n            value={currentQuery.conditions}\n            columns={columnsForConditions}\n            onChange={val => onUpdateField('conditions', val)}\n            disabled={isLoading}\n          />\n        </Fieldset>\n        <Fieldset>\n          <Orderby\n            value={currentQuery.orderby}\n            columns={getOrderbyFields(queryBuilder)}\n            onChange={val => onUpdateField('orderby', val)}\n            disabled={isLoading}\n          />\n        </Fieldset>\n        <Fieldset>\n          <NumberField\n            name=\"limit\"\n            label={<SidebarLabel>{t('Limit')}</SidebarLabel>}\n            placeholder=\"#\"\n            value={currentQuery.limit}\n            onChange={val => onUpdateField('limit', typeof val === 'number' ? val : null)}\n            disabled={isLoading}\n          />\n        </Fieldset>\n        <Fieldset>{actions}</Fieldset>\n        <DocsSeparator />\n        <DocsLink href=\"https://docs.sentry.io/product/discover/\">\n          <DiscoverDocs>\n            <DocsIcon src=\"icon-docs\" />\n            <DocsLabel>{t('Discover Documentation')}</DocsLabel>\n            <StyledInlineSvg src=\"icon-chevron-right\" size=\"1em\" />\n          </DiscoverDocs>\n        </DocsLink>\n      </QueryFieldsSidebar>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {Flex, Box} from 'grid-emotion';\nimport {isEqual} from 'lodash';\n\nimport SentryTypes from 'app/sentryTypes';\nimport Button from 'app/components/button';\nimport {t} from 'app/locale';\nimport InlineSvg from 'app/components/inlineSvg';\n\nimport QueryFields from './queryFields';\nimport {parseSavedQuery} from '../utils';\nimport {ButtonSpinner, SavedQueryAction} from '../styles';\n\nexport default class EditSavedQuery extends React.Component {\n  static propTypes = {\n    queryBuilder: PropTypes.object.isRequired,\n    onRunQuery: PropTypes.func.isRequired,\n    savedQuery: SentryTypes.DiscoverSavedQuery,\n    onUpdateField: PropTypes.func.isRequired,\n    onDeleteQuery: PropTypes.func.isRequired,\n    onSaveQuery: PropTypes.func.isRequired,\n    isFetchingQuery: PropTypes.bool.isRequired,\n    isLoading: PropTypes.bool.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      savedQueryName: props.savedQuery.name,\n    };\n  }\n\n  handleUpdateName(savedQueryName) {\n    this.setState({savedQueryName});\n  }\n\n  hasChanges() {\n    const {queryBuilder, savedQuery} = this.props;\n\n    const hasChanged =\n      !isEqual(parseSavedQuery(savedQuery), queryBuilder.getInternal()) ||\n      this.state.savedQueryName !== savedQuery.name;\n    return hasChanged;\n  }\n\n  render() {\n    const {\n      queryBuilder,\n      savedQuery,\n      isFetchingQuery,\n      onUpdateField,\n      onRunQuery,\n      onDeleteQuery,\n      onSaveQuery,\n      isLoading,\n    } = this.props;\n\n    const {savedQueryName} = this.state;\n\n    return (\n      <QueryFields\n        queryBuilder={queryBuilder}\n        onUpdateField={onUpdateField}\n        isLoading={isLoading}\n        savedQuery={savedQuery}\n        savedQueryName={this.state.savedQueryName}\n        onUpdateName={name => this.handleUpdateName(name)}\n        actions={\n          <Flex justify=\"space-between\">\n            <Flex>\n              <Box mr={1}>\n                <Button\n                  size=\"xsmall\"\n                  onClick={onRunQuery}\n                  priority=\"primary\"\n                  busy={isFetchingQuery}\n                >\n                  {t('Run')}\n                  {isFetchingQuery && <ButtonSpinner />}\n                </Button>\n              </Box>\n              <Box>\n                <Button\n                  size=\"xsmall\"\n                  onClick={() => onSaveQuery(savedQueryName)}\n                  disabled={!this.hasChanges()}\n                >\n                  {t('Save')}\n                </Button>\n              </Box>\n            </Flex>\n            <Box>\n              <SavedQueryAction data-test-id=\"delete\" onClick={onDeleteQuery}>\n                <InlineSvg src=\"icon-trash\" />\n              </SavedQueryAction>\n            </Box>\n          </Flex>\n        }\n      />\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'react-emotion';\nimport {Box} from 'grid-emotion';\n\nimport {tct, t} from 'app/locale';\n\nimport ExternalLink from 'app/components/externalLink';\nimport Button from 'app/components/button';\nimport {Panel} from 'app/components/panels';\nimport space from 'app/styles/space';\n\nexport default class Intro extends React.Component {\n  static propTypes = {\n    updateQuery: PropTypes.func.isRequired,\n  };\n\n  getExampleQueries() {\n    return [\n      {\n        title: t('Events by stack filename'),\n        description: 'What is my most problematic code?',\n        query: {\n          fields: ['stack.filename'],\n          aggregations: [['count()', null, 'count']],\n          conditions: [],\n          orderby: '-count',\n        },\n      },\n      {\n        title: t('Unique issues by user'),\n        description: t(\"Who's having the worst time?\"),\n        query: {\n          fields: ['user.id', 'user.username', 'user.email', 'user.ip'],\n          aggregations: [['uniq', 'issue.id', 'uniq_issue_id']],\n          conditions: [],\n          orderby: '-uniq_issue_id',\n        },\n      },\n      {\n        title: t('Events by geography'),\n        description: 'Are my services less reliable in some regions?',\n        query: {\n          fields: ['geo.country_code', 'geo.region', 'geo.city'],\n          aggregations: [['count()', null, 'count']],\n          conditions: [],\n          orderby: '-count',\n        },\n      },\n    ];\n  }\n\n  render() {\n    return (\n      <IntroContainer>\n        <Box w={560}>\n          <Heading>{t('Discover lets you query raw event data in Sentry')}</Heading>\n          <TextBlock>\n            {tct(\n              `Getting started? Try running one of the example queries below.\n            To learn more about how to use the query builder, [docs:see the docs].`,\n              {\n                docs: <ExternalLink href=\"https://docs.sentry.io/product/discover/\" />,\n              }\n            )}\n          </TextBlock>\n          <TextBlock>\n            {this.getExampleQueries().map(({title, description, query}, idx) => (\n              <ExampleQuery key={idx}>\n                <div>\n                  <div>{title}</div>\n                  <ExampleQueryDescription>{description}</ExampleQueryDescription>\n                </div>\n                <div>\n                  <Button size=\"small\" onClick={() => this.props.updateQuery(query)}>\n                    {t('Run')}\n                  </Button>\n                </div>\n              </ExampleQuery>\n            ))}\n          </TextBlock>\n        </Box>\n      </IntroContainer>\n    );\n  }\n}\n\nconst IntroContainer = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: ${p => p.theme.fontSizeLarge};\n  color: ${p => p.theme.gray5};\n  width: 100%;\n  height: 100%;\n  min-height: 420px;\n  min-width: 500px;\n`;\n\nconst Heading = styled('div')`\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n  font-weight: 700;\n  margin: 0 0 20px;\n`;\n\nconst TextBlock = styled('div')`\n  margin: 0 0 20px;\n`;\n\nconst ExampleQuery = styled(Panel)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${space(2)};\n`;\nconst ExampleQueryDescription = styled('div')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  color: ${p => p.theme.gray1};\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {Flex, Box} from 'grid-emotion';\nimport {browserHistory} from 'react-router';\n\nimport Button from 'app/components/button';\nimport {t, tct} from 'app/locale';\nimport {addSuccessMessage, addErrorMessage} from 'app/actionCreators/indicator';\nimport SentryTypes from 'app/sentryTypes';\n\nimport QueryFields from './queryFields';\nimport {createSavedQuery, generateQueryName} from '../utils';\nimport {ButtonSpinner, QueryFieldsContainer} from '../styles';\n\nexport default class NewQuery extends React.Component {\n  static propTypes = {\n    organization: SentryTypes.Organization,\n    queryBuilder: PropTypes.object.isRequired,\n    onRunQuery: PropTypes.func.isRequired,\n    onReset: PropTypes.func.isRequired,\n    onUpdateField: PropTypes.func.isRequired,\n    isFetchingQuery: PropTypes.bool.isRequired,\n    isLoading: PropTypes.bool.isRequired,\n  };\n\n  saveQuery() {\n    const {organization, queryBuilder} = this.props;\n    const savedQueryName = generateQueryName();\n    const data = {...queryBuilder.getInternal(), name: savedQueryName};\n\n    createSavedQuery(organization, data)\n      .then(savedQuery => {\n        addSuccessMessage(tct('Successfully saved query [name]', {name: savedQueryName}));\n        browserHistory.push({\n          pathname: `/organizations/${organization.slug}/discover/saved/${savedQuery.id}/`,\n          query: {editing: true},\n        });\n      })\n      .catch(err => {\n        const message = (err && err.detail) || t('Could not save query');\n        addErrorMessage(message);\n      });\n  }\n\n  render() {\n    const {\n      queryBuilder,\n      onRunQuery,\n      onReset,\n      isFetchingQuery,\n      onUpdateField,\n      isLoading,\n    } = this.props;\n    return (\n      <QueryFieldsContainer>\n        <QueryFields\n          queryBuilder={queryBuilder}\n          onUpdateField={onUpdateField}\n          isLoading={isLoading}\n          actions={\n            <Flex justify=\"space-between\">\n              <Flex>\n                <Box mr={1}>\n                  <Button\n                    size=\"xsmall\"\n                    onClick={onRunQuery}\n                    priority=\"primary\"\n                    busy={isFetchingQuery}\n                  >\n                    {t('Run')}\n                    {isFetchingQuery && <ButtonSpinner />}\n                  </Button>\n                </Box>\n                <Box>\n                  <Button size=\"xsmall\" onClick={() => this.saveQuery()}>\n                    {t('Save')}\n                  </Button>\n                </Box>\n              </Flex>\n              <Box>\n                <Button size=\"xsmall\" onClick={onReset}>\n                  {t('Reset')}\n                </Button>\n              </Box>\n            </Flex>\n          }\n        />\n      </QueryFieldsContainer>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport InlineSvg from 'app/components/inlineSvg';\nimport PageHeading from 'app/components/pageHeading';\n\nimport {QueryPanelContainer, QueryPanelTitle, QueryPanelCloseLink} from '../styles';\n\nexport default class QueryPanel extends React.Component {\n  static propTypes = {\n    title: PropTypes.node.isRequired,\n    onClose: PropTypes.func.isRequired,\n  };\n  render() {\n    const {title, onClose} = this.props;\n    return (\n      <QueryPanelContainer>\n        <QueryPanelTitle>\n          <PageHeading>{title}</PageHeading>\n\n          <QueryPanelCloseLink onClick={onClose}>\n            <InlineSvg src=\"icon-close\" height=\"38px\" />\n          </QueryPanelCloseLink>\n        </QueryPanelTitle>\n        {this.props.children}\n      </QueryPanelContainer>\n    );\n  }\n}\n","import React from 'react';\nimport {MultiGrid, AutoSizer} from 'react-virtualized';\nimport PropTypes from 'prop-types';\nimport styled from 'react-emotion';\nimport {t} from 'app/locale';\nimport SentryTypes from 'app/sentryTypes';\nimport Link from 'app/components/link';\nimport Tooltip from 'app/components/tooltip';\nimport Panel from 'app/components/panels/panel';\nimport EmptyStateWarning from 'app/components/emptyStateWarning';\nimport withOrganization from 'app/utils/withOrganization';\n\nimport {getDisplayValue, getDisplayText} from './utils';\n\nconst TABLE_ROW_HEIGHT = 30;\nconst TABLE_ROW_BORDER = 1;\nconst TABLE_ROW_HEIGHT_WITH_BORDER = TABLE_ROW_HEIGHT + TABLE_ROW_BORDER;\nconst MIN_COL_WIDTH = 100;\nconst MAX_COL_WIDTH = 500;\nconst CELL_PADDING = 22;\nconst MIN_VISIBLE_ROWS = 6;\nconst MAX_VISIBLE_ROWS = 30;\nconst OTHER_ELEMENTS_HEIGHT = 70; // pagination buttons, query summary\n\n/**\n * Renders results in a table as well as a query summary (timing, rows returned)\n * from any Snuba result\n */\nclass ResultTable extends React.Component {\n  static propTypes = {\n    organization: SentryTypes.Organization.isRequired,\n    data: PropTypes.object.isRequired,\n    query: PropTypes.object.isRequired,\n    height: PropTypes.number,\n    width: PropTypes.number,\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.data.meta !== prevProps.data.meta) {\n      this.grid.recomputeGridSize();\n    }\n\n    if (this.props.width !== prevProps.width) {\n      this.forceUpdate(() => this.grid.recomputeGridSize());\n    }\n  }\n\n  getCellRenderer = cols => ({key, rowIndex, columnIndex, style}) => {\n    const {data: {data, meta}} = this.props;\n\n    const isSpacingCol = columnIndex === cols.length;\n\n    const colName = isSpacingCol ? null : cols[columnIndex].name;\n\n    const isNumberCol =\n      !isSpacingCol && ['number', 'integer'].includes(meta[columnIndex].type);\n\n    const align = isNumberCol && colName != 'issue.id' ? 'right' : 'left';\n\n    if (rowIndex === 0) {\n      return (\n        <TableHeader key={key} style={style} align={align}>\n          <strong>{colName}</strong>\n        </TableHeader>\n      );\n    }\n\n    let value = isSpacingCol ? null : getDisplayValue(data[rowIndex - 1][colName]);\n\n    // check for id column\n    if (columnIndex < cols.length && cols[columnIndex].name === 'id') {\n      value = this.getEventLink(data[rowIndex - 1]);\n    }\n\n    // check for issue.id columm\n    if (columnIndex < cols.length && cols[columnIndex].name === 'issue.id') {\n      value = this.getIssueLink(data[rowIndex - 1]);\n    }\n\n    return (\n      <Cell key={key} style={style} isOddRow={rowIndex % 2 === 1} align={align}>\n        {value}\n      </Cell>\n    );\n  };\n\n  hasSentry10 = () => {\n    return new Set(this.props.organization.features).has('sentry10');\n  };\n\n  getEventLink = event => {\n    const {slug, projects} = this.props.organization;\n    const projectSlug = projects.find(project => project.id === `${event['project.id']}`)\n      .slug;\n\n    const basePath = this.hasSentry10()\n      ? `/organizations/${slug}/projects/${projectSlug}/`\n      : `/${slug}/${projectSlug}/`;\n\n    return (\n      <Tooltip title={t('Open event')}>\n        <Link href={`${basePath}events/${event.id}/`} target=\"_blank\">\n          {event.id}\n        </Link>\n      </Tooltip>\n    );\n  };\n\n  getIssueLink = event => {\n    const {slug, projects} = this.props.organization;\n    const projectSlug = projects.find(project => project.id === `${event['project.id']}`)\n      .slug;\n\n    const basePath = this.hasSentry10()\n      ? `/organizations/${slug}/`\n      : `/${slug}/${projectSlug}/`;\n\n    return (\n      <Tooltip title={t('Open issue')}>\n        <Link to={`${basePath}issues/${event['issue.id']}`} target=\"_blank\">\n          {event['issue.id']}\n        </Link>\n      </Tooltip>\n    );\n  };\n\n  // Returns an array of column widths for each column in the table.\n  // Estimates the column width based on the header row and the longest three\n  // rows of data. Since this might be expensive, we'll only do this if there\\\n  // are less than 20 columns of data to check in total.\n  // Adds an empty column at the end with the remaining table width if any.\n  getColumnWidths = tableWidth => {\n    const {data: {data}} = this.props;\n    const cols = this.getColumnList();\n\n    const widths = [];\n\n    if (cols.length < 20) {\n      cols.forEach(col => {\n        const colName = col.name;\n        const sizes = [this.measureText(colName, true)];\n\n        // Get top 3 unique results sorted by string length\n        // We want to avoid calling measureText() too much so only do this\n        // for the top 3 longest strings\n        const uniqs = [...new Set(data.map(row => row[colName]))]\n          .map(colData => getDisplayText(colData))\n          .sort((a, b) => b.length - a.length)\n          .slice(0, 3);\n\n        uniqs.forEach(colData => {\n          sizes.push(this.measureText(colData, false));\n        });\n\n        // Ensure size is within max and min bounds, add 20px for cell padding\n        const width = Math.max(\n          Math.min(Math.max(...sizes) + CELL_PADDING, MAX_COL_WIDTH),\n          MIN_COL_WIDTH\n        );\n\n        widths.push(width);\n      });\n    } else {\n      cols.forEach(() => {\n        widths.push(MIN_COL_WIDTH);\n      });\n    }\n\n    const sumOfWidths = widths.reduce((sum, w) => sum + w, 0) + 2;\n\n    // Add a fake column of remaining width\n    widths.push(Math.max(tableWidth - sumOfWidths, 0));\n\n    return widths;\n  };\n\n  getRowHeight = (rowIndex, columnsToCheck) => {\n    const {data: {data}} = this.props;\n\n    if (rowIndex === 0) {\n      return TABLE_ROW_HEIGHT_WITH_BORDER;\n    }\n\n    const row = data[rowIndex - 1]; // -1 offset due to header row\n    const colWidths = columnsToCheck.map(col => {\n      return this.measureText(getDisplayText(row[col]), false);\n    });\n    const maxColWidth = Math.max(...colWidths, 0);\n\n    // Number of rows to be rendered based on text content divided by cell width\n    // Apply a min of 1 and max of 3\n    const rows = Math.max(\n      Math.min(Math.ceil(maxColWidth / (MAX_COL_WIDTH - CELL_PADDING)), 3),\n      1\n    );\n\n    return TABLE_ROW_HEIGHT * rows + TABLE_ROW_BORDER;\n  };\n\n  getColumnList = () => {\n    const {query, data: {meta}} = this.props;\n\n    const fields = new Set([\n      ...(query.fields || []),\n      ...query.aggregations.map(agg => agg[2]),\n    ]);\n\n    return meta.filter(({name}) => fields.has(name));\n  };\n\n  measureText = (text, isHeader) => {\n    // Create canvas once in order to measure column widths\n    if (!this.canvas) {\n      this.canvas = document.createElement('canvas');\n    }\n    const context = this.canvas.getContext('2d');\n    context.font = isHeader ? 'bold 14px Rubik' : 'normal 14px Rubik';\n\n    // The measureText function sometimes slightly miscalculates text width.\n    // Add 5px to compensate since we want to avoid rows breaking unnecessarily.\n    // (better to over than under estimate)\n    return Math.ceil(context.measureText(text).width) + 5;\n  };\n\n  getMaxVisibleRows = elementHeight => {\n    if (!elementHeight) {\n      return MIN_VISIBLE_ROWS;\n    }\n\n    // subtract header row, pagination buttons and query summary\n    const height = elementHeight - TABLE_ROW_HEIGHT_WITH_BORDER - OTHER_ELEMENTS_HEIGHT;\n\n    const visibleRows = Math.floor(height / TABLE_ROW_HEIGHT_WITH_BORDER);\n\n    // Apply min/max\n    return Math.max(Math.min(visibleRows, MAX_VISIBLE_ROWS), MIN_VISIBLE_ROWS);\n  };\n\n  renderTable() {\n    const {data: {data}, height} = this.props;\n\n    const cols = this.getColumnList();\n\n    // Add one column at the end to make sure table spans full width\n    const colCount = cols.length + 1;\n\n    const visibleRows = this.getMaxVisibleRows(height);\n\n    const cellRenderer = this.getCellRenderer(cols);\n\n    return (\n      <Panel>\n        <Grid visibleRows={Math.min(data.length, visibleRows) + 1}>\n          <AutoSizer>\n            {size => {\n              const columnWidths = this.getColumnWidths(size.width);\n\n              // Since calculating row height might be expensive, we'll only\n              // perform the check against a subset of columns (where col width\n              // has exceeded the max value)\n              const columnsToCheck = columnWidths.reduce((acc, colWidth, idx) => {\n                if (colWidth === MAX_COL_WIDTH) {\n                  acc.push(cols[idx].name);\n                }\n                return acc;\n              }, []);\n\n              return (\n                <MultiGrid\n                  ref={ref => (this.grid = ref)}\n                  width={size.width - 1}\n                  height={size.height}\n                  rowCount={data.length + 1}\n                  columnCount={colCount}\n                  fixedRowCount={1}\n                  rowHeight={({index}) => this.getRowHeight(index, columnsToCheck)}\n                  columnWidth={({index}) => columnWidths[index]}\n                  cellRenderer={cellRenderer}\n                  overscanByPixels={800}\n                />\n              );\n            }}\n          </AutoSizer>\n        </Grid>\n        {!data.length && (\n          <EmptyStateWarning small={true}>{t('No results')}</EmptyStateWarning>\n        )}\n      </Panel>\n    );\n  }\n\n  render() {\n    const {error} = this.props.data;\n\n    if (error) {\n      return <div>{error}</div>;\n    }\n\n    return <div>{this.renderTable()}</div>;\n  }\n}\n\nexport {ResultTable};\nexport default withOrganization(ResultTable);\n\nconst Grid = styled(({visibleRows, ...props}) => <div {...props} />)`\n  height: ${p =>\n    p.visibleRows * TABLE_ROW_HEIGHT_WITH_BORDER +\n    2}px; /* cell height + cell border + top and bottom Panel border */\n  overflow: hidden;\n\n  .ReactVirtualized__Grid {\n    outline: none;\n  }\n`;\n\nconst Cell = styled('div')`\n  ${p => !p.isOddRow && `background-color: ${p.theme.whiteDark};`} ${p =>\n      `text-align: ${p.align};`} overflow: scroll;\n  font-size: 14px;\n  line-height: ${TABLE_ROW_HEIGHT}px;\n  padding: 0 10px;\n  border-top: 1px solid ${p => p.theme.borderLight};\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n\n  @-moz-document url-prefix() {\n    overflow: hidden;\n  }\n\n  -ms-overflow-style: -ms-autohiding-scrollbar;\n`;\n\nconst TableHeader = styled(Cell)`\n  background: ${p => p.theme.offWhite};\n  color: ${p => p.theme.gray3};\n  border-top: none;\n  border-bottom: 1px solid ${p => p.theme.borderDark};\n  &:first-of-type {\n    border-top-left-radius: 3px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'react-emotion';\nimport {Flex} from 'grid-emotion';\n\nimport Button from 'app/components/button';\n\nexport default class Pagination extends React.Component {\n  static propTypes = {\n    getNextPage: PropTypes.func.isRequired,\n    getPreviousPage: PropTypes.func.isRequired,\n    previous: PropTypes.string,\n    next: PropTypes.string,\n  };\n\n  render() {\n    const {getPreviousPage, getNextPage, previous, next} = this.props;\n\n    return (\n      <PaginationButtons className=\"btn-group\">\n        <Button\n          className=\"btn\"\n          disabled={!previous}\n          size=\"xsmall\"\n          icon=\"icon-chevron-left\"\n          onClick={getPreviousPage}\n        />\n        <Button\n          className=\"btn\"\n          disabled={!next}\n          size=\"xsmall\"\n          icon=\"icon-chevron-right\"\n          onClick={getNextPage}\n        />\n      </PaginationButtons>\n    );\n  }\n}\n\nconst PaginationButtons = styled(Flex)`\n  justify-content: flex-end;\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport DropdownLink from 'app/components/dropdownLink';\nimport MenuItem from 'app/components/menuItem';\nimport {t} from 'app/locale';\n\nimport {\n  ResultViewActions,\n  ResultViewButtons,\n  ResultViewDropdownButtons,\n  DownloadCsvButton,\n} from '../styles';\n\nclass VisualizationsToggle extends React.Component {\n  static propTypes = {\n    options: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n      })\n    ).isRequired,\n    handleChange: PropTypes.func.isRequired,\n    handleCsvDownload: PropTypes.func.isRequired,\n    visualization: PropTypes.string.isRequired,\n  };\n\n  getMenuItem = opt => {\n    return (\n      <MenuItem\n        key={opt.id}\n        onSelect={this.props.handleChange}\n        eventKey={opt.id}\n        isActive={opt.id === this.props.visualization}\n      >\n        {opt.name}\n      </MenuItem>\n    );\n  };\n\n  getButtonItems = opt => {\n    const active = opt.id === this.props.visualization;\n    return (\n      <li key={opt.id} className={classNames({active})}>\n        <a onClick={() => this.props.handleChange(opt.id)}>{opt.name}</a>\n      </li>\n    );\n  };\n\n  getDownloadCsvButton = () => {\n    const {handleCsvDownload} = this.props;\n    return (\n      <DownloadCsvButton onClick={handleCsvDownload} icon=\"icon-download\" size=\"xsmall\">\n        {t('Export CSV')}\n      </DownloadCsvButton>\n    );\n  };\n\n  render() {\n    const {options, visualization} = this.props;\n    const name = options.find(opt => opt.id === visualization).name;\n    const dropdownTitle = t(`View: ${name}`);\n\n    return (\n      <ResultViewActions>\n        <ResultViewButtons>\n          {options.map(opt => {\n            return this.getButtonItems(opt);\n          })}\n        </ResultViewButtons>\n        <ResultViewDropdownButtons>\n          <DropdownLink title={dropdownTitle} className={'btn btn-default btn-sm'}>\n            {options.map(opt => {\n              return this.getMenuItem(opt);\n            })}\n          </DropdownLink>\n        </ResultViewDropdownButtons>\n        {this.getDownloadCsvButton()}\n      </ResultViewActions>\n    );\n  }\n}\n\nexport default VisualizationsToggle;\n","import React from 'react';\nimport {browserHistory} from 'react-router';\nimport PropTypes from 'prop-types';\nimport {throttle, isEqual} from 'lodash';\n\nimport SentryTypes from 'app/sentryTypes';\nimport {t} from 'app/locale';\nimport getDynamicText from 'app/utils/getDynamicText';\nimport BarChart from 'app/components/charts/barChart';\nimport LineChart from 'app/components/charts/lineChart';\nimport InlineSvg from 'app/components/inlineSvg';\nimport PageHeading from 'app/components/pageHeading';\n\nimport {\n  getChartData,\n  getChartDataByDay,\n  getRowsPageRange,\n  downloadAsCsv,\n  getVisualization,\n} from './utils';\nimport Table from './table';\nimport Pagination from './pagination';\nimport VisualizationsToggle from './visualizationsToggle';\nimport {\n  HeadingContainer,\n  ResultSummary,\n  ResultContainer,\n  ResultInnerContainer,\n  ChartWrapper,\n  ChartNote,\n  SavedQueryAction,\n  ResultSummaryAndButtons,\n} from '../styles';\nimport {NUMBER_OF_SERIES_BY_DAY} from '../data';\nimport {\n  queryHasChanged,\n  getQueryFromQueryString,\n  getQueryStringFromQuery,\n} from '../utils';\n\nclass Result extends React.Component {\n  static propTypes = {\n    data: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired,\n    savedQuery: SentryTypes.DiscoverSavedQuery, // Provided if it's a saved search\n    onFetchPage: PropTypes.func.isRequired,\n    onToggleEdit: PropTypes.func,\n    utc: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      view: getVisualization(props.data, props.location.query.visualization),\n      height: null,\n      width: null,\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.throttledUpdateDimensions);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {data, location} = nextProps;\n    const visualization = getVisualization(data, location.query.visualization);\n\n    if (queryHasChanged(this.props.location.search, nextProps.location.search)) {\n      const search = getQueryStringFromQuery(getQueryFromQueryString(location.search), {\n        visualization,\n      });\n\n      this.setState({view: visualization});\n      browserHistory.replace({\n        pathname: location.pathname,\n        search,\n      });\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      (nextProps.location.state === 'fetching' &&\n        nextProps.location.state !== this.props.location.state) ||\n      !isEqual(nextProps, this.props) ||\n      !isEqual(nextState, this.state)\n    );\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.throttledUpdateDimensions);\n  }\n\n  setDimensions = ref => {\n    this.container = ref;\n    if (ref && this.state.height === null) {\n      this.updateDimensions();\n    }\n  };\n\n  updateDimensions = () => {\n    if (!this.container) {\n      return;\n    }\n\n    this.setState({\n      height: this.container.clientHeight,\n      width: this.container.clientWidth,\n    });\n  };\n\n  throttledUpdateDimensions = throttle(this.updateDimensions, 200, {trailing: true});\n\n  handleToggleVisualizations = opt => {\n    const {location} = this.props;\n    this.setState({\n      view: opt,\n    });\n\n    const search = getQueryStringFromQuery(getQueryFromQueryString(location.search), {\n      visualization: opt,\n    });\n\n    browserHistory.push({\n      pathname: location.pathname,\n      search,\n    });\n  };\n\n  renderToggle() {\n    const {baseQuery, byDayQuery} = this.props.data;\n\n    const options = [{id: 'table', name: t('Table')}];\n\n    if (baseQuery.query.aggregations.length) {\n      options.push({id: 'line', name: t('Line')}, {id: 'bar', name: t('Bar')});\n    }\n\n    if (byDayQuery.data) {\n      options.push(\n        {id: 'line-by-day', name: t('Line by Day')},\n        {id: 'bar-by-day', name: t('Bar by Day')}\n      );\n    }\n\n    const handleCsvDownload = () => downloadAsCsv(baseQuery.data);\n\n    return (\n      <div>\n        <VisualizationsToggle\n          options={options}\n          handleChange={this.handleToggleVisualizations}\n          handleCsvDownload={handleCsvDownload}\n          visualization={this.state.view}\n        />\n      </div>\n    );\n  }\n\n  renderSummary() {\n    const {baseQuery, byDayQuery} = this.props.data;\n    const baseViews = ['table', 'line', 'bar'];\n    const summaryData = baseViews.includes(this.state.view)\n      ? baseQuery.data\n      : byDayQuery.data;\n\n    const summary = [\n      `query time: ${getDynamicText({\n        value: summaryData.timing.duration_ms,\n        fixed: '10',\n      })} ms`,\n    ];\n    if (this.state.view === 'table') {\n      summary.push(getRowsPageRange(baseQuery));\n    }\n    return <ResultSummary>{summary.join(', ')}</ResultSummary>;\n  }\n\n  renderNote() {\n    return (\n      <ChartNote>{t(`Displaying up to ${NUMBER_OF_SERIES_BY_DAY} results`)}</ChartNote>\n    );\n  }\n\n  renderSavedQueryHeader() {\n    return (\n      <React.Fragment>\n        <PageHeading>\n          {getDynamicText({value: this.props.savedQuery.name, fixed: 'saved query'})}\n        </PageHeading>\n        <SavedQueryAction onClick={this.props.onToggleEdit}>\n          <InlineSvg src=\"icon-edit\" />\n        </SavedQueryAction>\n      </React.Fragment>\n    );\n  }\n\n  renderQueryResultHeader() {\n    return <PageHeading>{t('Result')}</PageHeading>;\n  }\n\n  render() {\n    const {data: {baseQuery, byDayQuery}, savedQuery, onFetchPage, utc} = this.props;\n\n    const {view} = this.state;\n\n    const basicChartData = getChartData(baseQuery.data.data, baseQuery.query);\n\n    const byDayChartData =\n      byDayQuery.data && getChartDataByDay(byDayQuery.data.data, byDayQuery.query);\n\n    const legendData = byDayChartData\n      ? {data: byDayChartData.map(entry => entry.seriesName), truncate: 80}\n      : null;\n\n    const tooltipOptions = {\n      filter: value => value !== null,\n      truncate: 80,\n    };\n\n    return (\n      <ResultContainer data-test-id=\"result\">\n        <div>\n          <HeadingContainer>\n            {savedQuery ? this.renderSavedQueryHeader() : this.renderQueryResultHeader()}\n          </HeadingContainer>\n          {this.renderToggle()}\n        </div>\n        <ResultInnerContainer innerRef={this.setDimensions}>\n          {view === 'table' && (\n            <Table\n              data={baseQuery.data}\n              query={baseQuery.query}\n              height={this.state.height}\n              width={this.state.width}\n            />\n          )}\n          {view === 'line' && (\n            <ChartWrapper>\n              <LineChart\n                series={basicChartData}\n                height={300}\n                tooltip={tooltipOptions}\n                legend={{data: [baseQuery.query.aggregations[0][2]], truncate: 80}}\n                xAxis={{truncate: 80}}\n                renderer=\"canvas\"\n              />\n            </ChartWrapper>\n          )}\n          {view === 'bar' && (\n            <ChartWrapper>\n              <BarChart\n                series={basicChartData}\n                height={300}\n                tooltip={tooltipOptions}\n                legend={{data: [baseQuery.query.aggregations[0][2]], truncate: 80}}\n                xAxis={{truncate: 80}}\n                renderer=\"canvas\"\n              />\n            </ChartWrapper>\n          )}\n          {view === 'line-by-day' && (\n            <ChartWrapper>\n              <LineChart\n                series={byDayChartData}\n                height={300}\n                tooltip={tooltipOptions}\n                legend={legendData}\n                renderer=\"canvas\"\n                isGroupedByDate={true}\n                utc={utc}\n              />\n              {this.renderNote()}\n            </ChartWrapper>\n          )}\n          {view === 'bar-by-day' && (\n            <ChartWrapper>\n              <BarChart\n                series={byDayChartData}\n                stacked={true}\n                height={300}\n                tooltip={tooltipOptions}\n                legend={legendData}\n                renderer=\"canvas\"\n                isGroupedByDate={true}\n                utc={utc}\n              />\n              {this.renderNote()}\n            </ChartWrapper>\n          )}\n          <ResultSummaryAndButtons>\n            {this.renderSummary()}\n            {!baseQuery.query.aggregations.length && (\n              <Pagination\n                previous={baseQuery.previous}\n                next={baseQuery.next}\n                getNextPage={() => onFetchPage('next')}\n                getPreviousPage={() => onFetchPage('previous')}\n              />\n            )}\n          </ResultSummaryAndButtons>\n        </ResultInnerContainer>\n      </ResultContainer>\n    );\n  }\n}\n\nexport default Result;\n","import React from 'react';\nimport styled from 'react-emotion';\n\nimport LoadingIndicator from 'app/components/loadingIndicator';\n\nimport {LoadingContainer} from '../styles';\n\nexport default class Loading extends React.Component {\n  render() {\n    return (\n      <Background>\n        <LoadingContainer>\n          <LoadingIndicator />\n        </LoadingContainer>\n      </Background>\n    );\n  }\n}\n\nexport const Background = styled('div')`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  background-color: rgba(250, 249, 251, 0.7);\n`;\n","import React from 'react';\nimport moment from 'moment';\nimport {Flex} from 'grid-emotion';\n\nimport SentryTypes from 'app/sentryTypes';\nimport getDynamicText from 'app/utils/getDynamicText';\n\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport {t, tct} from 'app/locale';\n\nimport {fetchSavedQueries} from '../utils';\nimport {\n  Fieldset,\n  SavedQueryList,\n  SavedQueryListItem,\n  SavedQueryLink,\n  SavedQueryUpdated,\n} from '../styles';\n\nexport default class SavedQueries extends React.Component {\n  static propTypes = {\n    organization: SentryTypes.Organization.isRequired,\n    // provided if it's a saved query\n    savedQuery: SentryTypes.DiscoverSavedQuery,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {isLoading: true, data: [], topSavedQuery: props.savedQuery};\n  }\n\n  componentDidMount() {\n    this.fetchAll();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // Refetch on deletion\n    if (!nextProps.savedQuery && this.props.savedQuery !== nextProps.savedQuery) {\n      this.fetchAll();\n    }\n\n    // Update query in the list with new data\n    if (nextProps.savedQuery && nextProps.savedQuery !== this.props.savedQuery) {\n      const data = this.state.data.map(\n        savedQuery =>\n          savedQuery.id === nextProps.savedQuery.id ? nextProps.savedQuery : savedQuery\n      );\n      this.setState({data});\n    }\n\n    // Update saved query if any name / details have been updated\n    if (\n      nextProps.savedQuery &&\n      (!this.state.topSavedQuery ||\n        nextProps.savedQuery.id === this.state.topSavedQuery.id)\n    ) {\n      this.setState({\n        topSavedQuery: nextProps.savedQuery,\n      });\n    }\n  }\n\n  fetchAll() {\n    fetchSavedQueries(this.props.organization)\n      .then(data => {\n        this.setState({isLoading: false, data});\n      })\n      .catch(() => {\n        this.setState({isLoading: false});\n      });\n  }\n\n  renderLoading() {\n    return (\n      <Fieldset>\n        <Flex justify=\"center\">\n          <LoadingIndicator mini />\n        </Flex>\n      </Fieldset>\n    );\n  }\n\n  renderEmpty() {\n    return <Fieldset>{t('No saved queries')}</Fieldset>;\n  }\n\n  renderListItem(query) {\n    const {savedQuery} = this.props;\n\n    const {id, name, dateUpdated} = query;\n    const {organization} = this.props;\n    return (\n      <SavedQueryListItem key={id} isActive={savedQuery && savedQuery.id === id}>\n        <SavedQueryLink to={`/organizations/${organization.slug}/discover/saved/${id}/`}>\n          {getDynamicText({value: name, fixed: 'saved query'})}\n          <SavedQueryUpdated>\n            {tct('Updated [date] (UTC)', {\n              date: getDynamicText({\n                value: moment.utc(dateUpdated).format('MMM DD HH:mm:ss'),\n                fixed: 'update-date',\n              }),\n            })}\n          </SavedQueryUpdated>\n        </SavedQueryLink>\n      </SavedQueryListItem>\n    );\n  }\n\n  renderList() {\n    const {data, topSavedQuery} = this.state;\n\n    const savedQueryId = topSavedQuery ? topSavedQuery.id : null;\n\n    if (!data.length) {\n      return this.renderEmpty();\n    }\n\n    return data.map(query => {\n      return query.id !== savedQueryId ? this.renderListItem(query) : null;\n    });\n  }\n\n  render() {\n    const {topSavedQuery, isLoading} = this.state;\n\n    return (\n      <SavedQueryList>\n        {topSavedQuery && this.renderListItem(topSavedQuery)}\n        {isLoading ? this.renderLoading() : this.renderList()}\n      </SavedQueryList>\n    );\n  }\n}\n","import {browserHistory} from 'react-router';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport moment from 'moment';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {getUtcDateString} from 'app/utils/dates';\nimport {t, tct} from 'app/locale';\nimport {updateProjects, updateDateTime} from 'app/actionCreators/globalSelection';\nimport BetaTag from 'app/components/betaTag';\nimport SentryTypes from 'app/sentryTypes';\nimport PageHeading from 'app/components/pageHeading';\n\nimport {\n  DiscoverContainer,\n  DiscoverGlobalSelectionHeader,\n  Body,\n  BodyContent,\n  HeadingContainer,\n  Sidebar,\n  SidebarTabs,\n  SavedQueryWrapper,\n} from './styles';\nimport {\n  getQueryStringFromQuery,\n  getQueryFromQueryString,\n  deleteSavedQuery,\n  updateSavedQuery,\n  queryHasChanged,\n} from './utils';\nimport {isValidAggregation} from './aggregations/utils';\nimport {isValidCondition} from './conditions/utils';\nimport {trackQuery} from './analytics';\nimport EditSavedQuery from './sidebar/editSavedQuery';\nimport Intro from './intro';\nimport NewQuery from './sidebar/newQuery';\nimport QueryPanel from './sidebar/queryPanel';\nimport Result from './result';\nimport ResultLoading from './result/loading';\nimport SavedQueryList from './sidebar/savedQueryList';\nimport createResultManager from './resultManager';\n\nexport default class OrganizationDiscover extends React.Component {\n  static propTypes = {\n    organization: SentryTypes.Organization.isRequired,\n    location: PropTypes.object.isRequired,\n    queryBuilder: PropTypes.object.isRequired,\n    // savedQuery and isEditingSavedQuery are provided if it's a saved query\n    savedQuery: SentryTypes.DiscoverSavedQuery,\n    isEditingSavedQuery: PropTypes.bool,\n    updateSavedQueryData: PropTypes.func.isRequired,\n    view: PropTypes.oneOf(['query', 'saved']),\n    toggleEditMode: PropTypes.func.isRequired,\n    isLoading: PropTypes.bool.isRequired,\n    utc: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    utc: true,\n  };\n\n  constructor(props) {\n    super(props);\n    const resultManager = createResultManager(props.queryBuilder);\n    this.state = {\n      resultManager,\n      data: resultManager.getAll(),\n      isFetchingQuery: false,\n      isEditingSavedQuery: props.isEditingSavedQuery,\n      savedQueryName: null,\n      view: props.view || 'query',\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {\n      queryBuilder,\n      location: {search},\n      savedQuery,\n      isEditingSavedQuery,\n      params,\n      isLoading,\n    } = nextProps;\n    const {resultManager} = this.state;\n\n    // Run query on isLoading change if there is a querystring or saved search\n    const loadingStatusChanged = isLoading !== this.props.isLoading;\n    if (loadingStatusChanged && (savedQuery || !!search)) {\n      this.runQuery();\n      return;\n    }\n\n    if (savedQuery && savedQuery !== this.props.savedQuery) {\n      this.setState({view: 'saved'});\n      this.runQuery();\n    }\n\n    if (isEditingSavedQuery !== this.props.isEditingSavedQuery) {\n      this.setState({isEditingSavedQuery});\n      return;\n    }\n\n    if (!queryHasChanged(this.props.location.search, nextProps.location.search)) {\n      return;\n    }\n\n    const newQuery = getQueryFromQueryString(search);\n    // Clear data only if location.search is empty (reset has been called)\n    if (!search && !params.savedQueryId) {\n      queryBuilder.reset(newQuery);\n      resultManager.reset();\n      this.setState({\n        data: resultManager.getAll(),\n      });\n    } else if (search) {\n      // This indicates navigation changes (e.g. back button on browser)\n      // We need to update our search store and probably runQuery\n      const {projects, range, start, end, utc} = newQuery;\n      let hasChange = false;\n\n      if (projects) {\n        this.updateProjects(projects);\n        hasChange = true;\n      }\n\n      if (range || (end && start)) {\n        this.updateDateTime({\n          period: range || null,\n          start: start || null,\n          end: end || null,\n          utc: typeof utc !== 'undefined' ? utc : null,\n        });\n\n        // These props come from URL string, so will always be in UTC\n        updateDateTime({\n          start: start && new Date(moment.utc(start).local()),\n          end: end && new Date(moment.utc(end).local()),\n          period: range,\n          utc,\n        });\n        hasChange = true;\n      }\n\n      if (hasChange) {\n        this.runQuery();\n      }\n    }\n  }\n\n  updateProjects = val => {\n    this.updateField('projects', val);\n    updateProjects(val);\n  };\n\n  getDateTimeFields = ({period, start, end, utc}) => ({\n    range: period || null,\n    utc,\n    start: (start && getUtcDateString(start)) || null,\n    end: (end && getUtcDateString(end)) || null,\n  });\n\n  changeTime = datetime => {\n    this.updateFields(this.getDateTimeFields(datetime));\n  };\n\n  updateDateTime = datetime => {\n    const {start, end, range, utc} = this.getDateTimeFields(datetime);\n\n    this.updateFields({start, end, range, utc});\n  };\n\n  // Called when global selection header changes dates\n  updateDateTimeAndRun = datetime => {\n    this.updateDateTime(datetime);\n    this.runQuery();\n  };\n\n  updateField = (field, value) => {\n    this.props.queryBuilder.updateField(field, value);\n    this.forceUpdate();\n  };\n\n  updateFields = query => {\n    Object.entries(query).forEach(([field, value]) => {\n      this.updateField(field, value);\n    });\n  };\n\n  updateAndRunQuery = query => {\n    this.updateFields(query);\n    this.runQuery();\n  };\n\n  runQuery = () => {\n    const {queryBuilder, organization, location} = this.props;\n    const {resultManager} = this.state;\n\n    // Track query for analytics\n    trackQuery(organization, queryBuilder.getExternal());\n\n    // Strip any invalid conditions and aggregations\n    const {conditions, aggregations} = queryBuilder.getInternal();\n    const filteredConditions = conditions.filter(condition =>\n      isValidCondition(condition, queryBuilder.getColumns())\n    );\n\n    const filteredAggregations = aggregations.filter(aggregation =>\n      isValidAggregation(aggregation, queryBuilder.getColumns())\n    );\n\n    if (filteredConditions.length !== conditions.length) {\n      this.updateField('conditions', filteredConditions);\n    }\n\n    if (filteredAggregations.length !== aggregations.length) {\n      this.updateField('aggregations', filteredAggregations);\n    }\n\n    this.setState({isFetchingQuery: true});\n\n    resultManager\n      .fetchAll()\n      .then(data => {\n        const shouldRedirect = !this.props.params.savedQueryId;\n\n        if (shouldRedirect) {\n          browserHistory.push({\n            pathname: `/organizations/${organization.slug}/discover/`,\n            // This is kind of a hack, but this causes a re-render in result where this.props == nextProps after\n            // a query has completed... we don't preserve `state` when we update browser history, so\n            // if this is present in `Result.shouldComponentUpdate` then should perform a render\n            state: 'fetching',\n            // Don't drop \"visualization\" from querystring\n            search: getQueryStringFromQuery(queryBuilder.getInternal(), {\n              ...(location.query.visualization && {\n                visualization: location.query.visualization,\n              }),\n            }),\n          });\n        }\n\n        this.setState({\n          data,\n          isFetchingQuery: false,\n        });\n      })\n      .catch(err => {\n        const message = (err && err.message) || t('An error occurred');\n        addErrorMessage(message);\n        this.setState({isFetchingQuery: false});\n      });\n  };\n\n  onFetchPage = nextOrPrev => {\n    this.setState({isFetchingQuery: true});\n    return this.state.resultManager\n      .fetchPage(nextOrPrev)\n      .then(data => {\n        this.setState({data, isFetchingQuery: false});\n      })\n      .catch(err => {\n        const message = (err && err.message) || t('An error occurred');\n        addErrorMessage(message);\n        this.setState({isFetchingQuery: false});\n      });\n  };\n\n  toggleSidebar = view => {\n    if (view !== this.state.view) {\n      this.setState({view});\n      browserHistory.replace({\n        pathname: `/organizations/${this.props.organization.slug}/discover/`,\n        query: {...this.props.location.query, view},\n      });\n    }\n  };\n\n  loadSavedQueries = () => {\n    browserHistory.push({\n      pathname: `/organizations/${this.props.organization.slug}/discover/`,\n      query: {view: 'saved'},\n    });\n  };\n\n  reset = () => {\n    const {savedQuery, queryBuilder, organization} = this.props;\n    if (savedQuery) {\n      queryBuilder.reset(savedQuery);\n      this.setState({\n        isEditingSavedQuery: false,\n      });\n    } else {\n      browserHistory.push({\n        pathname: `/organizations/${organization.slug}/discover/`,\n      });\n    }\n  };\n\n  deleteSavedQuery = () => {\n    const {organization, savedQuery} = this.props;\n    const {resultManager} = this.state;\n\n    deleteSavedQuery(organization, savedQuery.id)\n      .then(() => {\n        addSuccessMessage(\n          tct('Successfully deleted query [name]', {\n            name: savedQuery.name,\n          })\n        );\n        resultManager.reset();\n        this.loadSavedQueries();\n      })\n      .catch(() => {\n        addErrorMessage(t('Could not delete query'));\n        this.setState({isFetchingQuery: false});\n      });\n  };\n\n  updateSavedQuery = name => {\n    const {queryBuilder, savedQuery, organization, toggleEditMode} = this.props;\n    const query = queryBuilder.getInternal();\n\n    const data = {...query, name};\n\n    updateSavedQuery(organization, savedQuery.id, data)\n      .then(resp => {\n        addSuccessMessage(t('Updated query'));\n        toggleEditMode(); // Return to read-only mode\n        this.props.updateSavedQueryData(resp);\n      })\n      .catch(() => {\n        addErrorMessage(t('Could not update query'));\n      });\n  };\n\n  renderSidebarNav() {\n    const {view} = this.state;\n    const views = [\n      {id: 'query', title: t('New query')},\n      {id: 'saved', title: t('Saved queries')},\n    ];\n\n    return (\n      <React.Fragment>\n        <SidebarTabs underlined={true}>\n          {views.map(({id, title}) => (\n            <li key={id} className={view === id ? 'active' : ''}>\n              <a onClick={() => this.toggleSidebar(id)}>{title}</a>\n            </li>\n          ))}\n        </SidebarTabs>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const {data, isFetchingQuery, view, resultManager, isEditingSavedQuery} = this.state;\n\n    const {\n      queryBuilder,\n      organization,\n      savedQuery,\n      toggleEditMode,\n      isLoading,\n      location,\n      utc,\n    } = this.props;\n\n    const currentQuery = queryBuilder.getInternal();\n\n    const shouldDisplayResult = resultManager.shouldDisplayResult();\n\n    const start =\n      (currentQuery.start &&\n        moment(currentQuery.start)\n          .local()\n          .toDate()) ||\n      currentQuery.start;\n    const end =\n      (currentQuery.end &&\n        moment(currentQuery.end)\n          .local()\n          .toDate()) ||\n      currentQuery.end;\n\n    return (\n      <DiscoverContainer>\n        <Sidebar>\n          {this.renderSidebarNav()}\n          {view === 'saved' && (\n            <SavedQueryWrapper>\n              <SavedQueryList organization={organization} savedQuery={savedQuery} />\n            </SavedQueryWrapper>\n          )}\n          {view === 'query' && (\n            <NewQuery\n              organization={organization}\n              queryBuilder={queryBuilder}\n              isFetchingQuery={isFetchingQuery || isLoading}\n              onUpdateField={this.updateField}\n              onRunQuery={this.runQuery}\n              onReset={this.reset}\n              isLoading={isLoading}\n            />\n          )}\n          {isEditingSavedQuery &&\n            savedQuery && (\n              <QueryPanel title={t('Edit Query')} onClose={toggleEditMode}>\n                <EditSavedQuery\n                  savedQuery={savedQuery}\n                  queryBuilder={queryBuilder}\n                  isFetchingQuery={isFetchingQuery}\n                  onUpdateField={this.updateField}\n                  onRunQuery={this.runQuery}\n                  onReset={this.reset}\n                  onDeleteQuery={this.deleteSavedQuery}\n                  onSaveQuery={this.updateSavedQuery}\n                  isLoading={isLoading}\n                />\n              </QueryPanel>\n            )}\n        </Sidebar>\n\n        <DiscoverGlobalSelectionHeader\n          organization={organization}\n          projects={currentQuery.projects}\n          hasCustomRouting={true}\n          relative={currentQuery.range}\n          start={start}\n          end={end}\n          utc={utc}\n          showEnvironmentSelector={false}\n          onChangeProjects={this.updateProjects}\n          onUpdateProjects={this.runQuery}\n          onChangeTime={this.changeTime}\n          onUpdateTime={this.updateDateTimeAndRun}\n        />\n\n        <Body>\n          <BodyContent>\n            {shouldDisplayResult && (\n              <Result\n                location={location}\n                utc={utc}\n                data={data}\n                savedQuery={savedQuery}\n                onToggleEdit={toggleEditMode}\n                onFetchPage={this.onFetchPage}\n              />\n            )}\n            {!shouldDisplayResult && (\n              <React.Fragment>\n                <div>\n                  <HeadingContainer>\n                    <PageHeading>\n                      {t('Discover')} <BetaTag />\n                    </PageHeading>\n                  </HeadingContainer>\n                </div>\n                <Intro updateQuery={this.updateAndRunQuery} />\n              </React.Fragment>\n            )}\n            {isFetchingQuery && <ResultLoading />}\n          </BodyContent>\n        </Body>\n      </DiscoverContainer>\n    );\n  }\n}\n","import {analytics} from 'app/utils/analytics';\n\n/**\n * Takes an organization and query and tracks in Redash as discover.query.\n * Scrubs strings in conditions in case they contain sensitive customer data.\n *\n * @param {Object} organization Current organization\n * @param {Object} query Query that is sent to Snuba\n * @returns {Void}\n */\nexport function trackQuery(organization, query) {\n  const data = {\n    org_id: parseInt(organization.id, 10),\n    projects: query.projects,\n    fields: query.fields,\n    aggregations: query.aggregations,\n    orderby: query.orderby,\n  };\n\n  if (typeof query.limit === 'number') {\n    data.limit = query.limit;\n  }\n\n  data.conditions = query.conditions.map(condition => {\n    return [\n      condition[0],\n      condition[1],\n      typeof condition[2] === 'string' ? '[REDACTED]' : condition[2],\n    ];\n  });\n\n  analytics('discover.query', data);\n}\n","/*eslint no-use-before-define: [\"error\", { \"functions\": false }]*/\n\n/**\n * This function is responsible for fetching and storing result data for\n * result tables and visualizations.\n */\nimport parseLinkHeader from 'app/utils/parseLinkHeader';\n\nexport default function createResultManager(queryBuilder) {\n  let data = getDefault();\n\n  return {\n    getAll,\n    fetchAll,\n    reset,\n    shouldDisplayResult,\n    fetchPage,\n  };\n\n  /**\n   * Returns data of next or previous page\n   * @param {String} pageToFetch\n   * @returns {Promise<Object>}\n   */\n  function fetchPage(pageToFetch) {\n    const query = queryBuilder.getExternal();\n    const baseQuery = queryBuilder.getQueryByType(query, 'baseQuery');\n\n    const cursor = data.baseQuery[pageToFetch];\n\n    if (cursor) {\n      return queryBuilder.fetch(baseQuery, cursor).then(resp => {\n        data.baseQuery.current = cursor;\n        data.baseQuery.query = query;\n        data.baseQuery.data = resp;\n        updatePageLinks(resp.pageLinks);\n\n        return data;\n      });\n    }\n    return Promise.reject(new Error('No New Page Available'));\n  }\n\n  /**\n   * Returns data for all relevant visualizations.\n   *\n   * @returns {Promise<Object>}\n   */\n  function getAll() {\n    return data;\n  }\n\n  /**\n   * Fetches data for all relevant visualizations.\n   * Always fetches base query data, and fetches by-day data only if the\n   * current query contains an aggregation.\n   *\n   * @returns {Promise<Object>}\n   */\n  function fetchAll() {\n    const query = queryBuilder.getExternal();\n    const baseQuery = queryBuilder.getQueryByType(query, 'baseQuery');\n    const byDayQuery = queryBuilder.getQueryByType(query, 'byDayQuery');\n\n    const promises = [queryBuilder.fetch(baseQuery)];\n\n    const hasAggregations = query.aggregations.length > 0;\n\n    // If there are aggregations, get by-day data\n    if (hasAggregations) {\n      promises.push(queryBuilder.fetch(byDayQuery));\n    }\n\n    return Promise.all(promises).then(resp => {\n      data.baseQuery.query = query;\n      data.baseQuery.data = resp[0];\n      data.baseQuery.current = '0:0:1';\n      updatePageLinks(resp[0].pageLinks);\n\n      if (hasAggregations) {\n        data.byDayQuery.query = byDayQuery;\n        data.byDayQuery.data = resp[1];\n      } else {\n        data.byDayQuery.query = null;\n        data.byDayQuery.data = null;\n      }\n      return data;\n    });\n  }\n\n  /**\n   * Parses the Links header and sets the relevant next and previous cursor\n   * values on the data object\n   *\n   * @param {Object} pageLinks\n   * @returns {Void}\n   */\n  function updatePageLinks(pageLinks) {\n    if (!pageLinks) {\n      return;\n    }\n    const links = parseLinkHeader(pageLinks);\n    data.baseQuery.next = links.next.results ? links.next.cursor : null;\n    data.baseQuery.previous = links.previous.results ? links.previous.cursor : null;\n  }\n\n  /**\n   * Resets data for all visualizations.\n   *\n   * @returns {Void}\n   */\n  function reset() {\n    data = getDefault();\n  }\n\n  /**\n   * Returns default data object to store results of all queries\n   *\n   * @returns {Object}\n   */\n  function getDefault() {\n    return {\n      baseQuery: {query: null, data: null, next: null, previous: null, current: null},\n      byDayQuery: {query: null, data: null},\n    };\n  }\n\n  /**\n   * Returns a boolean indicating whether the result should be displayed.\n   * If there is base data available this is true.\n   *\n   * @returns {Boolean}\n   */\n  function shouldDisplayResult() {\n    return data.baseQuery.data !== null;\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {browserHistory} from 'react-router';\nimport DocumentTitle from 'react-document-title';\n\nimport {getUserTimezone, getUtcToLocalDateObject} from 'app/utils/dates';\nimport {t} from 'app/locale';\nimport {updateProjects, updateDateTime} from 'app/actionCreators/globalSelection';\nimport withGlobalSelection from 'app/utils/withGlobalSelection';\nimport Feature from 'app/components/acl/feature';\nimport Alert from 'app/components/alert';\nimport SentryTypes from 'app/sentryTypes';\n\nimport Discover from './discover';\nimport createQueryBuilder from './queryBuilder';\n\nimport {\n  getQueryFromQueryString,\n  fetchSavedQuery,\n  parseSavedQuery,\n  getView,\n} from './utils';\n\nimport {DiscoverWrapper} from './styles';\n\nclass OrganizationDiscoverContainer extends React.Component {\n  static contextTypes = {\n    organization: SentryTypes.Organization,\n  };\n\n  static propTypes = {\n    selection: PropTypes.object.isRequired,\n  };\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      isLoading: true,\n      savedQuery: null,\n      view: getView(props.params, props.location.query.view),\n    };\n\n    const {search} = props.location;\n    const {organization} = context;\n\n    const query = getQueryFromQueryString(search);\n\n    if (query.hasOwnProperty('projects')) {\n      // Update global store with projects from querystring\n      updateProjects(query.projects);\n    } else {\n      // Update query with global projects\n      query.projects = props.selection.projects;\n    }\n\n    if (['range', 'start', 'end'].some(key => query.hasOwnProperty(key))) {\n      // Update global store with datetime from querystring\n      const timezone = getUserTimezone();\n\n      // start/end will always be in UTC, however we need to coerce into\n      // system time for date picker to be able to synced.\n      updateDateTime({\n        start: (query.start && getUtcToLocalDateObject(query.start)) || null,\n        end: (query.end && getUtcToLocalDateObject(query.end)) || null,\n        period: query.range || null,\n        utc: query.utc || timezone === 'UTC',\n      });\n    } else {\n      // Update query with global datetime values\n      query.start = props.selection.datetime.start;\n      query.end = props.selection.datetime.end;\n      query.range = props.selection.datetime.period;\n      query.utc = props.selection.datetime.utc;\n    }\n\n    this.queryBuilder = createQueryBuilder(query, organization);\n  }\n\n  componentDidMount() {\n    document.body.classList.add('body-discover');\n\n    const {savedQueryId} = this.props.params;\n\n    if (savedQueryId) {\n      this.loadTags()\n        .then(() => this.fetchSavedQuery(savedQueryId))\n        .then(this.setLoadedState);\n    } else {\n      this.loadTags().then(this.setLoadedState);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.params.savedQueryId) {\n      this.setState({savedQuery: null});\n      // Reset querybuilder if we're switching from a saved query\n      if (this.props.params.savedQueryId) {\n        const projects = nextProps.selection.projects;\n        this.queryBuilder.reset({projects});\n      }\n      return;\n    }\n\n    if (nextProps.params.savedQueryId !== this.props.params.savedQueryId) {\n      this.fetchSavedQuery(nextProps.params.savedQueryId);\n    }\n\n    if (nextProps.location.query.view !== this.props.location.query.view) {\n      this.setState({view: getView(nextProps.params, nextProps.location.query.view)});\n    }\n  }\n\n  componentWillUnmount() {\n    this.queryBuilder.cancelRequests();\n    document.body.classList.remove('body-discover');\n  }\n\n  loadTags = () => {\n    return this.queryBuilder.load();\n  };\n\n  setLoadedState = () => {\n    this.setState({isLoading: false});\n  };\n\n  fetchSavedQuery = savedQueryId => {\n    const {organization} = this.context;\n\n    return fetchSavedQuery(organization, savedQueryId)\n      .then(resp => {\n        if (this.queryBuilder) {\n          this.queryBuilder.reset(parseSavedQuery(resp));\n        } else {\n          this.queryBuilder = createQueryBuilder(parseSavedQuery(resp), organization);\n        }\n\n        this.setState({isLoading: false, savedQuery: resp, view: 'saved'});\n      })\n      .catch(() => {\n        browserHistory.push({\n          pathname: `/organizations/${organization.slug}/discover/`,\n          query: {view: 'saved'},\n        });\n        window.location.reload();\n      });\n  };\n\n  updateSavedQuery = savedQuery => {\n    this.setState({savedQuery});\n  };\n\n  toggleEditMode = () => {\n    const {organization} = this.context;\n    const {savedQuery} = this.state;\n    const isEditingSavedQuery = this.props.location.query.editing === 'true';\n\n    const newQuery = {...this.props.location.query};\n    if (!isEditingSavedQuery) {\n      newQuery.editing = 'true';\n    } else {\n      delete newQuery.editing;\n    }\n\n    browserHistory.push({\n      pathname: `/organizations/${organization.slug}/discover/saved/${savedQuery.id}/`,\n      query: newQuery,\n    });\n  };\n\n  renderNoAccess() {\n    return <Alert type=\"warning\">{t(\"You don't have access to this feature\")}</Alert>;\n  }\n\n  render() {\n    const {isLoading, savedQuery, view} = this.state;\n\n    const {location, params, selection} = this.props;\n\n    const {organization} = this.context;\n\n    return (\n      <DocumentTitle title={`Discover - ${organization.slug} - Sentry`}>\n        <Feature\n          features={['organizations:discover']}\n          hookName=\"discover-page\"\n          organization={organization}\n          renderDisabled={this.renderNoAccess}\n        >\n          <DiscoverWrapper>\n            <Discover\n              utc={selection.datetime.utc}\n              isLoading={isLoading}\n              organization={organization}\n              queryBuilder={this.queryBuilder}\n              location={location}\n              params={params}\n              savedQuery={savedQuery}\n              isEditingSavedQuery={this.props.location.query.editing === 'true'}\n              updateSavedQueryData={this.updateSavedQuery}\n              view={view}\n              toggleEditMode={this.toggleEditMode}\n            />\n          </DiscoverWrapper>\n        </Feature>\n      </DocumentTitle>\n    );\n  }\n}\n\nexport default withGlobalSelection(OrganizationDiscoverContainer);\nexport {OrganizationDiscoverContainer};\n"],"sourceRoot":""}