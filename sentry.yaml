---
apiVersion: v1
kind: Template
metadata:
  name: sentry
objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      sentry-component: redis
      service: sentry
    name: redis
  spec:
    replicas: 1
    selector:
      matchLabels:
        sentry-component: redis
    progressDeadlineSeconds: 600
    revisionHistoryLimit: 10
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
    template:
      metadata:
        labels:
          sentry-component: redis
      spec:
        containers:
        - name: redis
          image: registry.redhat.io/rhel8/redis-5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          ports:
          - containerPort: 6379
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 1
              memory: 512Mi
            requests:
              cpu: 1
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      sentry-component: sentry-cron
      service: sentry
    name: sentry-cron
  spec:
    replicas: 1
    selector:
      matchLabels:
        sentry-component: sentry-cron
    progressDeadlineSeconds: 600
    revisionHistoryLimit: 10
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
    template:
      metadata:
        labels:
          sentry-component: sentry-cron
      spec:
        containers:
        - name: sentry-cron
          image: ${IMAGE}:${IMAGE_TAG}
          imagePullPolicy: Always
          command:
          - sentry
          - run
          - cron
          env:
          - name: SENTRY_POSTGRES_HOST
            valueFrom:
               secretKeyRef:
                 name: sentry-rds
                 key: db.host
          - name: SENTRY_POSTGRES_PORT
            valueFrom:
               secretKeyRef:
                 name: sentry-rds
                 key: db.port
          - name: SENTRY_DB_NAME
            valueFrom:
               secretKeyRef:
                 name: sentry-rds
                 key: db.name
          - name: SENTRY_DB_USER
            valueFrom:
               secretKeyRef:
                 name: sentry-rds
                 key: db.user
          - name: SENTRY_DB_PASSWORD
            valueFrom:
               secretKeyRef:
                 name: sentry-rds
                 key: db.password
          - name: SENTRY_EMAIL_HOST
            valueFrom:
              secretKeyRef:
                name: smtp
                key: server
          - name: SENTRY_EMAIL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: smtp
                key: username
          - name: SENTRY_EMAIL_USER
            valueFrom:
              secretKeyRef:
                name: smtp
                key: password
          - name: SENTRY_EMAIL_PORT
            valueFrom:
              secretKeyRef:
                name: smtp
                key: port
          - name: SENTRY_EMAIL_USE_TLS
            valueFrom:
              secretKeyRef:
                name: smtp
                key: require_tls
          envFrom:
          - configMapRef:
              name: sentry
          - secretRef:
              name: sentry-github-oauth
          - secretRef:
              name: sentry-general
          resources:
            limits:
              cpu: 1
              memory: 512Mi
            requests:
              cpu: 1
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/sentry/
            name: config-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: sentry
          name: config-volume
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      sentry-component: sentry-web
      service: sentry
    name: sentry-web
  spec:
    replicas: 2
    selector:
      matchLabels:
        sentry-component: sentry-web
    progressDeadlineSeconds: 600
    revisionHistoryLimit: 10
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
    template:
      metadata:
        labels:
          sentry-component: sentry-web
      spec:
        containers:
        - name: sentry-web
          image: ${IMAGE}:${IMAGE_TAG}
          imagePullPolicy: Always
          command:
          - sentry
          - run
          - web
          env:
          - name: SENTRY_POSTGRES_HOST
            valueFrom:
               secretKeyRef:
                 name: sentry-rds
                 key: db.host
          - name: SENTRY_POSTGRES_PORT
            valueFrom:
               secretKeyRef:
                 name: sentry-rds
                 key: db.port
          - name: SENTRY_DB_NAME
            valueFrom:
               secretKeyRef:
                 name: sentry-rds
                 key: db.name
          - name: SENTRY_DB_USER
            valueFrom:
               secretKeyRef:
                 name: sentry-rds
                 key: db.user
          - name: SENTRY_DB_PASSWORD
            valueFrom:
               secretKeyRef:
                 name: sentry-rds
                 key: db.password
          - name: SENTRY_EMAIL_HOST
            valueFrom:
              secretKeyRef:
                name: smtp
                key: server
          - name: SENTRY_EMAIL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: smtp
                key: username
          - name: SENTRY_EMAIL_USER
            valueFrom:
              secretKeyRef:
                name: smtp
                key: password
          - name: SENTRY_EMAIL_PORT
            valueFrom:
              secretKeyRef:
                name: smtp
                key: port
          - name: SENTRY_EMAIL_USE_TLS
            valueFrom:
              secretKeyRef:
                name: smtp
                key: require_tls
          envFrom:
          - configMapRef:
              name: sentry
          - secretRef:
              name: sentry-github-oauth
          - secretRef:
              name: sentry-general
          ports:
          - containerPort: 9000
            protocol: TCP
          resources:
            limits:
              cpu: 1
              memory: 512Mi
            requests:
              cpu: 1
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: sentry
          name: config-volume
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      sentry-component: sentry-worker
      service: sentry
    name: sentry-worker
  spec:
    replicas: 1
    selector:
      matchLabels:
        sentry-component: sentry-worker
    progressDeadlineSeconds: 600
    revisionHistoryLimit: 10
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
    template:
      metadata:
        labels:
          sentry-component: sentry-worker
      spec:
        containers:
        - name: sentry-worker
          image: ${IMAGE}:${IMAGE_TAG}
          imagePullPolicy: Always
          command:
          - sentry
          - run
          - worker
          env:
          - name: SENTRY_POSTGRES_HOST
            valueFrom:
               secretKeyRef:
                 name: sentry-rds
                 key: db.host
          - name: SENTRY_POSTGRES_PORT
            valueFrom:
               secretKeyRef:
                 name: sentry-rds
                 key: db.port
          - name: SENTRY_DB_NAME
            valueFrom:
               secretKeyRef:
                 name: sentry-rds
                 key: db.name
          - name: SENTRY_DB_USER
            valueFrom:
               secretKeyRef:
                 name: sentry-rds
                 key: db.user
          - name: SENTRY_DB_PASSWORD
            valueFrom:
               secretKeyRef:
                 name: sentry-rds
                 key: db.password
          - name: SENTRY_EMAIL_HOST
            valueFrom:
              secretKeyRef:
                name: smtp
                key: server
          - name: SENTRY_EMAIL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: smtp
                key: username
          - name: SENTRY_EMAIL_USER
            valueFrom:
              secretKeyRef:
                name: smtp
                key: password
          - name: SENTRY_EMAIL_PORT
            valueFrom:
              secretKeyRef:
                name: smtp
                key: port
          - name: SENTRY_EMAIL_USE_TLS
            valueFrom:
              secretKeyRef:
                name: smtp
                key: require_tls
          envFrom:
          - configMapRef:
              name: sentry
          - secretRef:
              name: sentry-github-oauth
          - secretRef:
              name: sentry-general
          resources:
            limits:
              cpu: 1
              memory: 512Mi
            requests:
              cpu: 1
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/sentry/
            name: config-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: sentry
          name: config-volume
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      sentry-component: redis
      service: sentry
    name: redis
  spec:
    ports:
    - port: 6379
      protocol: TCP
      targetPort: 6379
    selector:
      sentry-component: redis
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      sentry-component: sentry
      service: sentry
    name: sentry
  spec:
    ports:
    - name: http
      port: 9000
      protocol: TCP
      targetPort: 9000
    selector:
      sentry-component: sentry-web
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
parameters:
parameters:
- name: IMAGE
  value: quay.io/app-sre/sentry
  displayName: sentry image
  description: sentry docker image. Defaults to quay.io/app-sre/sentry
- name: IMAGE_TAG
  value: "latest"
  displayName: sentry version
  description: sentry version which defaults to latest
